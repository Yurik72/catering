2020-07-02 10:22:15.851 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.862 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.865 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.868 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.870 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.872 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.875 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.877 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.879 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.882 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.885 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.887 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'AvgPrice' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.889 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.892 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.894 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.897 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.900 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:22:15.933 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:22:16.625 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2020-07-02 10:22:16.744 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-07-02 10:22:16.914 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2020-07-02 10:22:17.038 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: Creating key {763c8850-d52b-4546-836e-93c1b7408928} with creation date 2020-07-02 07:22:17Z, activation date 2020-07-02 07:22:16Z, and expiration date 2020-09-30 07:22:16Z.
2020-07-02 10:22:17.060 +03:00 [Information] Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository: Writing data to file 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys\key-763c8850-d52b-4546-836e-93c1b7408928.xml'.
2020-07-02 10:22:17.375 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:22:17.387 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:22:17.466 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:22:17.482 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:22:17.500 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:22:17,1
2020-07-02 10:22:17.517 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:22:17.526 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:22:17.534 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2020-07-02 10:22:17.535 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2020-07-02 10:22:17.537 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2020-07-02 10:22:17.557 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:22:17.585 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2020-07-02 10:22:17.596 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2020-07-02 10:22:17.662 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 10:22:17.704 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:22:17.707 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:22:17,2
2020-07-02 10:22:17.710 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:22:17.714 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2020-07-02 10:22:17.767 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 10:22:17.771 +03:00 [Error] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: The view 'Index' was not found. Searched locations: /Views/Home/Index.uk.cshtml, /Views/Home/Index.cshtml, /Views/Shared/Index.uk.cshtml, /Views/Shared/Index.cshtml, /Pages/Shared/Index.uk.cshtml, /Pages/Shared/Index.cshtml
2020-07-02 10:22:17.787 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 65.779ms
2020-07-02 10:22:17.791 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 10:22:17.897 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The view 'Index' was not found. The following locations were searched:
/Views/Home/Index.uk.cshtml
/Views/Home/Index.cshtml
/Views/Shared/Index.uk.cshtml
/Views/Shared/Index.cshtml
/Pages/Shared/Index.uk.cshtml
/Pages/Shared/Index.cshtml
   at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2020-07-02 10:22:17.937 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Boolean), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [MassEmail] SET [CompanyId] = @p0, [DayFrom] = @p1, [DayTo] = @p2, [DistributionList] = @p3, [DistributionType] = @p4, [Greetings] = @p5, [Name] = @p6, [NextSend] = @p7, [OnePerUser] = @p8, [Schedule] = @p9, [Subject] = @p10, [TemplateName] = @p11, [TemplateText] = @p12, [Text] = @p13
WHERE [Id] = @p14;
SELECT @@ROWCOUNT;
2020-07-02 10:22:17.985 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 401.732ms 500 text/html; charset=utf-8
2020-07-02 10:22:17.987 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Boolean), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [MassEmail] SET [CompanyId] = @p0, [DayFrom] = @p1, [DayTo] = @p2, [DistributionList] = @p3, [DistributionType] = @p4, [Greetings] = @p5, [Name] = @p6, [NextSend] = @p7, [OnePerUser] = @p8, [Schedule] = @p9, [Subject] = @p10, [TemplateName] = @p11, [TemplateText] = @p12, [Text] = @p13
WHERE [Id] = @p14;
SELECT @@ROWCOUNT;
2020-07-02 10:22:17.993 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Boolean), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [MassEmail] SET [CompanyId] = @p0, [DayFrom] = @p1, [DayTo] = @p2, [DistributionList] = @p3, [DistributionType] = @p4, [Greetings] = @p5, [Name] = @p6, [NextSend] = @p7, [OnePerUser] = @p8, [Schedule] = @p9, [Subject] = @p10, [TemplateName] = @p11, [TemplateText] = @p12, [Text] = @p13
WHERE [Id] = @p14;
SELECT @@ROWCOUNT;
2020-07-02 10:22:18.004 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:22:18.242 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/favicon.ico  
2020-07-02 10:22:18.283 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\favicon.ico'
2020-07-02 10:22:18.289 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.086400000000005ms 200 image/x-icon
2020-07-02 10:25:17.575 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:25:17.585 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:25:17.596 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:25:17.600 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:25:17.602 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:25:17.605 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:25:17.613 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:25:17,1
2020-07-02 10:25:17.615 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:25:17.621 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:25:17.628 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:25:17.680 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:25:17,2
2020-07-02 10:25:17.682 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:41:35.237 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.251 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.253 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.255 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.258 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.261 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.263 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.265 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.267 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.269 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.272 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.274 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'AvgPrice' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.277 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.279 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.282 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.284 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.286 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 10:41:35.331 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:41:35.850 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2020-07-02 10:41:35.964 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-07-02 10:41:36.173 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2020-07-02 10:41:36.556 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:41:36.563 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:41:36.662 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:41:36.670 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2020-07-02 10:41:36.672 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2020-07-02 10:41:36.674 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2020-07-02 10:41:36.711 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:41:36.731 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2020-07-02 10:41:36.736 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:41:36,1
2020-07-02 10:41:36.755 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2020-07-02 10:41:36.773 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:41:36.792 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:41:36.828 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:41:36.883 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 10:41:36.953 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2020-07-02 10:41:36.999 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:41:36,2
2020-07-02 10:41:37.002 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:41:37.013 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 10:41:37.098 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:41:37.117 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:41:37.393 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 393.1583ms.
2020-07-02 10:41:37.398 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 441.8449ms
2020-07-02 10:41:37.401 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 10:41:37.409 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 678.8626ms 200 text/html; charset=utf-8
2020-07-02 10:41:37.445 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2020-07-02 10:41:37.454 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2020-07-02 10:41:37.457 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2020-07-02 10:41:37.461 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2020-07-02 10:41:37.465 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2020-07-02 10:41:37.468 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2020-07-02 10:41:37.496 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2020-07-02 10:41:37.499 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2020-07-02 10:41:37.502 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2020-07-02 10:41:37.504 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.133300000000006ms 200 text/css
2020-07-02 10:41:37.507 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 56.879000000000005ms 200 text/css
2020-07-02 10:41:37.510 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 59.809200000000004ms 200 text/css
2020-07-02 10:41:37.515 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2020-07-02 10:41:37.518 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2020-07-02 10:41:37.521 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2020-07-02 10:41:37.530 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2020-07-02 10:41:37.533 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2020-07-02 10:41:37.537 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 92.1288ms 200 text/css
2020-07-02 10:41:37.541 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 92.3498ms 200 text/css
2020-07-02 10:41:37.546 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2020-07-02 10:41:37.548 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2020-07-02 10:41:37.551 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.1196ms 200 text/css
2020-07-02 10:41:37.553 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=WvUmlE8e_VDlPeR0g6h9Y5zTmjvT0eIH_AR_uNfWDd4  
2020-07-02 10:41:37.556 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2020-07-02 10:41:37.562 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 119.6769ms 200 text/css
2020-07-02 10:41:37.565 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2020-07-02 10:41:37.568 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2020-07-02 10:41:37.571 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.3883ms 200 application/javascript
2020-07-02 10:41:37.600 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2020-07-02 10:41:37.605 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.4414ms 200 application/javascript
2020-07-02 10:41:37.622 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2020-07-02 10:41:37.625 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 77.82430000000001ms 200 application/javascript
2020-07-02 10:41:37.873 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2020-07-02 10:41:37.876 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 360.7654ms 200 application/javascript
2020-07-02 10:41:37.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/jquery-validation/dist/jquery.validate.js  
2020-07-02 10:41:37.923 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/jquery-validation/dist/jquery.validate.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\jquery-validation\dist\jquery.validate.js'
2020-07-02 10:41:37.926 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.6378ms 200 application/javascript
2020-07-02 10:41:37.934 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js  
2020-07-02 10:41:37.963 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\jquery-validation-unobtrusive\jquery.validate.unobtrusive.js'
2020-07-02 10:41:37.967 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.9852ms 200 application/javascript
2020-07-02 10:41:37.975 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide10.jpg  
2020-07-02 10:41:37.993 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide10.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide10.jpg'
2020-07-02 10:41:37.997 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.768700000000003ms 200 image/jpeg
2020-07-02 10:41:38.004 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide11.jpg  
2020-07-02 10:41:38.021 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide11.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide11.jpg'
2020-07-02 10:41:38.025 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.5348ms 200 image/jpeg
2020-07-02 10:41:38.033 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide12.jpg  
2020-07-02 10:41:38.048 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide12.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide12.jpg'
2020-07-02 10:41:38.051 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.000500000000002ms 200 image/jpeg
2020-07-02 10:41:38.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/circle1.jpg  
2020-07-02 10:41:38.070 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/circle1.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\circle1.jpg'
2020-07-02 10:41:38.073 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.522200000000002ms 200 image/jpeg
2020-07-02 10:41:38.079 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/circle2.jpg  
2020-07-02 10:41:38.090 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/circle2.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\circle2.jpg'
2020-07-02 10:41:38.094 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.8034ms 200 image/jpeg
2020-07-02 10:41:38.101 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/circle3.jpg  
2020-07-02 10:41:38.112 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/circle3.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\circle3.jpg'
2020-07-02 10:41:38.115 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.5099ms 200 image/jpeg
2020-07-02 10:41:38.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/pict1_500x500.jpg  
2020-07-02 10:41:38.134 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/pict1_500x500.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\pict1_500x500.jpg'
2020-07-02 10:41:38.137 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.265600000000001ms 200 image/jpeg
2020-07-02 10:41:38.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/pict2_500x500.jpg  
2020-07-02 10:41:38.155 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/pict2_500x500.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\pict2_500x500.jpg'
2020-07-02 10:41:38.158 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.761600000000001ms 200 image/jpeg
2020-07-02 10:41:38.165 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/pict3_500x500.jpg  
2020-07-02 10:41:38.177 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/pict3_500x500.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\pict3_500x500.jpg'
2020-07-02 10:41:38.180 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.308800000000002ms 200 image/jpeg
2020-07-02 10:41:38.727 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2020-07-02 10:41:38.730 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1213.7198ms 200 application/javascript
2020-07-02 10:45:36.841 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:45:36.850 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:45:36.859 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:45:36.867 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:45:36.872 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:45:36.877 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:45:36.910 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:45:36,1
2020-07-02 10:45:36.915 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:45:36.931 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:45:36.941 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:45:37.057 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:45:37,2
2020-07-02 10:45:37.063 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:50:36.951 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:50:36.960 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:50:36.969 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:50:36.977 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:50:36.985 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:50:36.992 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:50:37.027 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:50:37.043 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:50:37,1
2020-07-02 10:50:37.048 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:50:37.055 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:50:37.539 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:50:37,2
2020-07-02 10:50:37.546 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:55:37.044 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:55:37.067 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:55:37.101 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 10:55:37.108 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 10:55:37.118 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:55:37.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 10:55:37.156 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:55:37,1
2020-07-02 10:55:37.163 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 10:55:37.176 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:55:37.200 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 10:55:37.307 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 10:55:37,2
2020-07-02 10:55:37.314 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:00:37.181 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:00:37.189 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:00:37.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:00:37.219 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:00:37.232 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:00:37.236 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:00:37,1
2020-07-02 11:00:37.241 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:00:37.248 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:00:37.266 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:00:37.394 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:00:37,2
2020-07-02 11:00:37.428 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:00:37.709 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Boolean), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [MassEmail] SET [CompanyId] = @p0, [DayFrom] = @p1, [DayTo] = @p2, [DistributionList] = @p3, [DistributionType] = @p4, [Greetings] = @p5, [Name] = @p6, [NextSend] = @p7, [OnePerUser] = @p8, [Schedule] = @p9, [Subject] = @p10, [TemplateName] = @p11, [TemplateText] = @p12, [Text] = @p13
WHERE [Id] = @p14;
SELECT @@ROWCOUNT;
2020-07-02 11:00:37.798 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:04:54.742 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2020-07-02 11:04:54.746 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:04:54.749 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2020-07-02 11:04:54.755 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:04:54.797 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 43.652100000000004ms.
2020-07-02 11:04:54.799 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 47.6864ms
2020-07-02 11:04:54.802 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:04:54.804 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 61.7243ms 200 text/html; charset=utf-8
2020-07-02 11:04:54.853 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2020-07-02 11:04:54.856 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2020-07-02 11:04:54.858 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2020-07-02 11:04:54.860 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2020-07-02 11:04:54.864 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2020-07-02 11:04:54.872 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2020-07-02 11:04:54.874 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2020-07-02 11:04:54.877 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2020-07-02 11:04:54.882 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.175ms 200 text/css
2020-07-02 11:04:54.886 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.623700000000003ms 200 text/css
2020-07-02 11:04:54.888 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2020-07-02 11:04:54.892 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2020-07-02 11:04:54.893 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2020-07-02 11:04:54.895 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2020-07-02 11:04:54.897 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.0871ms 200 text/css
2020-07-02 11:04:54.900 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2020-07-02 11:04:54.902 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.972ms 200 text/css
2020-07-02 11:04:54.906 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2020-07-02 11:04:54.911 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.465900000000005ms 200 text/css
2020-07-02 11:04:54.913 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2020-07-02 11:04:54.916 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2020-07-02 11:04:54.922 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.2686ms 200 text/css
2020-07-02 11:04:54.924 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2020-07-02 11:04:54.927 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 70.2621ms 200 text/css
2020-07-02 11:04:54.930 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2020-07-02 11:04:54.932 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=WvUmlE8e_VDlPeR0g6h9Y5zTmjvT0eIH_AR_uNfWDd4  
2020-07-02 11:04:54.936 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2020-07-02 11:04:54.938 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2020-07-02 11:04:54.941 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.361700000000003ms 200 application/javascript
2020-07-02 11:04:54.944 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2020-07-02 11:04:54.948 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2020-07-02 11:04:54.951 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.3508ms 200 application/javascript
2020-07-02 11:04:54.954 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 57.5202ms 200 application/javascript
2020-07-02 11:04:54.957 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.3293ms 200 application/javascript
2020-07-02 11:04:54.960 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2020-07-02 11:04:54.964 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.627500000000005ms 200 application/javascript
2020-07-02 11:04:54.978 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/jquery-validation/dist/jquery.validate.js  
2020-07-02 11:04:54.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js  
2020-07-02 11:04:54.986 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\jquery-validation-unobtrusive\jquery.validate.unobtrusive.js'
2020-07-02 11:04:54.988 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/jquery-validation/dist/jquery.validate.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\jquery-validation\dist\jquery.validate.js'
2020-07-02 11:04:54.991 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.7037ms 200 application/javascript
2020-07-02 11:04:54.993 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.5204ms 200 application/javascript
2020-07-02 11:04:55.029 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide10.jpg  
2020-07-02 11:04:55.031 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide12.jpg  
2020-07-02 11:04:55.033 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/circle2.jpg  
2020-07-02 11:04:55.036 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/circle1.jpg  
2020-07-02 11:04:55.040 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/circle3.jpg  
2020-07-02 11:04:55.041 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide11.jpg  
2020-07-02 11:04:55.043 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide12.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide12.jpg'
2020-07-02 11:04:55.046 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide10.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide10.jpg'
2020-07-02 11:04:55.048 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/circle1.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\circle1.jpg'
2020-07-02 11:04:55.051 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/circle3.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\circle3.jpg'
2020-07-02 11:04:55.055 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.245ms 200 image/jpeg
2020-07-02 11:04:55.057 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.8062ms 200 image/jpeg
2020-07-02 11:04:55.059 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/circle2.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\circle2.jpg'
2020-07-02 11:04:55.061 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.928800000000003ms 200 image/jpeg
2020-07-02 11:04:55.063 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/pict3_500x500.jpg  
2020-07-02 11:04:55.065 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.0379ms 200 image/jpeg
2020-07-02 11:04:55.067 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/pict2_500x500.jpg  
2020-07-02 11:04:55.069 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide11.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide11.jpg'
2020-07-02 11:04:55.072 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.0109ms 200 image/jpeg
2020-07-02 11:04:55.074 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.133500000000005ms 200 image/jpeg
2020-07-02 11:04:55.076 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/pict3_500x500.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\pict3_500x500.jpg'
2020-07-02 11:04:55.079 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/pict1_500x500.jpg  
2020-07-02 11:04:55.081 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.7406ms 200 image/jpeg
2020-07-02 11:04:55.084 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/pict2_500x500.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\pict2_500x500.jpg'
2020-07-02 11:04:55.087 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.0445ms 200 image/jpeg
2020-07-02 11:04:55.089 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/pict1_500x500.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\pict1_500x500.jpg'
2020-07-02 11:04:55.091 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.847100000000001ms 200 image/jpeg
2020-07-02 11:04:55.207 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/favicon.ico  
2020-07-02 11:04:55.216 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\favicon.ico'
2020-07-02 11:04:55.219 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.9075ms 200 image/x-icon
2020-07-02 11:04:57.217 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2020-07-02 11:04:57.223 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2020-07-02 11:04:57.229 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2020-07-02 11:04:57.235 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2020-07-02 11:04:57.288 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 53.4808ms.
2020-07-02 11:04:57.290 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 58.9729ms
2020-07-02 11:04:57.292 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2020-07-02 11:04:57.294 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 77.6504ms 200 text/html; charset=utf-8
2020-07-02 11:05:46.105 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.115 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.117 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.120 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.122 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.124 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.125 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.127 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.129 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.131 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.133 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.135 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'AvgPrice' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.137 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.139 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.141 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.143 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.144 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2020-07-02 11:05:46.177 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:05:46.498 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2020-07-02 11:05:46.592 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-07-02 11:05:46.724 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2020-07-02 11:05:46.959 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:05:46.971 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:05:47.030 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:05:47.035 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2020-07-02 11:05:47.038 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2020-07-02 11:05:47.041 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2020-07-02 11:05:47.061 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:05:47.071 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2020-07-02 11:05:47.080 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:05:47,1
2020-07-02 11:05:47.082 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2020-07-02 11:05:47.097 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:05:47.103 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:05:47.125 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:05:47.153 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:05:47.185 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2020-07-02 11:05:47.206 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:05:47,2
2020-07-02 11:05:47.209 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:05:47.219 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:05:47.267 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:05:47.278 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:05:47.400 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 188.6824ms.
2020-07-02 11:05:47.404 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 215.746ms
2020-07-02 11:05:47.406 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:05:47.411 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 340.8687ms 200 text/html; charset=utf-8
2020-07-02 11:05:49.329 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2020-07-02 11:05:49.339 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2020-07-02 11:05:49.344 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2020-07-02 11:05:49.355 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2020-07-02 11:05:49.392 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 38.6481ms.
2020-07-02 11:05:49.396 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 48.889ms
2020-07-02 11:05:49.398 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2020-07-02 11:05:49.400 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 73.2448ms 200 text/html; charset=utf-8
2020-07-02 11:05:51.244 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2020-07-02 11:05:51.252 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2020-07-02 11:05:51.262 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2020-07-02 11:05:51.292 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2020-07-02 11:05:51.297 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:05:51.311 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2020-07-02 11:05:51.377 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2020-07-02 11:05:51.435 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2020-07-02 11:05:51.474 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2020-07-02 11:05:51.488 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2020-07-02 11:05:51.506 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2020-07-02 11:05:51.516 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2020-07-02 11:05:51.527 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2020-07-02 11:05:51.540 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 276.2883ms
2020-07-02 11:05:51.543 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2020-07-02 11:05:51.550 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 306.2783ms 200 application/json; charset=utf-8
2020-07-02 11:05:51.563 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2020-07-02 11:05:51.573 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:05:51.576 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2020-07-02 11:05:51.578 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:05:51.591 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 13.250300000000001ms.
2020-07-02 11:05:51.594 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 15.864700000000001ms
2020-07-02 11:05:51.596 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:05:51.598 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.5899ms 200 text/html; charset=utf-8
2020-07-02 11:05:56.763 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MassEmail  
2020-07-02 11:05:56.775 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:05:56.778 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.MassEmailController.Index (CateringPro)'
2020-07-02 11:05:56.784 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "MassEmail"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.MassEmailController (CateringPro).
2020-07-02 11:05:56.789 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:05:56.800 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:05:56.841 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:05:56.858 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 17.745900000000002ms.
2020-07-02 11:05:56.860 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.MassEmailController.Index (CateringPro) in 73.5898ms
2020-07-02 11:05:56.863 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.MassEmailController.Index (CateringPro)'
2020-07-02 11:05:56.866 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 103.2347ms 200 text/html; charset=utf-8
2020-07-02 11:05:56.880 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-cron-min.js  
2020-07-02 11:05:56.882 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-cron.css  
2020-07-02 11:05:56.885 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-gentleSelect.css  
2020-07-02 11:05:56.886 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-gentleSelect-min.js  
2020-07-02 11:05:56.903 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-cron.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-cron.css'
2020-07-02 11:05:56.905 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-gentleSelect.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-gentleSelect.css'
2020-07-02 11:05:56.907 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.9464ms 200 text/css
2020-07-02 11:05:56.908 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.1159ms 200 text/css
2020-07-02 11:05:56.920 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-gentleSelect-min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-gentleSelect-min.js'
2020-07-02 11:05:56.922 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.0049ms 200 application/javascript
2020-07-02 11:05:56.924 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-cron-min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-cron-min.js'
2020-07-02 11:05:56.927 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.428000000000004ms 200 application/javascript
2020-07-02 11:05:56.953 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2020-07-02 11:05:56.971 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2020-07-02 11:05:56.973 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.4698ms 200 font/woff2
2020-07-02 11:05:56.984 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MassEmail/ListItems?searchcriteria=&_=1593677156902  
2020-07-02 11:05:56.990 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:05:56.992 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.MassEmailController.ListItems (CateringPro)'
2020-07-02 11:05:57.000 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "MassEmail"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.MassEmailController (CateringPro).
2020-07-02 11:05:57.006 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:05:57.009 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:05:57.018 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2020-07-02 11:05:57.101 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 82.8558ms.
2020-07-02 11:05:57.103 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.MassEmailController.ListItems (CateringPro) in 101.10940000000001ms
2020-07-02 11:05:57.106 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.MassEmailController.ListItems (CateringPro)'
2020-07-02 11:05:57.108 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 123.61510000000001ms 200 text/html; charset=utf-8
2020-07-02 11:06:01.610 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2020-07-02 11:06:01.614 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:06:01.617 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2020-07-02 11:06:01.620 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:06:01.629 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.0115ms.
2020-07-02 11:06:01.632 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 12.6058ms
2020-07-02 11:06:01.634 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2020-07-02 11:06:01.638 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.3472ms 200 text/html; charset=utf-8
2020-07-02 11:06:01.961 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/favicon.ico  
2020-07-02 11:06:01.966 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\favicon.ico'
2020-07-02 11:06:01.968 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.8753ms 200 image/x-icon
2020-07-02 11:06:18.989 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2020-07-02 11:06:18.995 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:06:18.998 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2020-07-02 11:06:19.004 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2020-07-02 11:06:19.020 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:19.039 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:06:19.049 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:06:19.068 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:06:19.166 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.261 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.300 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.304 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.315 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.320 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.329 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.334 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.343 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.347 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.357 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.361 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.370 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[ReadyWeight], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[ReadyWeight], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2020-07-02 11:06:19.374 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2020-07-02 11:06:19.386 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 338.868ms.
2020-07-02 11:06:19.389 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 382.1977ms
2020-07-02 11:06:19.391 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2020-07-02 11:06:19.394 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 404.89340000000004ms 200 text/html; charset=utf-8
2020-07-02 11:06:19.414 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2020-07-02 11:06:19.456 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2020-07-02 11:06:19.458 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.443400000000004ms 200 application/javascript
2020-07-02 11:06:38.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/Users  
2020-07-02 11:06:38.986 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Users (CateringPro)'
2020-07-02 11:06:38.991 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Users", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Users() on controller CateringPro.Controllers.AccountController (CateringPro).
2020-07-02 11:06:38.995 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:39.004 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__GetCompanyID_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NameSurname], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[CompanyId] = @__GetCompanyID_0) AND @__GetCompanyID_0 IS NOT NULL
2020-07-02 11:06:39.011 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Users.
2020-07-02 11:06:39.019 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Users executed in 8.0596ms.
2020-07-02 11:06:39.021 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Users (CateringPro) in 27.573900000000002ms
2020-07-02 11:06:39.023 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Users (CateringPro)'
2020-07-02 11:06:39.025 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 48.4923ms 200 text/html; charset=utf-8
2020-07-02 11:06:45.841 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2020-07-02 11:06:45.846 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2020-07-02 11:06:45.858 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2020-07-02 11:06:45.862 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:45.891 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[KKal], [d].[Name], [d].[PictureId], [d].[Price], [d].[ReadyWeight], [t].[DishId], [t].[IngredientId], [t].[CompanyId], [t].[Proportion], [t].[Id], [t].[AvgPrice], [t].[CompanyId0], [t].[IngredientCategoriesId], [t].[MeasureUnit], [t].[Name], [t].[StockDate], [t].[StockValue]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [d0].[CompanyId], [d0].[Proportion], [i].[Id], [i].[AvgPrice], [i].[CompanyId] AS [CompanyId0], [i].[IngredientCategoriesId], [i].[MeasureUnit], [i].[Name], [i].[StockDate], [i].[StockValue]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2020-07-02 11:06:46.013 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:06:46.023 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.376900000000001ms.
2020-07-02 11:06:46.025 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 164.3878ms
2020-07-02 11:06:46.027 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2020-07-02 11:06:46.030 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 188.946ms 200 text/html; charset=utf-8
2020-07-02 11:06:46.565 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1593677206050  
2020-07-02 11:06:46.576 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2020-07-02 11:06:46.588 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2020-07-02 11:06:46.596 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2020-07-02 11:06:46.600 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2020-07-02 11:06:46.603 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:46.610 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:06:46.635 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[KKal], [t].[Name], [t].[PictureId], [t].[Price], [t].[ReadyWeight], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[CompanyId], [t0].[Proportion], [t0].[Id], [t0].[AvgPrice], [t0].[CompanyId0], [t0].[IngredientCategoriesId], [t0].[MeasureUnit], [t0].[Name], [t0].[StockDate], [t0].[StockValue]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[KKal], [d].[Name], [d].[PictureId], [d].[Price], [d].[ReadyWeight]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [d0].[CompanyId], [d0].[Proportion], [i].[Id], [i].[AvgPrice], [i].[CompanyId] AS [CompanyId0], [i].[IngredientCategoriesId], [i].[MeasureUnit], [i].[Name], [i].[StockDate], [i].[StockValue]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2020-07-02 11:06:46.650 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2020-07-02 11:06:46.785 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 135.1474ms.
2020-07-02 11:06:46.787 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 197.2236ms
2020-07-02 11:06:46.790 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2020-07-02 11:06:46.792 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 228.6797ms 200 text/html; charset=utf-8
2020-07-02 11:06:46.802 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2020-07-02 11:06:46.804 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=80&height=80  
2020-07-02 11:06:46.806 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2020-07-02 11:06:46.809 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:06:46.811 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:06:46.813 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:06:46.819 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:06:46.821 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:06:46.825 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:06:46.934 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:46.936 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:46.938 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:46.944 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:06:46.946 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:06:46.967 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:06:46.975 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 148.0486ms
2020-07-02 11:06:46.978 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:06:46.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 178.75480000000002ms 200 image/jpeg
2020-07-02 11:06:46.986 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:06:46.999 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 176.29080000000002ms
2020-07-02 11:06:47.002 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:06:47.004 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 202.88160000000002ms 200 image/jpeg
2020-07-02 11:06:47.275 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:06:47.278 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 454.12420000000003ms
2020-07-02 11:06:47.280 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:06:47.284 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 480.7805ms 200 image/jpeg
2020-07-02 11:06:58.808 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Categories  
2020-07-02 11:06:58.815 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:06:58.819 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CategoriesController.Index (CateringPro)'
2020-07-02 11:06:58.825 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.CategoriesController (CateringPro).
2020-07-02 11:06:58.831 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:58.838 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2020-07-02 11:06:58.845 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:06:58.854 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.0481ms.
2020-07-02 11:06:58.856 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CategoriesController.Index (CateringPro) in 28.5741ms
2020-07-02 11:06:58.859 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CategoriesController.Index (CateringPro)'
2020-07-02 11:06:58.861 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.858200000000004ms 200 text/html; charset=utf-8
2020-07-02 11:06:58.913 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Categories/ListItems?searchcriteria=&_=1593677218881  
2020-07-02 11:06:58.916 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:06:58.919 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CategoriesController.ListItems (CateringPro)'
2020-07-02 11:06:58.925 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.CategoriesController (CateringPro).
2020-07-02 11:06:58.932 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:06:58.939 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:06:58.945 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2020-07-02 11:06:58.957 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 12.6195ms.
2020-07-02 11:06:58.960 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CategoriesController.ListItems (CateringPro) in 31.791500000000003ms
2020-07-02 11:06:58.964 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CategoriesController.ListItems (CateringPro)'
2020-07-02 11:06:58.966 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 54.0936ms 200 text/html; charset=utf-8
2020-07-02 11:07:08.850 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2020-07-02 11:07:08.856 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:07:08.860 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2020-07-02 11:07:08.865 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2020-07-02 11:07:08.870 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:08.883 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:07:08.911 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:07:08.921 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 12.926200000000001ms.
2020-07-02 11:07:08.925 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 56.4003ms
2020-07-02 11:07:08.928 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2020-07-02 11:07:08.931 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 80.8964ms 200 text/html; charset=utf-8
2020-07-02 11:07:09.003 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1593677228959  
2020-07-02 11:07:09.008 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:07:09.010 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2020-07-02 11:07:09.016 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2020-07-02 11:07:09.021 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:09.025 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:07:09.031 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2020-07-02 11:07:09.044 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 13.3771ms.
2020-07-02 11:07:09.046 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 27.7791ms
2020-07-02 11:07:09.048 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2020-07-02 11:07:09.050 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.761500000000005ms 200 text/html; charset=utf-8
2020-07-02 11:07:11.737 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2020-07-02 11:07:11.741 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2020-07-02 11:07:11.746 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2020-07-02 11:07:11.751 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:07:11.770 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:11.786 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.794 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.798 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.801 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.805 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.808 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.811 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.814 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.817 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.821 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.825 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.828 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.832 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.839 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [u].[UserId], N'' AS [UserName], @__daydate_1 AS [Date], [u].[Quantity] AS [DishesCount], [u].[Total] AS [Amount], [u].[IsConfirmed], [u].[IsPaid], [a].[PhoneNumber] AS [Phone], [a].[ZipCode], [a].[Email], [a].[UserName] AS [Name], [a].[City], [a].[Address1], [a].[Address2], [a].[Country]
FROM [UserDay] AS [u]
INNER JOIN [AspNetUsers] AS [a] ON [u].[UserId] = [a].[Id]
WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2020-07-02 11:07:11.846 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 96.14540000000001ms.
2020-07-02 11:07:11.848 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 99.46600000000001ms
2020-07-02 11:07:11.851 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2020-07-02 11:07:11.854 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 117.37180000000001ms 200 text/html; charset=utf-8
2020-07-02 11:07:16.605 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/DayDishes/EditDay  
2020-07-02 11:07:16.611 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:07:16.615 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.EditDay (CateringPro)'
2020-07-02 11:07:16.622 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDay", controller = "DayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ViewResult EditDay(System.DateTime) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2020-07-02 11:07:16.627 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view EditDay.
2020-07-02 11:07:16.655 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:16.688 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:16.740 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:16.828 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:16.840 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:16.927 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:16.941 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:17.019 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:17.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:17.121 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:17.135 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:17.215 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:17.229 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:17.310 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__companyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], CASE
    WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t0].[Name], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[Name], [t2].[ReadyWeight], [t2].[PictureId], [t2].[Description], [t2].[DishId], [t2].[ComplexId]
FROM [Complex] AS [c]
LEFT JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [d1].[Name], [d0].[DishId], [d0].[ComplexId], [d1].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN [Dishes] AS [d1] ON [d0].[DishId] = [d1].[Id]
) AS [t0] ON [c].[Id] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d2].[Id], [d2].[Name], [d2].[ReadyWeight], [d2].[PictureId], [d2].[Description], [t1].[DishId], [t1].[ComplexId]
    FROM [Dishes] AS [d2]
    INNER JOIN (
        SELECT [d3].[DishId], [d3].[ComplexId], [d3].[CompanyId]
        FROM [DishComplex] AS [d3]
        WHERE ([d3].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
    ) AS [t1] ON [d2].[Id] = [t1].[DishId]
    WHERE ([d2].[CompanyId] = @__companyId_2) AND @__companyId_2 IS NOT NULL
) AS [t2] ON [c].[Id] = [t2].[ComplexId]
WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
ORDER BY [c].[Id], [t0].[DishId], [t0].[ComplexId], [t0].[Id], [t2].[Id], [t2].[DishId], [t2].[ComplexId]
2020-07-02 11:07:17.329 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2020-07-02 11:07:17.437 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view EditDay executed in 810.1824ms.
2020-07-02 11:07:17.440 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.EditDay (CateringPro) in 815.0640000000001ms
2020-07-02 11:07:17.442 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.EditDay (CateringPro)'
2020-07-02 11:07:17.444 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 842.7662ms 200 text/html; charset=utf-8
2020-07-02 11:07:17.452 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=50&height=50  
2020-07-02 11:07:17.455 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2020-07-02 11:07:17.460 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:07:17.463 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:07:17.465 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:07:17.467 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:07:17.470 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:17.474 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:17.478 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:07:17.480 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:07:17.487 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2020-07-02 11:07:17.491 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:07:17.493 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:07:17.495 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:07:17.499 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 29.7272ms
2020-07-02 11:07:17.507 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:07:17.509 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:07:17.516 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 62.7882ms 200 image/jpeg
2020-07-02 11:07:17.529 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:07:17.538 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 68.73060000000001ms
2020-07-02 11:07:17.541 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:07:17.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 91.35220000000001ms 200 image/jpeg
2020-07-02 11:07:17.580 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/dishdayedit.js  
2020-07-02 11:07:17.598 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/dishdayedit.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\dishdayedit.js'
2020-07-02 11:07:17.600 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.6612ms 200 application/javascript
2020-07-02 11:07:17.685 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:07:17.688 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 189.7911ms
2020-07-02 11:07:17.690 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:07:17.693 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 206.1875ms 200 image/jpeg
2020-07-02 11:08:01.611 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Report  
2020-07-02 11:08:01.616 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ReportController.Index (CateringPro)'
2020-07-02 11:08:01.620 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Report"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.ReportController (CateringPro).
2020-07-02 11:08:01.625 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:08:01.637 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 14.2734ms.
2020-07-02 11:08:01.640 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ReportController.Index (CateringPro) in 17.5636ms
2020-07-02 11:08:01.643 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ReportController.Index (CateringPro)'
2020-07-02 11:08:01.645 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.5501ms 200 text/html; charset=utf-8
2020-07-02 11:08:08.307 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Report/CompanyProductionForecast?datefrom=2020-07-02&dateto=2020-07-05  
2020-07-02 11:08:08.312 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ReportController.CompanyProductionForecast (CateringPro)'
2020-07-02 11:08:08.323 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CompanyProductionForecast", controller = "Report"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CompanyProductionForecast(System.DateTime, System.DateTime, System.String) on controller CateringPro.Controllers.ReportController (CateringPro).
2020-07-02 11:08:08.332 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:08:08.342 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:08:08.373 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view CompanyProductionForecast.
2020-07-02 11:08:08.384 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view CompanyProductionForecast executed in 11.834900000000001ms.
2020-07-02 11:08:08.387 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ReportController.CompanyProductionForecast (CateringPro) in 61.1389ms
2020-07-02 11:08:08.389 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ReportController.CompanyProductionForecast (CateringPro)'
2020-07-02 11:08:08.392 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 84.8691ms 200 text/html; charset=utf-8
2020-07-02 11:08:08.404 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/8?width=200&height=100  
2020-07-02 11:08:08.407 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2020-07-02 11:08:08.410 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:08:08.413 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:08:08.416 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:08:08.419 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:08:08.425 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2020-07-02 11:08:08.428 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.184900000000003ms 200 text/css
2020-07-02 11:08:08.435 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:08:08.442 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 23.6678ms
2020-07-02 11:08:08.460 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:08:08.483 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 58.7479ms 200 image/jpeg
2020-07-02 11:08:26.461 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Report/CompanyDayProduction?datefrom=2020-07-02&dateto=2020-07-05  
2020-07-02 11:08:26.470 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ReportController.CompanyDayProduction (CateringPro)'
2020-07-02 11:08:26.475 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CompanyDayProduction", controller = "Report"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CompanyDayProduction(System.DateTime, System.DateTime, System.String) on controller CateringPro.Controllers.ReportController (CateringPro).
2020-07-02 11:08:26.484 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:08:26.489 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:08:26.507 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__datefrom_1='?' (DbType = Date), @__dateto_2='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [u].[Date] AS [DayDate], [t].[Id] AS [DishId], [t].[Code] AS [DishCode], [t].[Name] AS [DishName], SUM([u].[Quantity]) AS [Quantity]
FROM [UserDayDish] AS [u]
INNER JOIN (
    SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[KKal], [d].[Name], [d].[PictureId], [d].[Price], [d].[ReadyWeight]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [u].[DishId] = [t].[Id]
WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND ([u].[Date] >= @__datefrom_1)) AND ([u].[Date] <= @__dateto_2)
GROUP BY [t].[Id], [t].[Name], [t].[Code], [u].[Date]
2020-07-02 11:08:26.517 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view CompanyDayProduction.
2020-07-02 11:08:26.526 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view CompanyDayProduction executed in 9.6949ms.
2020-07-02 11:08:26.529 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ReportController.CompanyDayProduction (CateringPro) in 51.344300000000004ms
2020-07-02 11:08:26.531 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ReportController.CompanyDayProduction (CateringPro)'
2020-07-02 11:08:26.534 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 74.0451ms 200 text/html; charset=utf-8
2020-07-02 11:08:26.551 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/8?width=200&height=100  
2020-07-02 11:08:26.556 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:08:26.560 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:08:26.571 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:08:26.576 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:08:26.597 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:08:26.607 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 37.8586ms
2020-07-02 11:08:26.613 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:08:26.619 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 71.30930000000001ms 200 image/jpeg
2020-07-02 11:08:30.219 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Report/CompanyMenu?datefrom=2020-07-02&dateto=2020-07-05  
2020-07-02 11:08:30.224 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ReportController.CompanyMenu (CateringPro)'
2020-07-02 11:08:30.230 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CompanyMenu", controller = "Report"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CompanyMenu(System.DateTime, System.DateTime, System.String) on controller CateringPro.Controllers.ReportController (CateringPro).
2020-07-02 11:08:30.236 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:08:30.247 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__datefrom_1='?' (DbType = Date), @__dateto_2='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Date] AS [DayDate], [t].[Code], [t].[Name], [t].[Price]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[KKal], [d0].[Name], [d0].[PictureId], [d0].[Price], [d0].[ReadyWeight]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
WHERE ((([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND ([d].[Date] >= @__datefrom_1)) AND ([d].[Date] <= @__dateto_2)
2020-07-02 11:08:30.273 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__companyId_4='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32), @__datefrom_1='?' (DbType = Date), @__dateto_2='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Date], [t].[Name], [t].[Price], [d].[ComplexId], [d].[CompanyId], [t].[Id], [t1].[Name], [t1].[Description], [t1].[ReadyWeight], [t1].[DishId], [t1].[ComplexId], [t1].[Id]
FROM [DayComplex] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
    FROM [Complex] AS [c]
    WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[ComplexId] = [t].[Id]
LEFT JOIN (
    SELECT [t0].[Name], [t0].[Description], [t0].[ReadyWeight], [d0].[DishId], [d0].[ComplexId], [t0].[Id]
    FROM [DishComplex] AS [d0]
    INNER JOIN (
        SELECT [d1].[Id], [d1].[CategoriesId], [d1].[Code], [d1].[CompanyId], [d1].[Description], [d1].[KKal], [d1].[Name], [d1].[PictureId], [d1].[Price], [d1].[ReadyWeight]
        FROM [Dishes] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t0] ON [d0].[DishId] = [t0].[Id]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t1] ON [t].[Id] = [t1].[ComplexId]
WHERE ((([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND ([d].[Date] >= @__datefrom_1)) AND ([d].[Date] <= @__dateto_2)
ORDER BY [d].[Date], [d].[ComplexId], [d].[CompanyId], [t].[Id], [t1].[DishId], [t1].[ComplexId], [t1].[Id]
2020-07-02 11:08:30.286 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:08:36.058 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view CompanyMenu.
2020-07-02 11:08:36.070 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view CompanyMenu executed in 13.5927ms.
2020-07-02 11:08:36.073 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ReportController.CompanyMenu (CateringPro) in 5840.3599ms
2020-07-02 11:08:36.078 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ReportController.CompanyMenu (CateringPro)'
2020-07-02 11:08:36.081 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5861.513ms 200 text/html; charset=utf-8
2020-07-02 11:08:36.097 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/8?width=200&height=100  
2020-07-02 11:08:36.101 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:08:36.104 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2020-07-02 11:08:36.109 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:08:36.120 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:08:36.132 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2020-07-02 11:08:36.139 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 28.693800000000003ms
2020-07-02 11:08:36.150 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2020-07-02 11:08:36.154 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 58.839800000000004ms 200 image/jpeg
2020-07-02 11:10:47.132 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:10:47.135 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:10:47.143 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:10:47.146 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:10:47.150 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:10:47.153 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:10:47,1
2020-07-02 11:10:47.156 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:10:47.158 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:10:47.172 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:10:47.192 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:10:47.220 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:10:47,2
2020-07-02 11:10:47.223 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:15:47.202 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:15:47.213 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:15:47.256 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:15:47.261 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:15:47.268 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:15:47.283 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:15:47.297 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:15:47,1
2020-07-02 11:15:47.301 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:15:47.304 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:15:47.310 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:15:47.367 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:15:47,2
2020-07-02 11:15:47.370 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:19:21.962 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MassEmail  
2020-07-02 11:19:21.970 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:19:21.972 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.MassEmailController.Index (CateringPro)'
2020-07-02 11:19:21.974 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "MassEmail"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.MassEmailController (CateringPro).
2020-07-02 11:19:21.979 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:19:21.982 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:19:21.991 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2020-07-02 11:19:21.996 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 7.551200000000001ms.
2020-07-02 11:19:21.999 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.MassEmailController.Index (CateringPro) in 22.413ms
2020-07-02 11:19:22.001 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.MassEmailController.Index (CateringPro)'
2020-07-02 11:19:22.003 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.0458ms 200 text/html; charset=utf-8
2020-07-02 11:19:22.073 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MassEmail/ListItems?searchcriteria=&_=1593677962028  
2020-07-02 11:19:22.080 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:19:22.084 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.MassEmailController.ListItems (CateringPro)'
2020-07-02 11:19:22.086 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "MassEmail"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.MassEmailController (CateringPro).
2020-07-02 11:19:22.090 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:19:22.093 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:19:22.104 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2020-07-02 11:19:22.117 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 6.3539ms.
2020-07-02 11:19:22.123 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.MassEmailController.ListItems (CateringPro) in 30.8712ms
2020-07-02 11:19:22.127 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.MassEmailController.ListItems (CateringPro)'
2020-07-02 11:19:22.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 57.186400000000006ms 200 text/html; charset=utf-8
2020-07-02 11:19:26.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MassEmail/EditModal/8?_=1593677962029  
2020-07-02 11:19:26.132 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2020-07-02 11:19:26.135 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.MassEmailController.EditModal (CateringPro)'
2020-07-02 11:19:26.141 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "MassEmail"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.MassEmailController (CateringPro).
2020-07-02 11:19:26.145 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:19:26.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2020-07-02 11:19:26.159 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2020-07-02 11:19:26.203 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 43.2045ms.
2020-07-02 11:19:26.206 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.MassEmailController.EditModal (CateringPro) in 62.0353ms
2020-07-02 11:19:26.209 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.MassEmailController.EditModal (CateringPro)'
2020-07-02 11:19:26.211 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 85.7369ms 200 text/html; charset=utf-8
2020-07-02 11:20:02.861 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/img/expand.png  
2020-07-02 11:20:02.868 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.626800000000001ms 404 
2020-07-02 11:20:47.304 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:20:47.307 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:20:47.310 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:20:47.313 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:20:47.316 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:20:47.318 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:20:47,1
2020-07-02 11:20:47.321 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:20:47.323 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:20:47.335 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:20:47.384 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:20:47,2
2020-07-02 11:20:47.387 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:20:47.455 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (DbType = Int32), @p5='?' (Size = 4000), @p6='?' (Size = 4000), @p7='?' (DbType = DateTime2), @p8='?' (DbType = Boolean), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (Size = 4000), @p12='?' (Size = 4000), @p13='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [MassEmail] SET [CompanyId] = @p0, [DayFrom] = @p1, [DayTo] = @p2, [DistributionList] = @p3, [DistributionType] = @p4, [Greetings] = @p5, [Name] = @p6, [NextSend] = @p7, [OnePerUser] = @p8, [Schedule] = @p9, [Subject] = @p10, [TemplateName] = @p11, [TemplateText] = @p12, [Text] = @p13
WHERE [Id] = @p14;
SELECT @@ROWCOUNT;
2020-07-02 11:20:47.490 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:25:47.350 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:25:47.353 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:25:47.358 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:25:47.362 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:25:47.368 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:25:47.371 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:25:47.374 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:25:47,1
2020-07-02 11:25:47.378 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:25:47.380 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:25:47.398 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:25:47.426 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:25:47,2
2020-07-02 11:25:47.429 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:30:47.419 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:30:47.427 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:30:47.449 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:30:47.456 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:30:47.465 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:30:47.473 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:30:47.478 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:30:47,1
2020-07-02 11:30:47.481 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:30:47.482 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:30:47.488 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:30:47.536 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:30:47,2
2020-07-02 11:30:47.538 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:35:47.495 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:35:47.497 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:35:47.500 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:35:47.503 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:35:47.506 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:35:47.507 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:35:47,1
2020-07-02 11:35:47.509 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:35:47.512 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:35:47.522 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:35:47.528 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:35:47.572 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:35:47,2
2020-07-02 11:35:47.574 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:40:47.557 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:40:47.559 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:40:47.568 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:40:47.570 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:40:47.574 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:40:47.579 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:40:47.585 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:40:47,1
2020-07-02 11:40:47.589 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:40:47.591 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:40:47.598 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:40:47.641 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:40:47,2
2020-07-02 11:40:47.644 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:45:47.615 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:45:47.618 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:45:47.621 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:45:47.625 +03:00 [Information] CateringPro.Models.CompanyUser: Start job to Write Off production day
2020-07-02 11:45:47.628 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2020-07-02 11:45:47.630 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:45:47,1
2020-07-02 11:45:47.632 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
2020-07-02 11:45:47.634 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
2020-07-02 11:45:47.651 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:45:47.662 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [m].[Id], [m].[CompanyId], [m].[DayFrom], [m].[DayTo], [m].[DistributionList], [m].[DistributionType], [m].[Greetings], [m].[Name], [m].[NextSend], [m].[OnePerUser], [m].[Schedule], [m].[Subject], [m].[TemplateName], [m].[TemplateText], [m].[Text]
FROM [MassEmail] AS [m]
WHERE ([m].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2020-07-02 11:45:47.688 +03:00 [Information] CateringPro.Models.CompanyUser: WriteOffProduction 07/02/2020 11:45:47,2
2020-07-02 11:45:47.691 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
exec WriteOffProduction @p0 , @p1
