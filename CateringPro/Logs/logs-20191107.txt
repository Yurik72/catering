2019-11-07 10:44:22.450 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.459 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.461 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.465 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.467 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.469 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.470 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.472 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.474 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.476 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.478 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.480 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.481 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.483 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.485 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.487 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.488 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.490 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:44:22.525 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:44:22.914 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 10:44:23.031 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 10:44:23.170 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 10:44:23.755 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 10:44:23.759 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 10:44:23.761 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 10:44:23.798 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 10:44:23.806 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 10:44:23.894 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:44:23.976 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:44:24.129 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 10:44:24.171 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 10:44:24.184 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 10:44:24.198 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 10:44:24.208 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 10:44:24.235 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 10:44:24.252 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 10:44:24.471 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 219.5722ms.
2019-11-07 10:44:24.474 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 236.69230000000002ms
2019-11-07 10:44:24.490 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 10:44:24.496 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 10:44:24.499 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 10:44:24.500 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 10:44:24.502 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 10:44:24.512 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 710.1310000000001ms 200 text/html; charset=utf-8
2019-11-07 10:44:24.516 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-11-07 10:44:24.518 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 10:44:24.521 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 10:44:24.523 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 10:44:24.527 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.261700000000005ms 304 application/javascript
2019-11-07 10:44:24.529 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.2611ms 304 application/javascript
2019-11-07 10:44:24.531 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.462900000000005ms 304 text/css
2019-11-07 10:44:24.534 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.560300000000005ms 304 text/css
2019-11-07 10:44:30.851 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 10:44:30.861 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:44:30.864 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 10:44:30.871 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:44:30.901 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:44:30.908 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:44:30.922 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 10:44:31.016 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.127 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.184 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.190 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.199 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.204 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.210 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.215 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.223 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.227 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.233 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.238 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.246 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.252 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.257 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.262 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.270 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.275 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.280 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.286 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.311 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.316 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.321 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.326 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.334 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:44:31.338 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.345 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.351 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:44:31.374 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 443.6411ms.
2019-11-07 10:44:31.382 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 10:44:31.383 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 10:44:31.386 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 513.3995ms
2019-11-07 10:44:31.391 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 10:44:31.397 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 545.8197ms 200 text/html; charset=utf-8
2019-11-07 10:44:31.413 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:44:31.417 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:44:31.426 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 10:44:31.428 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 10:44:31.533 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:44:31.535 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:44:31.542 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:44:31.613 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 10:44:31.622 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 192.68990000000002ms
2019-11-07 10:44:31.625 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:44:31.627 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 251.0318ms 200 image/jpeg
2019-11-07 10:44:31.868 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 10:44:31.871 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 441.5414ms
2019-11-07 10:44:31.873 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:44:31.876 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 499.6746ms 200 image/jpeg
2019-11-07 10:44:35.133 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 158
2019-11-07 10:44:35.137 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:44:35.140 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:44:35.170 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:44:35.201 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:44:35.210 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:44:35.220 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:44:35.405 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 10:44:35.568 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 10:44:35.576 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 10:44:35.686 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 10:44:35.734 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 10:44:35.742 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 569.5155ms
2019-11-07 10:44:35.745 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:44:35.748 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 614.7042ms 200 application/json; charset=utf-8
2019-11-07 10:46:05.313 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 158
2019-11-07 10:46:05.320 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:46:05.322 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:46:05.324 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:46:05.330 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:46:05.334 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:46:05.357 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:46:05.405 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 10:46:05.535 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 10:46:05.538 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 10:46:05.545 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 10:46:05.579 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 10:46:05.582 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 255.3812ms
2019-11-07 10:46:05.584 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:46:05.586 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 275.8243ms 200 application/json; charset=utf-8
2019-11-07 10:46:29.343 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 10:46:29.349 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:46:29.351 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 10:46:29.364 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:46:29.368 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:46:29.374 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:46:29.380 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 10:46:29.392 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.420 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.465 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.470 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.477 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.482 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.487 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.493 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.503 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.509 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.515 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.521 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.528 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.534 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.540 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.545 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.553 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.558 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.562 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.566 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.573 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.578 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.583 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.589 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.600 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:46:29.611 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.619 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.627 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:46:29.646 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 261.7702ms.
2019-11-07 10:46:29.652 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 10:46:29.654 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 10:46:29.656 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 10:46:29.666 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 289.67760000000004ms
2019-11-07 10:46:29.671 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-11-07 10:46:29.673 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 10:46:29.675 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 10:46:29.677 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-11-07 10:46:29.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.8576ms 304 text/css
2019-11-07 10:46:29.682 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.8552ms 304 text/css
2019-11-07 10:46:29.684 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 337.53470000000004ms 200 text/html; charset=utf-8
2019-11-07 10:46:29.685 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 10:46:29.687 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.0984ms 304 application/javascript
2019-11-07 10:46:29.690 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-11-07 10:46:29.692 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 10:46:29.694 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.128ms 304 text/css
2019-11-07 10:46:29.696 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 10:46:29.698 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 10:46:29.700 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 10:46:29.702 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-11-07 10:46:29.705 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 10:46:29.707 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-11-07 10:46:29.709 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.8312ms 304 application/javascript
2019-11-07 10:46:29.711 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 10:46:29.712 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 10:46:29.714 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 49.822300000000006ms 304 application/javascript
2019-11-07 10:46:29.717 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-11-07 10:46:29.719 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 10:46:29.721 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 10:46:29.723 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.8656ms 304 application/javascript
2019-11-07 10:46:29.725 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-11-07 10:46:29.728 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 10:46:29.730 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.0903ms 304 text/css
2019-11-07 10:46:29.733 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-11-07 10:46:29.734 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 10:46:29.736 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.2709ms 304 application/javascript
2019-11-07 10:46:29.739 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.6571ms 304 text/css
2019-11-07 10:46:29.741 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 10:46:29.744 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-11-07 10:46:29.745 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-11-07 10:46:29.747 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 63.3592ms 304 text/css
2019-11-07 10:46:29.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.9314ms 304 text/css
2019-11-07 10:46:29.752 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.538800000000002ms 304 application/javascript
2019-11-07 10:46:29.754 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:46:29.756 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 10:46:29.758 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 10:46:29.760 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:46:29.763 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 10:46:29.786 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:46:29.789 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:46:29.794 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:46:29.835 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 10:46:29.838 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-11-07 10:46:29.861 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.745ms 304 font/woff2
2019-11-07 10:46:29.865 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 10:46:29.874 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 109.1906ms
2019-11-07 10:46:29.898 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:46:29.907 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 221.11260000000001ms 200 image/jpeg
2019-11-07 10:46:30.031 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 10:46:30.033 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 272.9429ms
2019-11-07 10:46:30.035 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:46:30.037 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 355.007ms 200 image/jpeg
2019-11-07 10:46:31.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 158
2019-11-07 10:46:31.484 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:46:31.487 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:46:31.488 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:46:31.492 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:46:31.497 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:46:31.501 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:46:31.547 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 10:46:31.680 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 10:46:31.684 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 10:46:31.688 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 10:46:31.692 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 10:46:31.695 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 204.30360000000002ms
2019-11-07 10:46:31.697 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:46:31.699 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 219.62800000000001ms 200 application/json; charset=utf-8
2019-11-07 10:50:59.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.430 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.432 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.434 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.436 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.438 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.440 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.442 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.444 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.446 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.448 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.450 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.452 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.453 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.455 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.456 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.458 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.460 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 10:50:59.516 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:50:59.884 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 10:50:59.967 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 10:51:00.119 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 10:51:00.469 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 10:51:00.476 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 10:51:00.480 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 10:51:00.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 10:51:00.509 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 10:51:00.564 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 10:51:00.592 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 10:51:00.614 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 10:51:00.781 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 172.05010000000001ms.
2019-11-07 10:51:00.790 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 189.9455ms
2019-11-07 10:51:00.793 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 10:51:00.798 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 305.58230000000003ms 200 text/html; charset=utf-8
2019-11-07 10:51:02.699 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 10:51:02.710 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:51:02.712 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 10:51:02.719 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:51:02.727 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:51:02.806 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:51:02.931 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 10:51:03.056 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.215 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.283 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.290 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.302 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.307 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.312 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.318 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.327 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.330 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.334 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.341 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.350 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.355 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.360 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.364 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.374 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.379 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.385 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.392 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.400 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.405 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.410 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.415 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.421 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 10:51:03.426 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.432 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.438 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 10:51:03.463 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 521.2443000000001ms.
2019-11-07 10:51:03.465 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 10:51:03.466 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 10:51:03.468 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 748.1103ms
2019-11-07 10:51:03.471 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 10:51:03.476 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 777.1008ms 200 text/html; charset=utf-8
2019-11-07 10:51:03.495 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:51:03.496 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:51:03.504 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 10:51:03.508 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 10:51:03.708 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:51:03.712 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:51:03.724 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:51:03.779 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 10:51:03.795 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 285.2545ms
2019-11-07 10:51:03.799 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:51:03.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 335.9023ms 200 image/jpeg
2019-11-07 10:51:04.063 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 10:51:04.067 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 559.0244ms
2019-11-07 10:51:04.070 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 10:51:04.072 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 606.6170000000001ms 200 image/jpeg
2019-11-07 10:51:05.391 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 10:51:05.396 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 10:51:05.398 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:51:05.431 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 10:51:23.844 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 10:51:23.855 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:51:23.866 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 10:51:24.016 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 10:51:24.171 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 10:51:24.178 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 10:51:24.295 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 10:51:24.344 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 10:51:24.352 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 18919.2266ms
2019-11-07 10:51:24.354 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 10:51:24.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18966.5603ms 200 application/json; charset=utf-8
2019-11-07 11:04:48.646 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.654 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.656 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.657 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.659 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.662 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.664 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.666 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.668 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.669 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.671 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.673 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.675 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.676 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.678 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.680 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.682 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:04:48.720 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:04:49.136 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 11:04:49.213 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 11:04:49.374 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 11:04:49.753 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 11:04:49.758 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 11:04:49.759 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 11:04:49.772 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 11:04:49.779 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 11:04:49.834 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:04:49.865 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 11:04:49.882 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:04:50.048 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 168.1705ms.
2019-11-07 11:04:50.062 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 184.2783ms
2019-11-07 11:04:50.065 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:04:50.072 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 299.57620000000003ms 200 text/html; charset=utf-8
2019-11-07 11:04:52.546 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:04:52.558 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:04:52.561 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:04:52.571 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:04:52.579 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:04:52.684 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:04:52.800 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:04:52.937 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.072 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.128 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.135 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.145 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.150 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.155 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.159 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.167 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.172 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.179 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.185 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.208 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.213 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.218 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.225 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.234 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.238 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.242 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.247 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.255 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.260 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.266 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.272 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.278 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:04:53.281 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.285 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.292 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:04:53.313 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 507.2626ms.
2019-11-07 11:04:53.318 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 744.5835000000001ms
2019-11-07 11:04:53.320 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:04:53.324 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:04:53.326 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:04:53.331 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 786.9735000000001ms 200 text/html; charset=utf-8
2019-11-07 11:04:53.350 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:04:53.353 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:04:53.361 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:04:53.364 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:04:53.437 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:04:53.439 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:04:53.456 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:04:53.553 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:04:53.571 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 207.10490000000001ms
2019-11-07 11:04:53.573 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:04:53.575 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 254.5003ms 200 image/jpeg
2019-11-07 11:04:53.823 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:04:53.826 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 459.0787ms
2019-11-07 11:04:53.828 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:04:53.830 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 509.9442ms 200 image/jpeg
2019-11-07 11:04:55.057 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:04:55.062 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:04:55.065 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:04:55.101 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:04:57.285 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:04:57.297 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:04:57.310 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:04:57.486 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 11:04:57.672 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 11:04:57.681 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 11:04:57.852 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:04:57.902 +02:00 [Error] Microsoft.EntityFrameworkCore.Database.Command: Failed executing DbCommand (41ms) [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:04:57.927 +02:00 [Error] Microsoft.EntityFrameworkCore.Update: An exception occurred in the database while saving changes for context type 'CateringPro.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_UserDayDish'. Cannot insert duplicate key in object 'dbo.UserDayDish'. The duplicate key value is (27fb457f-8b4f-4a66-96ce-5e98ae2f1d91, 2019-11-03, 2, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:960e0e68-14c4-449a-9242-f9ad479bacce
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_UserDayDish'. Cannot insert duplicate key in object 'dbo.UserDayDish'. The duplicate key value is (27fb457f-8b4f-4a66-96ce-5e98ae2f1d91, 2019-11-03, 2, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:960e0e68-14c4-449a-9242-f9ad479bacce
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2019-11-07 11:04:58.006 +02:00 [Error] CateringPro.Models.CompanyUser: Update user day complex
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_UserDayDish'. Cannot insert duplicate key in object 'dbo.UserDayDish'. The duplicate key value is (27fb457f-8b4f-4a66-96ce-5e98ae2f1d91, 2019-11-03, 2, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:960e0e68-14c4-449a-9242-f9ad479bacce
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at CateringPro.Repositories.UserDayDishesRepository.SaveDayComplex(List`1 daycomplex, HttpContext httpcontext) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\UserDayDishesRepository.cs:line 355
2019-11-07 11:04:58.013 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:04:58.023 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 2918.2051ms
2019-11-07 11:04:58.025 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:04:58.028 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2971.7512ms 200 application/json; charset=utf-8
2019-11-07 11:07:32.650 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:07:32.656 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:07:32.659 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:07:32.668 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:07:35.161 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:07:35.169 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:07:35.184 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:07:35.238 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 11:07:35.366 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 11:07:35.369 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 11:07:35.375 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:07:35.408 +02:00 [Error] Microsoft.EntityFrameworkCore.Database.Command: Failed executing DbCommand (32ms) [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:07:35.415 +02:00 [Error] Microsoft.EntityFrameworkCore.Update: An exception occurred in the database while saving changes for context type 'CateringPro.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_UserDayDish'. Cannot insert duplicate key in object 'dbo.UserDayDish'. The duplicate key value is (27fb457f-8b4f-4a66-96ce-5e98ae2f1d91, 2019-11-03, 2, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:960e0e68-14c4-449a-9242-f9ad479bacce
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_UserDayDish'. Cannot insert duplicate key in object 'dbo.UserDayDish'. The duplicate key value is (27fb457f-8b4f-4a66-96ce-5e98ae2f1d91, 2019-11-03, 2, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:960e0e68-14c4-449a-9242-f9ad479bacce
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2019-11-07 11:07:35.455 +02:00 [Error] CateringPro.Models.CompanyUser: Update user day complex
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_UserDayDish'. Cannot insert duplicate key in object 'dbo.UserDayDish'. The duplicate key value is (27fb457f-8b4f-4a66-96ce-5e98ae2f1d91, 2019-11-03, 2, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:960e0e68-14c4-449a-9242-f9ad479bacce
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at CateringPro.Repositories.UserDayDishesRepository.SaveDayComplex(List`1 daycomplex, HttpContext httpcontext) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\UserDayDishesRepository.cs:line 355
2019-11-07 11:07:35.457 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:07:35.460 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 2789.5064ms
2019-11-07 11:07:35.462 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:07:35.464 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2816.4205ms 200 application/json; charset=utf-8
2019-11-07 11:29:10.427 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:29:10.433 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:29:10.457 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:29:10.490 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 11:29:10.514 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 11:29:10.529 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 11:29:10.543 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 11:29:10.551 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:29:10.554 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:29:10.556 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:29:15.273 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:29:15.348 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 11:29:15.550 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 11:29:15.553 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 11:29:15.559 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:29:15.598 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:29:15.605 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 5046.7832ms
2019-11-07 11:29:15.607 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:29:15.609 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5181.9223ms 200 application/json; charset=utf-8
2019-11-07 11:32:16.774 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:32:16.778 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:32:16.780 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:32:16.782 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:32:16.786 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:32:16.790 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:32:16.804 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:32:16.849 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 11:32:16.974 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 11:32:16.977 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 11:32:16.983 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:32:17.021 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:32:17.026 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 240.1511ms
2019-11-07 11:32:17.029 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:32:17.031 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 257.5844ms 200 application/json; charset=utf-8
2019-11-07 11:32:35.743 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:32:35.747 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:32:35.752 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:32:35.755 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:32:35.761 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:32:35.766 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:32:35.773 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:32:35.827 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 11:32:35.955 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 11:35:37.336 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.346 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.348 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.350 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.351 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.353 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.355 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.357 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.359 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.361 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.363 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.365 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.367 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.369 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.371 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.373 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.375 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.377 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.378 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:35:37.417 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:35:37.792 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 11:35:37.878 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 11:35:38.020 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 11:35:38.392 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 11:35:38.399 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 11:35:38.401 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 11:35:38.417 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 11:35:38.427 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 11:35:38.498 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:35:38.526 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 11:35:38.544 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:35:38.710 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 166.4076ms.
2019-11-07 11:35:38.721 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 184.9657ms
2019-11-07 11:35:38.723 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:35:38.729 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 311.7871ms 200 text/html; charset=utf-8
2019-11-07 11:35:52.027 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:35:52.038 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:35:52.040 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:35:52.049 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:35:52.056 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:35:52.131 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:35:52.242 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:35:52.366 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.482 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.533 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.538 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.550 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.554 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.559 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.563 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.572 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.578 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.585 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.591 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.600 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.620 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.628 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.634 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.642 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.646 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.651 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.657 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.665 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.670 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.674 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.680 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.686 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:35:52.690 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.695 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.699 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:35:52.717 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 469.86580000000004ms.
2019-11-07 11:35:52.720 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:35:52.722 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:35:52.725 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 673.9613ms
2019-11-07 11:35:52.729 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:35:52.736 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 708.6046ms 200 text/html; charset=utf-8
2019-11-07 11:35:52.752 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:35:52.754 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:35:52.762 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:35:52.764 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:35:52.828 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:35:52.830 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:35:52.841 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:35:52.923 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:35:52.934 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 167.0452ms
2019-11-07 11:35:52.936 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:35:52.938 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 219.87740000000002ms 200 image/jpeg
2019-11-07 11:35:53.160 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:35:53.163 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 395.4065ms
2019-11-07 11:35:53.165 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:35:53.168 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 449.2577ms 200 image/jpeg
2019-11-07 11:35:54.142 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:35:54.147 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:35:54.150 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:35:54.178 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:35:54.210 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:35:54.221 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:35:54.232 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:35:54.406 +02:00 [Error] CateringPro.Models.CompanyUser: CustomerInvoice User=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91 
System.InvalidOperationException: Set operations over different store types are currently unsupported
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplySetOperation(SetOperationType setOperationType, SelectExpression select2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression.ApplyUnion(SelectExpression source2, Boolean distinct)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateUnion(ShapedQueryExpression source1, ShapedQueryExpression source2)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at CateringPro.Repositories.InvoiceRepository.CustomerInvoice(String UserId, DateTime daydate, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\InvoiceRepository.cs:line 116
2019-11-07 11:35:54.571 +02:00 [Error] CateringPro.Models.CompanyUser: SendInvoice 
System.NullReferenceException: Object reference not set to an instance of an object.
   at AspNetCore.Views_Invoice_EmailInvoice.<ExecuteAsync>b__8_1() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 150
   at Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext.SetOutputContentAsync()
   at AspNetCore.Views_Invoice_EmailInvoice.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Invoice\EmailInvoice.cshtml:line 3
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at CateringPro.Core.RazorViewToStringRenderer.RenderViewToStringAsync[TModel](String viewName, TModel model) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\RazorViewToStringRenderer.cs:line 55
   at CateringPro.Core.EmailService.SendInvoice(String userid, DateTime daydate, Int32 comapnyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Core\EmailService.cs:line 48
2019-11-07 11:36:27.701 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 11:36:40.432 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:37:30.642 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:37:30.654 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 96474.3613ms
2019-11-07 11:37:30.656 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:37:30.658 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 96517.01770000001ms 200 application/json; charset=utf-8
2019-11-07 11:38:21.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:38:21.280 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:38:21.282 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:38:21.285 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:38:28.395 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:38:28.399 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:38:28.889 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:44:52.897 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.914 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.919 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.921 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.922 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.924 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.925 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.927 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.928 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.930 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.931 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.933 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.935 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.936 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.938 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.940 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:44:52.995 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:44:53.421 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 11:44:53.526 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 11:44:53.675 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 11:44:54.079 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 11:44:54.084 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 11:44:54.085 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 11:44:54.099 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 11:44:54.107 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 11:44:54.174 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:44:54.201 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 11:44:54.218 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:44:54.376 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 160.7529ms.
2019-11-07 11:44:54.387 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 177.21380000000002ms
2019-11-07 11:44:54.390 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:44:54.395 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 296.9491ms 200 text/html; charset=utf-8
2019-11-07 11:44:56.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:44:56.059 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:44:56.060 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:44:56.068 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:44:56.077 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:44:56.159 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:44:56.285 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:44:56.424 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.559 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.614 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.620 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.627 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.630 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.634 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.640 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.649 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.655 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.659 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.662 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.671 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.676 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.681 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.686 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.692 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.696 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.702 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.708 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.714 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.718 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.722 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.728 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.737 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:44:56.742 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.747 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.753 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:44:56.767 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 479.1111ms.
2019-11-07 11:44:56.772 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 701.0500000000001ms
2019-11-07 11:44:56.776 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:44:56.777 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:44:56.779 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:44:56.788 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 744.6502ms 200 text/html; charset=utf-8
2019-11-07 11:44:56.804 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:44:56.806 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:44:56.811 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:44:56.813 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:44:56.898 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:44:56.900 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:44:56.911 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:44:57.017 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:44:57.038 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 222.45010000000002ms
2019-11-07 11:44:57.040 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:44:57.043 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 269.8306ms 200 image/jpeg
2019-11-07 11:44:57.292 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:44:57.294 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 480.9024ms
2019-11-07 11:44:57.298 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:44:57.301 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 527.0298ms 200 image/jpeg
2019-11-07 11:44:58.774 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/UserDayDishes/SaveDayComplex application/x-www-form-urlencoded; charset=UTF-8 164
2019-11-07 11:44:58.779 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:44:58.781 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:44:58.810 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayComplex", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayComplex(System.Collections.Generic.List`1[CateringPro.Models.UserDayComplex]) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:45:06.873 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:45:06.883 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:45:07.296 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:45:16.358 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t0].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[KKal], [d0].[Name], [d0].[PictureId], [d0].[Price], [d0].[ReadyWeight]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-11-07 11:45:16.981 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT N'' AS [Code], [t].[Name], [t0].[Quantity], [t0].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayComplex] AS [d]
INNER JOIN (
    SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
    FROM [Complex] AS [c]
    WHERE ([c].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[ComplexId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[ComplexId] = [t0].[ComplexId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-11-07 11:45:26.595 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userid_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__userid_0) AND @__userid_0 IS NOT NULL
2019-11-07 11:45:37.092 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__d_CompanyId_0='?' (DbType = Int32), @__d_Date_1='?' (DbType = Date), @__d_UserId_2='?' (Size = 450), @__d_ComplexId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
FROM [UserDayComplex] AS [u]
WHERE (((([u].[CompanyId] = @__d_CompanyId_0) AND @__d_CompanyId_0 IS NOT NULL) AND (([u].[Date] = @__d_Date_1) AND @__d_Date_1 IS NOT NULL)) AND (([u].[UserId] = @__d_UserId_2) AND @__d_UserId_2 IS NOT NULL)) AND (([u].[ComplexId] = @__d_ComplexId_3) AND @__d_ComplexId_3 IS NOT NULL)
2019-11-07 11:45:37.207 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p2='?' (Size = 450), @p3='?' (DbType = Date), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p0='?' (DbType = Decimal), @p1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [UserDayComplex] SET [Price] = @p0, [Quantity] = @p1
WHERE [UserId] = @p2 AND [Date] = @p3 AND [ComplexId] = @p4 AND [CompanyId] = @p5;
SELECT @@ROWCOUNT;
2019-11-07 11:45:37.258 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:45:37.266 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro) in 38453.1788ms
2019-11-07 11:45:37.267 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.SaveDayComplex (CateringPro)'
2019-11-07 11:45:37.270 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38496.3516ms 200 application/json; charset=utf-8
2019-11-07 11:51:00.455 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.461 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.461 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.461 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.461 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.461 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.462 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.463 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.464 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:51:00.490 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:51:00.685 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 11:51:00.740 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 11:51:00.859 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 11:51:01.012 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 11:51:01.013 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 11:51:01.013 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 11:51:01.022 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 11:51:01.028 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 11:51:01.062 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:51:01.081 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 11:51:01.092 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:51:01.188 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 96.861ms.
2019-11-07 11:51:01.189 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 107.7018ms
2019-11-07 11:51:01.189 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:51:01.198 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 175.6456ms 200 text/html; charset=utf-8
2019-11-07 11:51:03.796 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:51:03.807 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization failed.
2019-11-07 11:51:03.812 +02:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application was challenged.
2019-11-07 11:51:03.813 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.663700000000002ms 302 
2019-11-07 11:51:03.818 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Home/Index?ReturnUrl=%2FMyOrders  
2019-11-07 11:51:03.819 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:51:03.819 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 11:51:03.822 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:51:03.833 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 11.4928ms.
2019-11-07 11:51:03.834 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 14.003ms
2019-11-07 11:51:03.834 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:51:03.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.1448ms 200 text/html; charset=utf-8
2019-11-07 11:51:03.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-11-07 11:51:03.932 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-11-07 11:51:03.935 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-11-07 11:51:03.938 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-11-07 11:51:03.970 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 32.4354ms.
2019-11-07 11:51:03.970 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 35.163000000000004ms
2019-11-07 11:51:03.970 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-11-07 11:51:03.970 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.8766ms 200 text/html; charset=utf-8
2019-11-07 11:51:08.656 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-11-07 11:51:08.660 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-11-07 11:51:08.660 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-11-07 11:51:08.661 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-11-07 11:51:08.664 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 2.6582000000000003ms.
2019-11-07 11:51:08.664 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 4.0839ms
2019-11-07 11:51:08.664 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-11-07 11:51:08.664 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.983500000000001ms 200 text/html; charset=utf-8
2019-11-07 11:51:10.936 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-11-07 11:51:10.937 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-11-07 11:51:10.947 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-11-07 11:51:10.965 +02:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-11-07 11:51:10.968 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:51:11.033 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-11-07 11:51:11.176 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 11:51:11.212 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 11:51:11.237 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 11:51:11.257 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 11:51:11.268 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 11:51:11.274 +02:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-11-07 11:51:11.280 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 11:51:11.285 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 337.7739ms
2019-11-07 11:51:11.285 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-11-07 11:51:11.288 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 351.7672ms 200 application/json; charset=utf-8
2019-11-07 11:51:11.294 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 11:51:11.297 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:51:11.297 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 11:51:11.297 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:51:11.303 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.3066ms.
2019-11-07 11:51:11.303 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 6.564ms
2019-11-07 11:51:11.303 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 11:51:11.303 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.6088ms 200 text/html; charset=utf-8
2019-11-07 11:51:12.203 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:51:12.207 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:51:12.208 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:51:12.211 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:51:12.240 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:51:12.251 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:51:12.254 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:51:12.327 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.428 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.472 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.476 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.482 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.484 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.487 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.490 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.496 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.498 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.500 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.503 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.508 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.510 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.512 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.515 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.519 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.522 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.525 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.527 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.532 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.534 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.536 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.540 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.545 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:51:12.547 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.551 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.555 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:51:12.562 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 308.2517ms.
2019-11-07 11:51:12.562 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 350.825ms
2019-11-07 11:51:12.562 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:51:12.562 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 358.9443ms 200 text/html; charset=utf-8
2019-11-07 11:51:12.570 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:51:12.573 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:51:12.573 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:51:12.576 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:51:12.581 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:51:12.581 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:51:12.587 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:51:12.587 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:51:12.593 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:51:12.640 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:51:12.653 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 72.0961ms
2019-11-07 11:51:12.653 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:51:12.653 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 80.274ms 200 image/jpeg
2019-11-07 11:51:12.905 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:51:12.905 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 324.1197ms
2019-11-07 11:51:12.905 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:51:12.905 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 335.6311ms 200 image/jpeg
2019-11-07 11:54:05.668 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:54:05.671 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:54:05.671 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:54:05.671 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:54:05.673 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:54:05.675 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:54:05.678 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:54:05.683 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.706 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.738 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.741 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.746 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.748 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.751 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.754 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.758 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.760 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.764 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.767 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.772 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.774 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.777 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.780 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.784 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.786 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.789 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.791 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.795 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.798 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.800 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.803 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.806 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:54:05.808 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.811 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.814 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:54:05.818 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 139.5834ms.
2019-11-07 11:54:05.818 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 146.50320000000002ms
2019-11-07 11:54:05.818 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:54:05.818 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 149.9077ms 200 text/html; charset=utf-8
2019-11-07 11:54:05.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 11:54:05.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 11:54:05.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 11:54:05.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 11:54:05.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 11:54:05.825 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 11:54:05.828 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-11-07 11:54:05.828 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 11:54:05.828 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-11-07 11:54:05.828 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-11-07 11:54:05.829 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-11-07 11:54:05.829 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.8446ms 304 application/javascript
2019-11-07 11:54:05.829 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.1037ms 304 application/javascript
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0726ms 304 text/css
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4722ms 304 application/javascript
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5722ms 304 text/css
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.9627000000000003ms 304 text/css
2019-11-07 11:54:05.831 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.4816ms 304 text/css
2019-11-07 11:54:05.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 11:54:05.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 11:54:05.832 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-11-07 11:54:05.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3743ms 304 text/css
2019-11-07 11:54:05.832 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7157ms 304 application/javascript
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:54:05.833 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3146ms 304 text/css
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2059ms 304 application/javascript
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:54:05.834 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:54:05.835 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0406ms 304 application/javascript
2019-11-07 11:54:05.836 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:54:05.852 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 11:54:05.852 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.145100000000003ms 200 text/css
2019-11-07 11:54:05.860 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:54:05.862 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 28.3469ms
2019-11-07 11:54:05.862 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:54:05.862 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.927200000000003ms 200 image/jpeg
2019-11-07 11:54:05.931 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 11:54:05.931 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-11-07 11:54:05.931 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3397ms 304 font/woff2
2019-11-07 11:54:05.995 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:54:05.995 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 161.96550000000002ms
2019-11-07 11:54:05.995 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:54:05.995 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 164.2876ms 200 image/jpeg
2019-11-07 11:55:19.904 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.911 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:55:19.939 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:55:20.124 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 11:55:20.173 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 11:55:20.293 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 11:55:20.446 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 11:55:20.446 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 11:55:20.446 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 11:55:20.461 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:55:20.468 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 11:55:20.518 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:55:20.519 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:55:20.538 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:55:20.543 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:55:20.614 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:55:20.723 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:55:20.855 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:20.981 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.030 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.034 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.041 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:21.044 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.048 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.051 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.057 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:21.060 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.064 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.067 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.073 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:21.076 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.079 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.082 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.087 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:21.089 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.091 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.093 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.098 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:21.101 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.105 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.108 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.113 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:55:21.116 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.119 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.122 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:55:21.203 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 476.2742ms.
2019-11-07 11:55:21.204 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 11:55:21.205 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 667.0649000000001ms
2019-11-07 11:55:21.205 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 11:55:21.206 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:55:21.208 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 11:55:21.208 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 11:55:21.208 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 11:55:21.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-11-07 11:55:21.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-11-07 11:55:21.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-11-07 11:55:21.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-11-07 11:55:21.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-11-07 11:55:21.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.0555ms 304 text/css
2019-11-07 11:55:21.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.9072ms 304 text/css
2019-11-07 11:55:21.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6554ms 304 text/css
2019-11-07 11:55:21.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.4653ms 304 application/javascript
2019-11-07 11:55:21.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 11:55:21.213 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-11-07 11:55:21.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1981ms 304 application/javascript
2019-11-07 11:55:21.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3266ms 304 text/css
2019-11-07 11:55:21.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 11:55:21.213 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5925ms 304 application/javascript
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 754.053ms 200 text/html; charset=utf-8
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0595ms 304 text/css
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0422ms 304 application/javascript
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.48ms 304 text/css
2019-11-07 11:55:21.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2621ms 304 text/css
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5604ms 304 application/javascript
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-11-07 11:55:21.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3758ms 304 application/javascript
2019-11-07 11:55:21.223 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:55:21.223 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:55:21.235 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:55:21.235 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:55:21.288 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:55:21.288 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:55:21.294 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:55:21.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 11:55:21.333 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-11-07 11:55:21.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.9539ms 304 font/woff2
2019-11-07 11:55:21.353 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:55:21.364 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 128.8425ms
2019-11-07 11:55:21.364 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:55:21.364 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 148.4281ms 200 image/jpeg
2019-11-07 11:55:21.635 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:55:21.635 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 399.8817ms
2019-11-07 11:55:21.635 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:55:21.635 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 419.3954ms 200 image/jpeg
2019-11-07 11:58:14.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.917 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.918 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.918 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.918 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.918 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 11:58:14.944 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:15.131 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 11:58:15.176 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 11:58:15.285 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 11:58:15.424 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 11:58:15.425 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 11:58:15.425 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 11:58:15.437 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:58:15.443 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 11:58:15.488 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:58:15.489 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:58:15.516 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:58:15.521 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:15.600 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:58:15.705 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:58:15.845 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:15.990 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.032 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.036 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.043 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:16.046 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.049 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.053 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.059 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:16.062 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.066 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.069 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.074 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:16.077 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.080 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.096 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.102 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:16.104 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.106 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.108 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.112 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:16.114 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.119 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.123 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.128 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:16.131 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.133 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.135 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:16.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 11:58:16.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:58:16.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:58:16.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 11:58:16.213 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 504.53290000000004ms.
2019-11-07 11:58:16.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 11:58:16.215 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 698.3939ms
2019-11-07 11:58:16.215 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:58:16.217 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 11:58:16.217 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-11-07 11:58:16.217 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-11-07 11:58:16.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9067ms 304 text/css
2019-11-07 11:58:16.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.7022ms 304 application/javascript
2019-11-07 11:58:16.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.1032ms 304 application/javascript
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 11:58:16.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3103ms 304 text/css
2019-11-07 11:58:16.221 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5963ms 304 application/javascript
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 786.1975ms 200 text/html; charset=utf-8
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.52ms 304 application/javascript
2019-11-07 11:58:16.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8913000000000001ms 304 text/css
2019-11-07 11:58:16.224 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 11:58:16.224 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-11-07 11:58:16.224 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.29810000000000003ms 304 application/javascript
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2048ms 304 text/css
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4879ms 304 text/css
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-11-07 11:58:16.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3189ms 304 text/css
2019-11-07 11:58:16.227 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 11:58:16.227 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-11-07 11:58:16.227 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3224ms 304 application/javascript
2019-11-07 11:58:16.233 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 11:58:16.233 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.493300000000001ms 200 text/css
2019-11-07 11:58:16.233 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:58:16.233 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:58:16.279 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:16.279 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:16.286 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:58:16.321 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 11:58:16.321 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-11-07 11:58:16.322 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8588ms 304 font/woff2
2019-11-07 11:58:16.326 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:58:16.340 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 107.1577ms
2019-11-07 11:58:16.340 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:16.340 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 127.05090000000001ms 200 image/jpeg
2019-11-07 11:58:16.629 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:58:16.629 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 395.839ms
2019-11-07 11:58:16.629 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:16.629 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 415.53310000000005ms 200 image/jpeg
2019-11-07 11:58:57.490 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 11:58:57.501 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 11:58:57.501 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:58:57.501 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 11:58:57.502 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:57.504 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:58:57.507 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 11:58:57.512 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.535 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.574 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.577 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.583 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.586 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.590 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.592 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.598 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.600 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.603 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.605 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.611 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.614 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.617 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.619 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.624 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.625 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.628 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.631 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.637 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.639 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.642 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.645 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.650 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 11:58:57.651 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.654 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.656 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 11:58:57.662 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 155.00140000000002ms.
2019-11-07 11:58:57.663 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 161.2144ms
2019-11-07 11:58:57.663 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 11:58:57.663 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 173.0411ms 200 text/html; charset=utf-8
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8081ms 304 text/css
2019-11-07 11:58:57.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7891ms 304 text/css
2019-11-07 11:58:57.670 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9311ms 304 text/css
2019-11-07 11:58:57.670 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0483ms 304 application/javascript
2019-11-07 11:58:57.670 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2913ms 304 text/css
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.27340000000000003ms 304 text/css
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2705ms 304 text/css
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2398ms 304 application/javascript
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 11:58:57.671 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.39380000000000004ms 304 application/javascript
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3537ms 304 application/javascript
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.25270000000000004ms 304 application/javascript
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:57.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3508ms 304 application/javascript
2019-11-07 11:58:57.673 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:57.673 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:58:57.673 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 11:58:57.673 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 11:58:57.674 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:57.674 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 11:58:57.675 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 11:58:57.690 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 11:58:57.690 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.579900000000002ms 200 text/css
2019-11-07 11:58:57.704 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:58:57.705 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 32.8628ms
2019-11-07 11:58:57.706 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:57.706 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.7349ms 200 image/jpeg
2019-11-07 11:58:57.770 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 11:58:57.770 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-11-07 11:58:57.770 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2936ms 304 font/woff2
2019-11-07 11:58:57.848 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 11:58:57.848 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 175.6117ms
2019-11-07 11:58:57.848 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 11:58:57.848 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 179.84ms 200 image/jpeg
2019-11-07 12:00:52.246 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:00:52.247 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:00:52.246 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:00:52.246 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:00:52.246 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:00:52.247 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:00:52.265 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:00:52.265 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:00:52.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.323800000000002ms 200 text/css
2019-11-07 12:00:52.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.366600000000002ms 200 text/css
2019-11-07 12:00:52.267 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:00:52.267 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.326ms 200 text/css
2019-11-07 12:00:52.273 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:00:52.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.250300000000003ms 200 text/css
2019-11-07 12:00:52.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:00:52.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:00:52.273 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:00:52.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.462200000000003ms 200 text/css
2019-11-07 12:00:52.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:00:52.274 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:00:52.274 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:00:52.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0527ms 200 text/css
2019-11-07 12:00:52.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48160000000000003ms 200 text/css
2019-11-07 12:00:52.275 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:00:52.275 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.552300000000002ms 200 text/css
2019-11-07 12:00:52.275 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:00:52.276 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3469ms 200 text/css
2019-11-07 12:00:52.279 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:00:52.280 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:00:52.280 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8098000000000001ms 200 text/css
2019-11-07 12:00:52.284 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:00:52.284 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:00:52.284 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:00:52.284 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3541ms 200 text/css
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.34940000000000004ms 200 text/css
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8726ms 200 text/css
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:00:52.285 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5578000000000001ms 200 text/css
2019-11-07 12:00:52.352 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:00:52.352 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:00:52.353 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7192ms 404 
2019-11-07 12:00:52.353 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7191ms 404 
2019-11-07 12:00:52.498 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:00:52.500 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6158000000000001ms 404 
2019-11-07 12:00:52.500 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:00:52.501 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5469ms 404 
2019-11-07 12:01:53.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 12:01:53.415 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 12:01:53.415 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:01:53.416 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 12:01:53.418 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:01:53.422 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:01:53.427 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 12:01:53.435 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.468 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.513 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.516 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.522 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.524 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.526 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.529 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.534 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.536 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.539 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.541 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.546 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.548 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.550 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.552 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.556 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.558 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.560 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.563 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.568 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.570 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.573 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.576 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.580 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:01:53.582 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.584 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.587 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:01:53.592 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 164.395ms.
2019-11-07 12:01:53.592 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 175.9616ms
2019-11-07 12:01:53.592 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:01:53.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 180.4889ms 200 text/html; charset=utf-8
2019-11-07 12:01:53.602 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:01:53.602 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 12:01:53.602 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41050000000000003ms 200 application/javascript
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6848000000000001ms 200 text/css
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:01:53.603 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.557ms 200 text/css
2019-11-07 12:01:53.605 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:01:53.605 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5861ms 200 text/css
2019-11-07 12:01:53.607 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:01:53.607 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.7149ms 200 text/css
2019-11-07 12:01:53.608 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:01:53.608 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 12:01:53.611 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:01:53.611 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:01:53.611 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4818000000000002ms 200 text/css
2019-11-07 12:01:53.613 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 12:01:53.619 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 12:01:53.630 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:01:53.631 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:01:53.631 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.6139ms 200 text/css
2019-11-07 12:01:53.642 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:01:53.642 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.821100000000001ms 200 text/css
2019-11-07 12:01:53.650 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 12:01:53.652 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:01:53.653 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:01:53.654 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:01:53.658 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 12:01:53.659 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:01:53.659 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:01:53.659 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:01:53.660 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:01:53.680 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 12:01:53.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 71.9353ms 200 application/javascript
2019-11-07 12:01:53.692 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 12:01:53.695 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 12:01:53.695 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 76.6418ms 200 application/javascript
2019-11-07 12:01:53.701 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:01:53.701 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:01:53.701 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:01:53.701 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4723ms 200 text/css
2019-11-07 12:01:53.702 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 42.8958ms
2019-11-07 12:01:53.702 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:01:53.702 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.8772ms 200 image/jpeg
2019-11-07 12:01:53.708 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:01:53.708 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:01:53.709 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:01:53.709 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.45780000000000004ms 200 text/css
2019-11-07 12:01:53.709 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:01:53.709 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6876ms 200 text/css
2019-11-07 12:01:53.713 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:01:53.713 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:01:53.713 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:01:53.714 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5644ms 200 text/css
2019-11-07 12:01:53.714 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:01:53.714 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0821ms 200 text/css
2019-11-07 12:01:53.717 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:01:53.719 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:01:53.719 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1281ms 200 text/css
2019-11-07 12:01:53.721 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:01:53.722 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:01:53.723 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:01:53.723 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4365ms 200 text/css
2019-11-07 12:01:53.724 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 12:01:53.724 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:01:53.724 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1495ms 200 text/css
2019-11-07 12:01:53.724 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.412100000000002ms 200 application/javascript
2019-11-07 12:01:53.727 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:01:53.727 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:01:53.727 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.56ms 200 text/css
2019-11-07 12:01:53.727 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:01:53.728 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:01:53.728 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5684ms 200 text/css
2019-11-07 12:01:53.728 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:01:53.730 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:01:53.730 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:01:53.730 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4681ms 200 text/css
2019-11-07 12:01:53.734 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:01:53.734 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.1085ms 200 text/css
2019-11-07 12:01:53.734 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:01:53.736 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:01:53.736 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.72ms 200 text/css
2019-11-07 12:01:53.736 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:01:53.738 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:01:53.738 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9652ms 200 text/css
2019-11-07 12:01:53.783 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:01:53.783 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4297ms 404 
2019-11-07 12:01:53.786 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:01:53.786 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3637ms 404 
2019-11-07 12:01:53.849 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:01:53.849 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 196.5927ms
2019-11-07 12:01:53.849 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:01:53.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 199.167ms 200 image/jpeg
2019-11-07 12:01:53.909 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 12:01:53.909 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 306.4414ms 200 application/javascript
2019-11-07 12:01:54.411 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 12:01:54.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 797.8810000000001ms 200 application/javascript
2019-11-07 12:01:54.522 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 12:01:54.531 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 12:01:54.532 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.3297ms 200 font/woff2
2019-11-07 12:01:54.564 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:01:54.564 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:01:54.566 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4577ms 404 
2019-11-07 12:01:54.566 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0112ms 404 
2019-11-07 12:09:42.014 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.019 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.019 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.019 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.019 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.021 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.021 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.021 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.021 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.021 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.022 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.022 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.022 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:09:42.048 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:09:42.241 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 12:09:42.291 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 12:09:42.401 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 12:09:42.572 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 12:09:42.572 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 12:09:42.572 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 12:09:42.583 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 12:09:42.591 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 12:09:42.642 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 12:09:42.643 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:09:42.662 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 12:09:42.668 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:09:42.747 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:09:42.869 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 12:09:43.000 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.131 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.174 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.177 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.182 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.184 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.187 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.189 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.196 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.199 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.203 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.207 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.213 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.216 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.220 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.223 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.228 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.242 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.246 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.249 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.256 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.258 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.263 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.267 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.272 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:09:43.273 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.275 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.277 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:09:43.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:09:43.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:09:43.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:09:43.362 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 488.3921ms.
2019-11-07 12:09:43.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:09:43.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:09:43.364 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 702.3505ms
2019-11-07 12:09:43.365 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:09:43.368 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:09:43.368 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:09:43.368 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:09:43.368 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.3383ms 200 text/css
2019-11-07 12:09:43.368 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0536ms 200 text/css
2019-11-07 12:09:43.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.2936000000000005ms 200 text/css
2019-11-07 12:09:43.373 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:09:43.374 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.5427ms 200 text/css
2019-11-07 12:09:43.374 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:09:43.374 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.01ms 200 text/css
2019-11-07 12:09:43.374 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 12:09:43.374 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:09:43.375 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:09:43.375 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5671ms 200 text/css
2019-11-07 12:09:43.378 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 12:09:43.378 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:09:43.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 12:09:43.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 12:09:43.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 798.2662ms 200 text/html; charset=utf-8
2019-11-07 12:09:43.384 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:09:43.385 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 12:09:43.385 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0981000000000005ms 200 application/javascript
2019-11-07 12:09:43.385 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:09:43.385 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.416ms 200 text/css
2019-11-07 12:09:43.386 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 12:09:43.391 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 12:09:43.391 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.698ms 200 application/javascript
2019-11-07 12:09:43.392 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 12:09:43.392 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.4719ms 200 application/javascript
2019-11-07 12:09:43.392 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 12:09:43.393 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 12:09:43.399 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 12:09:43.400 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 12:09:43.400 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2545000000000002ms 200 application/javascript
2019-11-07 12:09:43.403 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:09:43.404 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 12:09:43.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.7904ms 200 application/javascript
2019-11-07 12:09:43.405 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 12:09:43.405 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.3183ms 200 application/javascript
2019-11-07 12:09:43.415 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:09:43.416 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:09:43.421 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:09:43.421 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:09:43.422 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:09:43.422 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3997000000000002ms 200 text/css
2019-11-07 12:09:43.423 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:09:43.423 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1137000000000001ms 200 text/css
2019-11-07 12:09:43.487 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:09:43.487 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:09:43.492 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:09:43.493 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:09:43.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.49760000000000004ms 200 text/css
2019-11-07 12:09:43.493 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:09:43.494 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:09:43.495 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:09:43.495 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:09:43.496 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:09:43.496 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5188000000000001ms 200 text/css
2019-11-07 12:09:43.499 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:09:43.499 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.488ms 200 text/css
2019-11-07 12:09:43.507 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:09:43.508 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:09:43.508 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4959ms 200 text/css
2019-11-07 12:09:43.510 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:09:43.510 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:09:43.510 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.9106ms 200 text/css
2019-11-07 12:09:43.510 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:09:43.514 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:09:43.514 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6436ms 200 text/css
2019-11-07 12:09:43.514 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:09:43.514 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:09:43.518 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:09:43.518 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5979ms 200 text/css
2019-11-07 12:09:43.518 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:09:43.518 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.9863000000000004ms 200 text/css
2019-11-07 12:09:43.519 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:09:43.520 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:09:43.520 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.858500000000001ms 200 text/css
2019-11-07 12:09:43.522 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:09:43.522 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:09:43.522 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.7008ms 200 text/css
2019-11-07 12:09:43.527 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:09:43.527 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.7934ms 200 text/css
2019-11-07 12:09:43.530 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:09:43.531 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:09:43.531 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2928000000000002ms 200 text/css
2019-11-07 12:09:43.664 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:09:43.666 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:09:43.666 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5854ms 404 
2019-11-07 12:09:43.667 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5976ms 404 
2019-11-07 12:09:43.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 12:09:43.669 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 12:09:43.669 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8016000000000001ms 200 font/woff2
2019-11-07 12:09:43.699 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:09:43.717 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 314.1212ms
2019-11-07 12:09:43.717 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:09:43.718 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 343.10810000000004ms 200 image/jpeg
2019-11-07 12:09:43.785 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:09:43.786 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.40090000000000003ms 404 
2019-11-07 12:09:43.792 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:09:43.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.8237ms 404 
2019-11-07 12:09:44.103 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:09:44.103 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 687.2545ms
2019-11-07 12:09:44.103 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:09:44.103 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 711.1478000000001ms 200 image/jpeg
2019-11-07 12:10:15.774 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.781 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.782 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.782 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.782 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.782 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.782 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.782 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.783 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:10:15.808 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:10:15.991 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 12:10:16.030 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 12:10:16.136 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 12:10:16.268 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 12:10:16.269 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 12:10:16.269 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 12:10:16.279 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 12:10:16.285 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 12:10:16.338 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 12:10:16.339 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:10:16.359 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 12:10:16.364 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:10:16.438 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:10:16.557 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 12:10:16.712 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.821 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.842 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.846 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.852 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.854 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.856 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.871 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.878 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.881 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.885 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.888 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.894 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.896 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.899 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.901 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.905 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.906 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.908 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.912 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.917 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.919 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.923 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.926 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.931 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:10:16.933 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.937 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:16.940 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:10:17.016 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 458.1184ms.
2019-11-07 12:10:17.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:10:17.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:10:17.020 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 661.1601ms
2019-11-07 12:10:17.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:10:17.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:10:17.021 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:10:17.021 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:10:17.027 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:10:17.027 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:10:17.027 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:10:17.027 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.5656ms 200 text/css
2019-11-07 12:10:17.027 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.0285ms 200 text/css
2019-11-07 12:10:17.028 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.9190000000000005ms 200 text/css
2019-11-07 12:10:17.030 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 750.3454ms 200 text/html; charset=utf-8
2019-11-07 12:10:17.033 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 12:10:17.033 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:10:17.034 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:10:17.034 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:10:17.034 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.949800000000002ms 200 text/css
2019-11-07 12:10:17.034 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.5831ms 200 text/css
2019-11-07 12:10:17.035 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 12:10:17.035 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 12:10:17.037 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:10:17.037 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 12:10:17.037 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.7772ms 200 text/css
2019-11-07 12:10:17.037 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 12:10:17.037 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4421ms 200 application/javascript
2019-11-07 12:10:17.038 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 12:10:17.040 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 12:10:17.040 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5134ms 200 application/javascript
2019-11-07 12:10:17.040 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:10:17.041 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 12:10:17.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:10:17.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5781ms 200 text/css
2019-11-07 12:10:17.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 12:10:17.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7787000000000001ms 200 application/javascript
2019-11-07 12:10:17.043 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 12:10:17.043 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.7593ms 200 application/javascript
2019-11-07 12:10:17.046 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 12:10:17.046 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:10:17.048 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 12:10:17.048 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.0858ms 200 application/javascript
2019-11-07 12:10:17.051 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 12:10:17.051 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 12:10:17.053 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1412ms 200 application/javascript
2019-11-07 12:10:17.063 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:10:17.064 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:10:17.064 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:10:17.125 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:10:17.125 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:10:17.133 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:10:17.138 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:10:17.139 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:10:17.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6197ms 200 text/css
2019-11-07 12:10:17.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:10:17.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:10:17.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:10:17.140 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:10:17.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.357ms 200 text/css
2019-11-07 12:10:17.141 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:10:17.141 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9827ms 200 text/css
2019-11-07 12:10:17.143 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:10:17.143 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2685ms 200 text/css
2019-11-07 12:10:17.146 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:10:17.148 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:10:17.148 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0866000000000002ms 200 text/css
2019-11-07 12:10:17.149 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:10:17.149 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:10:17.149 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:10:17.149 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8230000000000001ms 200 text/css
2019-11-07 12:10:17.150 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:10:17.150 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1322ms 200 text/css
2019-11-07 12:10:17.152 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8987ms 200 text/css
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3709ms 200 text/css
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:10:17.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4289ms 200 text/css
2019-11-07 12:10:17.154 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:10:17.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4295ms 200 text/css
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.44370000000000004ms 200 text/css
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:10:17.157 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6048ms 200 text/css
2019-11-07 12:10:17.158 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:10:17.158 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8363ms 200 text/css
2019-11-07 12:10:17.213 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:10:17.220 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 155.0338ms
2019-11-07 12:10:17.220 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:10:17.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 174.0472ms 200 image/jpeg
2019-11-07 12:10:17.262 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 12:10:17.263 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 12:10:17.263 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7655000000000001ms 200 font/woff2
2019-11-07 12:10:17.330 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:10:17.331 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6472ms 404 
2019-11-07 12:10:17.332 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:10:17.332 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2752ms 404 
2019-11-07 12:10:17.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:10:17.425 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4423000000000001ms 404 
2019-11-07 12:10:17.425 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:10:17.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5315ms 404 
2019-11-07 12:10:17.670 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:10:17.670 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 606.9754ms
2019-11-07 12:10:17.670 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:10:17.670 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 633.9416ms 200 image/jpeg
2019-11-07 12:21:04.415 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.420 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.420 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.420 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.421 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.422 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.422 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.422 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.422 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.422 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.422 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.423 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.423 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:21:04.449 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:21:04.643 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 12:21:04.698 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 12:21:04.815 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 12:21:04.966 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 12:21:04.967 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 12:21:04.967 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 12:21:04.979 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 12:21:04.986 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 12:21:05.037 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 12:21:05.039 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:21:05.060 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 12:21:05.065 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:21:05.148 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:21:05.274 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 12:21:05.424 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.576 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.623 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.628 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.635 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.638 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.640 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.643 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.658 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.661 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.664 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.668 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.674 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.677 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.680 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.684 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.690 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.692 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.694 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.696 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.699 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.701 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.706 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.710 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.716 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:21:05.719 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.722 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.725 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:21:05.796 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 523.9528ms.
2019-11-07 12:21:05.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:21:05.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:21:05.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:21:05.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:21:05.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:21:05.803 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 742.8183ms
2019-11-07 12:21:05.803 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:21:05.808 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:21:05.808 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:21:05.808 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.6679ms 200 text/css
2019-11-07 12:21:05.808 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.6425ms 200 text/css
2019-11-07 12:21:05.811 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 833.2179ms 200 text/html; charset=utf-8
2019-11-07 12:21:05.812 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:21:05.812 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 12:21:05.813 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:21:05.813 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:21:05.813 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:21:05.813 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8176ms 200 text/css
2019-11-07 12:21:05.813 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7472ms 200 text/css
2019-11-07 12:21:05.814 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:21:05.814 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:21:05.814 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.438ms 200 text/css
2019-11-07 12:21:05.816 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.4391ms 200 text/css
2019-11-07 12:21:05.816 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 12:21:05.816 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 12:21:05.816 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 12:21:05.818 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 12:21:05.818 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4885000000000002ms 200 application/javascript
2019-11-07 12:21:05.819 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 12:21:05.819 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.418900000000001ms 200 application/javascript
2019-11-07 12:21:05.819 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:21:05.819 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.1767ms 200 text/css
2019-11-07 12:21:05.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 12:21:05.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 12:21:05.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 12:21:05.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 12:21:05.822 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 12:21:05.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5355ms 200 application/javascript
2019-11-07 12:21:05.823 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 12:21:05.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.679ms 200 application/javascript
2019-11-07 12:21:05.825 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 12:21:05.825 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.2948ms 200 application/javascript
2019-11-07 12:21:05.826 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 12:21:05.826 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2487ms 200 application/javascript
2019-11-07 12:21:05.829 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:21:05.829 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:21:05.845 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:21:05.845 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:21:05.921 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:21:05.921 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:21:05.927 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:21:05.929 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:21:05.930 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:21:05.930 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8686ms 200 text/css
2019-11-07 12:21:05.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:21:05.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:21:05.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:21:05.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4788ms 200 text/css
2019-11-07 12:21:05.945 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:21:05.945 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:21:05.945 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2855ms 200 text/css
2019-11-07 12:21:05.950 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:21:05.950 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9584ms 200 text/css
2019-11-07 12:21:06.022 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:21:06.022 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:21:06.023 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:21:06.023 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9966ms 200 text/css
2019-11-07 12:21:06.023 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:21:06.023 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9904000000000001ms 200 text/css
2019-11-07 12:21:06.024 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:21:06.024 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:21:06.027 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:21:06.027 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2795ms 200 text/css
2019-11-07 12:21:06.029 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:21:06.029 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.2343ms 200 text/css
2019-11-07 12:21:06.031 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:21:06.033 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:21:06.033 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0655ms 200 text/css
2019-11-07 12:21:06.037 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:21:06.038 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:21:06.038 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7874ms 200 text/css
2019-11-07 12:21:06.038 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:21:06.039 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:21:06.041 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:21:06.041 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:21:06.041 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4834ms 200 text/css
2019-11-07 12:21:06.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:21:06.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9675000000000002ms 200 text/css
2019-11-07 12:21:06.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:21:06.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9644ms 200 text/css
2019-11-07 12:21:06.062 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:21:06.062 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:21:06.067 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:21:06.068 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:21:06.068 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.5669ms 200 text/css
2019-11-07 12:21:06.070 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3047ms 404 
2019-11-07 12:21:06.071 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.758600000000001ms 404 
2019-11-07 12:21:06.084 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 12:21:06.086 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 12:21:06.086 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8405ms 200 font/woff2
2019-11-07 12:21:06.090 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:21:06.105 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 259.5358ms
2019-11-07 12:21:06.105 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:21:06.105 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 288.67040000000003ms 200 image/jpeg
2019-11-07 12:21:06.334 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:21:06.336 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7924ms 404 
2019-11-07 12:21:06.338 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:21:06.338 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4642ms 404 
2019-11-07 12:21:06.426 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:21:06.426 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 581.1170000000001ms
2019-11-07 12:21:06.426 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:21:06.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 604.5221ms 200 image/jpeg
2019-11-07 12:22:30.169 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 12:22:30.183 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:22:30.187 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:22:30.222 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 12:22:30.240 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 12:22:30.250 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 12:22:30.266 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 12:22:30.274 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 12:22:30.274 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:22:30.274 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 12:22:30.275 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 12:22:30.281 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:30.317 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:30.365 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:30.402 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:30.408 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:30.437 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.037 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.043 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.054 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:33.077 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.081 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.086 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.091 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:33.093 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.095 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.098 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.103 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:33.104 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.107 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.109 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.114 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:33.116 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.119 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.121 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.126 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:22:33.128 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.130 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.133 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:22:33.140 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 2864.3213ms.
2019-11-07 12:22:33.140 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 2865.3272ms
2019-11-07 12:22:33.140 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:22:33.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2971.1504ms 200 text/html; charset=utf-8
2019-11-07 12:22:33.146 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:22:33.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:22:33.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:22:33.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:22:33.148 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:22:33.148 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7681ms 200 text/css
2019-11-07 12:22:33.148 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:22:33.149 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:22:33.149 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:22:33.149 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.556ms 200 text/css
2019-11-07 12:22:33.150 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:22:33.150 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8532ms 200 text/css
2019-11-07 12:22:33.150 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:22:33.151 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:22:33.151 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3666ms 200 text/css
2019-11-07 12:22:33.151 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.7823ms 200 text/css
2019-11-07 12:22:33.152 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:22:33.152 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.142ms 200 text/css
2019-11-07 12:22:33.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 12:22:33.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:22:33.155 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 12:22:33.155 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 12:22:33.156 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 12:22:33.156 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 12:22:33.156 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3258ms 200 application/javascript
2019-11-07 12:22:33.156 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 12:22:33.156 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7367ms 200 application/javascript
2019-11-07 12:22:33.157 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:22:33.157 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1981ms 200 text/css
2019-11-07 12:22:33.158 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 12:22:33.158 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0488ms 200 application/javascript
2019-11-07 12:22:33.158 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 12:22:33.159 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 12:22:33.159 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 12:22:33.160 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 12:22:33.160 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6738000000000001ms 200 application/javascript
2019-11-07 12:22:33.163 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 12:22:33.163 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:22:33.163 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0681ms 200 application/javascript
2019-11-07 12:22:33.163 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:22:33.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 12:22:33.165 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:22:33.165 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:22:33.165 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:22:33.168 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:22:33.170 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 12:22:33.170 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.4745ms 200 application/javascript
2019-11-07 12:22:33.170 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:22:33.200 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:22:33.201 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 36.0073ms
2019-11-07 12:22:33.201 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:22:33.201 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.896ms 200 image/jpeg
2019-11-07 12:22:33.222 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:22:33.222 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 58.7776ms
2019-11-07 12:22:33.222 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:22:33.222 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 63.233000000000004ms 200 image/jpeg
2019-11-07 12:22:33.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:22:33.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:22:33.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:22:33.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:22:33.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:22:33.257 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:22:33.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.785ms 200 text/css
2019-11-07 12:22:33.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:22:33.258 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:22:33.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7702ms 200 text/css
2019-11-07 12:22:33.259 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:22:33.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2699000000000003ms 200 text/css
2019-11-07 12:22:33.259 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:22:33.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8226ms 200 text/css
2019-11-07 12:22:33.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:22:33.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:22:33.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:22:33.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8324ms 200 text/css
2019-11-07 12:22:33.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9697000000000005ms 200 text/css
2019-11-07 12:22:33.263 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:22:33.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:22:33.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:22:33.264 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:22:33.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8387ms 200 text/css
2019-11-07 12:22:33.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.713500000000001ms 200 text/css
2019-11-07 12:22:33.265 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:22:33.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1981000000000002ms 200 text/css
2019-11-07 12:22:33.270 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:22:33.270 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:22:33.270 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:22:33.270 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7281000000000001ms 200 text/css
2019-11-07 12:22:33.272 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:22:33.273 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:22:33.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6383ms 200 text/css
2019-11-07 12:22:33.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:22:33.276 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:22:33.276 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2626ms 200 text/css
2019-11-07 12:22:33.276 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:22:33.278 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.622ms 200 text/css
2019-11-07 12:22:33.279 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:22:33.280 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:22:33.280 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0119ms 200 text/css
2019-11-07 12:22:33.389 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 12:22:33.390 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 12:22:33.390 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8515ms 200 font/woff2
2019-11-07 12:22:33.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:22:33.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:22:33.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4267ms 404 
2019-11-07 12:22:33.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6985ms 404 
2019-11-07 12:22:33.520 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:22:33.520 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3148ms 404 
2019-11-07 12:22:33.525 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:22:33.525 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4103ms 404 
2019-11-07 12:24:24.578 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.583 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.584 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.585 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.585 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.585 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.585 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.585 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.585 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.586 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.586 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.586 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.586 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 12:24:24.613 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:24:24.808 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 12:24:24.856 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 12:24:24.963 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 12:24:25.110 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 12:24:25.111 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 12:24:25.111 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 12:24:25.121 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 12:24:25.128 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 12:24:25.174 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 12:24:25.175 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:24:25.194 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 12:24:25.199 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:24:25.272 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:24:25.374 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 12:24:25.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.591 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.595 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.679 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.725 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.729 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.734 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.736 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.738 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.740 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.742 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.744 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.750 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.754 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.757 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.761 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.765 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.769 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.773 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.775 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.777 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.779 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.784 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.789 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.795 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.798 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.800 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.802 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.804 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.806 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.809 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.824 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.827 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.830 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.832 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.834 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.838 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.840 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.841 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 12:24:25.843 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.846 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.851 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 12:24:25.921 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 548.706ms.
2019-11-07 12:24:25.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 12:24:25.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:24:25.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:24:25.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 12:24:25.927 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 733.3122000000001ms
2019-11-07 12:24:25.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:24:25.928 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 12:24:25.934 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:24:25.934 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 813.9691ms 200 text/html; charset=utf-8
2019-11-07 12:24:25.934 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.4813ms 200 text/css
2019-11-07 12:24:25.935 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:24:25.940 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 12:24:25.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.699100000000001ms 200 application/javascript
2019-11-07 12:24:25.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 12:24:25.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.695ms 200 application/javascript
2019-11-07 12:24:25.942 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.512700000000001ms 200 text/css
2019-11-07 12:24:25.942 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:24:25.942 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.5874ms 200 text/css
2019-11-07 12:24:25.950 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:24:25.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 12:24:25.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:24:25.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:24:25.952 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:24:25.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3446ms 200 text/css
2019-11-07 12:24:25.953 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3047ms 200 text/css
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.9178ms 200 text/css
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 12:24:25.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5447000000000001ms 200 application/javascript
2019-11-07 12:24:25.956 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 12:24:25.956 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.6685ms 200 application/javascript
2019-11-07 12:24:25.957 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:24:25.958 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 12:24:25.958 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:24:25.958 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9149ms 200 text/css
2019-11-07 12:24:25.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 12:24:25.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 12:24:25.960 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 12:24:25.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.6905ms 200 application/javascript
2019-11-07 12:24:25.960 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 12:24:25.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6432ms 200 application/javascript
2019-11-07 12:24:25.968 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:24:25.968 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:24:25.981 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:24:25.981 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 12:24:26.035 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:24:26.035 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 12:24:26.042 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 12:24:26.058 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:24:26.058 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:24:26.060 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:24:26.060 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2231ms 200 text/css
2019-11-07 12:24:26.065 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:24:26.065 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:24:26.065 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.44630000000000003ms 200 text/css
2019-11-07 12:24:26.065 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 12:24:26.069 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:24:26.069 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:24:26.069 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48760000000000003ms 200 text/css
2019-11-07 12:24:26.072 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:24:26.072 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.0371ms 200 text/css
2019-11-07 12:24:26.073 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 12:24:26.073 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.3357ms 200 text/css
2019-11-07 12:24:26.073 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 12:24:26.074 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 12:24:26.074 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0245ms 200 text/css
2019-11-07 12:24:26.075 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:24:26.075 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:24:26.075 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:24:26.075 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5451ms 200 text/css
2019-11-07 12:24:26.077 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:24:26.077 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3711ms 200 text/css
2019-11-07 12:24:26.079 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 12:24:26.081 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 12:24:26.082 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 12:24:26.082 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0444ms 200 text/css
2019-11-07 12:24:26.083 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 12:24:26.083 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1406ms 200 text/css
2019-11-07 12:24:26.084 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 12:24:26.085 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 12:24:26.085 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7196ms 200 text/css
2019-11-07 12:24:26.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:24:26.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 12:24:26.114 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 12:24:26.115 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 12:24:26.116 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8674000000000002ms 200 text/css
2019-11-07 12:24:26.118 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:24:26.118 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.3879ms 200 text/css
2019-11-07 12:24:26.119 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 12:24:26.119 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.1998ms 200 text/css
2019-11-07 12:24:26.207 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:24:26.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:24:26.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 12:24:26.221 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 12:24:26.221 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8868ms 200 font/woff2
2019-11-07 12:24:26.224 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.3420000000000005ms 404 
2019-11-07 12:24:26.225 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 244.0244ms
2019-11-07 12:24:26.225 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:24:26.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 267.73040000000003ms 200 image/jpeg
2019-11-07 12:24:26.230 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 12:24:26.231 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6304000000000001ms 404 
2019-11-07 12:24:26.343 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:24:26.344 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7578ms 404 
2019-11-07 12:24:26.351 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 12:24:26.351 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.31570000000000004ms 404 
2019-11-07 12:24:26.522 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 12:24:26.522 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 540.8268ms
2019-11-07 12:24:26.522 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 12:24:26.523 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 562.7732ms 200 image/jpeg
2019-11-07 13:30:19.769 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.778 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.778 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.778 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.778 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.778 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.778 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.779 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.779 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.779 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.779 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.779 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.779 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.780 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:30:19.813 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:30:20.143 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:30:20.193 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:30:20.327 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:30:20.684 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:30:20.684 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:30:20.684 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:30:20.707 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 13:30:20.712 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:30:20.776 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:30:20.856 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:30:20.980 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 13:30:21.007 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 13:30:21.015 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 13:30:21.027 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 13:30:21.037 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:30:21.038 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 13:30:21.060 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 13:30:21.070 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:30:21.203 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.274 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.276 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.340 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.381 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.384 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.391 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.394 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.398 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.400 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.403 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.405 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.411 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.414 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.416 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.418 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.421 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.423 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.428 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.430 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.433 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.435 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.438 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.440 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.445 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.448 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.450 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.452 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.456 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.459 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.463 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.467 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.470 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.472 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.475 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.487 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.493 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.496 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.499 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:30:21.501 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.504 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.506 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:30:21.581 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 510.92580000000004ms.
2019-11-07 13:30:21.591 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 530.9298ms
2019-11-07 13:30:21.591 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 13:30:21.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:30:21.593 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:30:21.595 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:30:21.597 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 890.5690000000001ms 200 text/html; charset=utf-8
2019-11-07 13:30:21.598 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:30:21.599 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:30:21.614 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:30:21.614 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.4021ms 200 text/css
2019-11-07 13:30:21.614 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:30:21.614 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.7686ms 200 text/css
2019-11-07 13:30:21.621 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:30:21.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.590700000000002ms 200 text/css
2019-11-07 13:30:21.622 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:30:21.622 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.5258ms 200 text/css
2019-11-07 13:30:21.623 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:30:21.644 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:30:21.646 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 13:30:21.647 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:30:21.655 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:30:21.671 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 13:30:21.672 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:30:21.679 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:30:21.679 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.9341ms 200 text/css
2019-11-07 13:30:21.681 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:30:21.681 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.271300000000004ms 200 text/css
2019-11-07 13:30:21.695 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:30:21.702 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:30:21.702 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:30:21.706 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:30:21.706 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.2627ms 200 application/javascript
2019-11-07 13:30:21.707 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 104.1254ms 200 application/javascript
2019-11-07 13:30:21.715 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:30:21.717 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:30:21.717 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4505000000000001ms 200 application/javascript
2019-11-07 13:30:21.717 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 13:30:21.723 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:30:21.723 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.0702ms 200 text/css
2019-11-07 13:30:21.729 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 13:30:21.729 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:30:21.730 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:30:21.730 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7995ms 200 text/css
2019-11-07 13:30:21.733 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:30:21.738 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:30:21.738 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4587ms 200 text/css
2019-11-07 13:30:21.741 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:30:21.744 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:30:21.745 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 13:30:21.745 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:30:21.745 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.7955ms 200 text/css
2019-11-07 13:30:21.764 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:30:21.764 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:30:21.764 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6915ms 200 text/css
2019-11-07 13:30:21.769 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:30:21.774 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:30:21.774 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9257ms 200 text/css
2019-11-07 13:30:21.780 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:30:21.780 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 13:30:21.780 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 63.2182ms 200 application/javascript
2019-11-07 13:30:21.781 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:30:21.782 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6027ms 200 text/css
2019-11-07 13:30:21.783 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:30:21.783 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:30:21.785 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:30:21.785 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1429ms 200 text/css
2019-11-07 13:30:21.786 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:30:21.788 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:30:21.788 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0748ms 200 text/css
2019-11-07 13:30:21.791 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:30:21.791 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:30:21.791 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.0313ms 200 text/css
2019-11-07 13:30:21.795 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:30:21.796 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:30:21.796 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5947000000000005ms 200 text/css
2019-11-07 13:30:21.796 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:30:21.796 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8545ms 200 text/css
2019-11-07 13:30:21.802 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:30:21.803 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:30:21.803 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9744ms 200 text/css
2019-11-07 13:30:21.803 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:30:21.803 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:30:21.803 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3786ms 200 text/css
2019-11-07 13:30:21.806 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:30:21.806 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:30:21.806 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7064ms 200 text/css
2019-11-07 13:30:21.814 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:30:21.814 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:30:21.815 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6007ms 404 
2019-11-07 13:30:21.815 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4316ms 404 
2019-11-07 13:30:21.907 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:30:21.907 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 211.2979ms 200 application/javascript
2019-11-07 13:30:21.912 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:30:21.912 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:30:21.918 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:30:22.003 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 13:30:22.013 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 268.02770000000004ms
2019-11-07 13:30:22.013 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:30:22.014 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 285.6594ms 200 image/jpeg
2019-11-07 13:30:22.146 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:30:22.146 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 501.49490000000003ms 200 application/javascript
2019-11-07 13:30:22.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:30:22.271 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:30:22.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.4018ms 200 font/woff2
2019-11-07 13:30:22.348 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:30:22.348 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:30:22.348 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4106ms 404 
2019-11-07 13:30:22.348 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5147ms 404 
2019-11-07 13:30:22.363 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 13:30:22.363 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 692.6512ms
2019-11-07 13:30:22.364 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:30:22.364 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 718.0774ms 200 image/jpeg
2019-11-07 13:31:29.939 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.945 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.945 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.945 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.945 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.945 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.945 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.946 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.946 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.946 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.946 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.946 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.946 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.947 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.947 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.947 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.947 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.947 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.948 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:31:29.974 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:31:30.160 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:31:30.206 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:31:30.313 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:31:30.479 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:31:30.479 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:31:30.479 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:31:30.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 13:31:30.501 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:31:30.560 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:31:30.562 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 13:31:30.584 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 13:31:30.589 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:31:30.661 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:31:30.776 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:31:30.904 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:30.972 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:30.976 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.056 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.107 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.111 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.119 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.123 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.126 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.128 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.131 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.134 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.140 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.142 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.144 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.147 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.150 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.154 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.160 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.163 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.166 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.168 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.172 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.176 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.181 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.183 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.185 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.187 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.189 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.191 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.194 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.198 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.201 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.204 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.208 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.211 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.216 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.219 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.223 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 13:31:31.225 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.227 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.229 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 13:31:31.302 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 523.8239ms.
2019-11-07 13:31:31.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:31:31.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:31:31.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:31:31.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:31:31.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:31:31.305 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 721.3235000000001ms
2019-11-07 13:31:31.306 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 13:31:31.310 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:31:31.310 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.7873ms 200 text/css
2019-11-07 13:31:31.314 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 822.4621000000001ms 200 text/html; charset=utf-8
2019-11-07 13:31:31.315 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:31:31.315 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.558ms 200 application/javascript
2019-11-07 13:31:31.316 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:31:31.317 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.5365ms 200 application/javascript
2019-11-07 13:31:31.318 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:31:31.318 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:31:31.318 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5513ms 200 text/css
2019-11-07 13:31:31.320 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:31:31.320 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.340800000000002ms 200 application/javascript
2019-11-07 13:31:31.322 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:31:31.322 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.7548ms 200 text/css
2019-11-07 13:31:31.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:31:31.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7928000000000001ms 200 application/javascript
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7069000000000001ms 200 text/css
2019-11-07 13:31:31.334 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:31:31.335 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0659ms 200 text/css
2019-11-07 13:31:31.341 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 13:31:31.342 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-11-07 13:31:31.342 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:31:31.343 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:31:31.343 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-11-07 13:31:31.343 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0090000000000001ms 200 application/javascript
2019-11-07 13:31:31.343 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5982000000000001ms 200 application/javascript
2019-11-07 13:31:31.350 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:31:31.353 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:31:31.357 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:31:31.367 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 13:31:31.370 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 13:31:31.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:31:31.372 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:31:31.372 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4043ms 200 text/css
2019-11-07 13:31:31.375 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:31:31.375 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.0125ms 200 text/css
2019-11-07 13:31:31.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:31:31.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:31:31.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:31:31.407 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:31:31.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48100000000000004ms 200 text/css
2019-11-07 13:31:31.408 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:31:31.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6752ms 200 text/css
2019-11-07 13:31:31.408 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:31:31.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9935ms 200 text/css
2019-11-07 13:31:31.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:31:31.415 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:31:31.418 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:31:31.420 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:31:31.420 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0416000000000003ms 200 text/css
2019-11-07 13:31:31.420 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:31:31.420 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:31:31.421 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6469ms 200 text/css
2019-11-07 13:31:31.428 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:31:31.428 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:31:31.434 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:31:31.435 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:31:31.435 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6405000000000001ms 200 text/css
2019-11-07 13:31:31.435 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:31:31.437 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:31:31.437 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.701ms 200 text/css
2019-11-07 13:31:31.439 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:31:31.447 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:31:31.447 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.1652ms 200 text/css
2019-11-07 13:31:31.447 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:31:31.448 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.3879ms 200 text/css
2019-11-07 13:31:31.449 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:31:31.450 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:31:31.450 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8897ms 200 text/css
2019-11-07 13:31:31.481 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:31:31.481 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:31:31.482 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5115000000000001ms 200 text/css
2019-11-07 13:31:31.482 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:31:31.482 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:31:31.482 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:31:31.482 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5344ms 200 text/css
2019-11-07 13:31:31.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:31:31.486 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:31:31.486 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.436ms 200 text/css
2019-11-07 13:31:31.488 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:31:31.488 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1391ms 200 text/css
2019-11-07 13:31:31.573 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 13:31:31.583 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 215.9023ms
2019-11-07 13:31:31.583 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:31:31.583 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 249.45520000000002ms 200 image/jpeg
2019-11-07 13:31:31.630 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:31:31.631 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:31:31.631 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9996ms 200 font/woff2
2019-11-07 13:31:31.692 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:31:31.696 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:31:31.697 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.7626ms 404 
2019-11-07 13:31:31.697 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5158ms 404 
2019-11-07 13:31:31.779 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:31:31.779 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.32280000000000003ms 404 
2019-11-07 13:31:31.784 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:31:31.784 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.27240000000000003ms 404 
2019-11-07 13:31:31.885 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 13:31:31.885 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 514.4779ms
2019-11-07 13:31:31.885 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 13:31:31.885 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 543.8463ms 200 image/jpeg
2019-11-07 13:32:07.886 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:32:07.890 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:32:07.891 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:32:07.895 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:32:07.897 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:07.905 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:32:07.922 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:32:07.932 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.0837ms.
2019-11-07 13:32:07.932 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 36.3497ms
2019-11-07 13:32:07.932 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:32:07.932 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.554500000000004ms 200 text/html; charset=utf-8
2019-11-07 13:32:07.939 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:32:07.939 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:32:07.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:32:07.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:32:07.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7399ms 200 application/javascript
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8124ms 200 application/javascript
2019-11-07 13:32:07.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7505000000000001ms 200 application/javascript
2019-11-07 13:32:07.942 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:32:07.942 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5764ms 200 text/css
2019-11-07 13:32:07.943 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:32:07.943 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.3223ms 200 text/css
2019-11-07 13:32:07.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:32:07.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:32:07.956 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:32:07.957 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:32:07.958 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:32:07.958 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9160000000000001ms 200 text/css
2019-11-07 13:32:07.959 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:32:07.959 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0841ms 200 text/css
2019-11-07 13:32:07.961 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:32:07.961 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:32:07.961 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5343ms 200 text/css
2019-11-07 13:32:07.963 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:32:07.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.0168ms 200 application/javascript
2019-11-07 13:32:07.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:32:07.964 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:32:07.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1801ms 200 text/css
2019-11-07 13:32:07.966 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:32:07.966 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.646700000000001ms 200 application/javascript
2019-11-07 13:32:07.968 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:32:07.968 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2851ms 200 text/css
2019-11-07 13:32:08.117 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:32:08.117 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:32:08.117 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:32:08.117 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:32:08.118 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:32:08.118 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:32:08.121 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:32:08.122 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:32:08.122 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.1275ms 200 text/css
2019-11-07 13:32:08.121 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:32:08.122 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.9535ms 200 text/css
2019-11-07 13:32:08.122 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.604ms 200 text/css
2019-11-07 13:32:08.125 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:32:08.126 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.173ms 200 text/css
2019-11-07 13:32:08.126 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:32:08.127 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.6876ms 200 text/css
2019-11-07 13:32:08.129 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:32:08.129 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.64ms 200 text/css
2019-11-07 13:32:08.129 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:32:08.131 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:32:08.132 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7491ms 200 text/css
2019-11-07 13:32:08.132 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:32:08.132 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:32:08.133 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:32:08.133 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:32:08.133 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:32:08.134 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:32:08.134 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:32:08.134 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6931ms 200 text/css
2019-11-07 13:32:08.136 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:32:08.137 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6533ms 200 text/css
2019-11-07 13:32:08.137 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:32:08.137 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1391ms 200 text/css
2019-11-07 13:32:08.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:32:08.140 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:32:08.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1126ms 200 text/css
2019-11-07 13:32:08.143 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:32:08.143 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.729000000000001ms 200 text/css
2019-11-07 13:32:08.144 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:32:08.144 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.927000000000001ms 200 text/css
2019-11-07 13:32:08.145 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:32:08.146 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.273900000000001ms 200 text/css
2019-11-07 13:32:08.150 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:32:08.151 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:32:08.151 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2382ms 200 font/woff2
2019-11-07 13:32:08.182 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573126328036  
2019-11-07 13:32:08.186 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:32:08.186 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:32:08.195 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:32:08.200 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:08.201 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:32:08.204 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:32:08.245 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 41.0623ms.
2019-11-07 13:32:08.245 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 49.638600000000004ms
2019-11-07 13:32:08.245 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:32:08.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 62.642300000000006ms 200 text/html; charset=utf-8
2019-11-07 13:32:08.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:32:08.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:32:08.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8363ms 404 
2019-11-07 13:32:08.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0277ms 404 
2019-11-07 13:32:08.272 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:32:08.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4188ms 404 
2019-11-07 13:32:08.278 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:32:08.278 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4056ms 404 
2019-11-07 13:32:10.222 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126328037  
2019-11-07 13:32:10.224 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:32:10.225 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:32:10.228 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:32:10.230 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:10.235 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:32:10.237 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:32:10.256 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 18.6616ms.
2019-11-07 13:32:10.256 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 27.392100000000003ms
2019-11-07 13:32:10.256 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:32:10.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.3913ms 200 text/html; charset=utf-8
2019-11-07 13:32:10.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126328038  
2019-11-07 13:32:10.274 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:32:10.274 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:32:10.278 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:32:10.281 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:10.292 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:32:10.299 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:32:10.302 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:32:10.307 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 5.0263ms.
2019-11-07 13:32:10.307 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 29.041800000000002ms
2019-11-07 13:32:10.307 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:32:10.307 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.846000000000004ms 200 text/html; charset=utf-8
2019-11-07 13:32:49.177 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Docs  
2019-11-07 13:32:49.179 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DocsController.Index (CateringPro)'
2019-11-07 13:32:49.187 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Docs"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DocsController (CateringPro).
2019-11-07 13:32:49.189 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:49.194 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[Amount], [d].[CompanyId], [d].[Date], [d].[Description], [d].[Number], [d].[Type]
FROM [Docs] AS [d]
2019-11-07 13:32:49.208 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:32:49.213 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.0072ms.
2019-11-07 13:32:49.213 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DocsController.Index (CateringPro) in 26.091700000000003ms
2019-11-07 13:32:49.213 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DocsController.Index (CateringPro)'
2019-11-07 13:32:49.213 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.260400000000004ms 200 text/html; charset=utf-8
2019-11-07 13:32:49.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:32:49.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:32:49.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:32:49.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6433ms 200 text/css
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48000000000000004ms 200 text/css
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7157ms 200 text/css
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3179ms 200 text/css
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:32:49.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4253ms 200 text/css
2019-11-07 13:32:49.222 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:32:49.222 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:32:49.222 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:32:49.222 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6337ms 200 application/javascript
2019-11-07 13:32:49.225 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:32:49.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1992000000000003ms 200 application/javascript
2019-11-07 13:32:49.226 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:32:49.228 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:32:49.229 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:32:49.229 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:32:49.229 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5678ms 200 application/javascript
2019-11-07 13:32:49.229 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8553ms 200 text/css
2019-11-07 13:32:49.229 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:32:49.230 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:32:49.230 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.644ms 200 application/javascript
2019-11-07 13:32:49.236 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:32:49.236 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:32:49.236 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4961ms 200 application/javascript
2019-11-07 13:32:49.236 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:32:49.236 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5841000000000001ms 200 text/css
2019-11-07 13:32:49.374 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:32:49.374 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:32:49.375 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:32:49.376 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:32:49.376 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2558000000000002ms 200 text/css
2019-11-07 13:32:49.375 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.934ms 200 text/css
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9474ms 200 text/css
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.217ms 200 text/css
2019-11-07 13:32:49.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:32:49.378 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:32:49.378 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:32:49.378 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1245ms 200 text/css
2019-11-07 13:32:49.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:32:49.380 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:32:49.380 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:32:49.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6737000000000002ms 200 text/css
2019-11-07 13:32:49.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2527000000000001ms 200 text/css
2019-11-07 13:32:49.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:32:49.382 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:32:49.382 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8692000000000001ms 200 text/css
2019-11-07 13:32:49.386 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:32:49.387 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:32:49.389 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:32:49.389 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9738ms 200 text/css
2019-11-07 13:32:49.389 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:32:49.389 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:32:49.390 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:32:49.390 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4055ms 200 text/css
2019-11-07 13:32:49.390 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:32:49.390 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:32:49.391 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:32:49.391 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7139ms 200 text/css
2019-11-07 13:32:49.393 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:32:49.393 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0042ms 200 text/css
2019-11-07 13:32:49.393 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:32:49.393 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.054ms 200 text/css
2019-11-07 13:32:49.393 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:32:49.393 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5922ms 200 text/css
2019-11-07 13:32:49.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:32:49.412 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:32:49.412 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6127ms 200 font/woff2
2019-11-07 13:32:49.432 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Docs/ListItems?searchcriteria=&_=1573126369306  
2019-11-07 13:32:49.434 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DocsController.ListItems (CateringPro)'
2019-11-07 13:32:49.440 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Docs"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DocsController (CateringPro).
2019-11-07 13:32:49.444 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:49.447 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[Amount], [d].[CompanyId], [d].[Date], [d].[Description], [d].[Number], [d].[Type]
FROM [Docs] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:32:49.450 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:32:49.465 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:32:49.465 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:32:49.465 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41600000000000004ms 404 
2019-11-07 13:32:49.465 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.458ms 404 
2019-11-07 13:32:49.478 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 28.506ms.
2019-11-07 13:32:49.478 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DocsController.ListItems (CateringPro) in 37.9838ms
2019-11-07 13:32:49.478 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DocsController.ListItems (CateringPro)'
2019-11-07 13:32:49.478 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.854400000000005ms 200 text/html; charset=utf-8
2019-11-07 13:32:49.539 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:32:49.539 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.39490000000000003ms 404 
2019-11-07 13:32:49.544 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:32:49.545 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3579ms 404 
2019-11-07 13:32:51.119 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Docs/EditModal/1?_=1573126369307  
2019-11-07 13:32:51.121 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DocsController.EditModal (CateringPro)'
2019-11-07 13:32:51.125 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Docs"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DocsController (CateringPro).
2019-11-07 13:32:51.128 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:32:51.166 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32), @__GetCompanyID_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[Amount], [t].[CompanyId], [t].[Date], [t].[Description], [t].[Number], [t].[Type], [t0].[Id], [t0].[Amount], [t0].[CompanyId], [t0].[DocsId], [t0].[IngredientsId], [t0].[Number], [t0].[Price], [t0].[Quantity], [t0].[Id0], [t0].[CompanyId0], [t0].[MeasureUnit], [t0].[Name], [t0].[StockDate], [t0].[StockValue]
FROM (
    SELECT TOP(2) [d].[Id], [d].[Amount], [d].[CompanyId], [d].[Date], [d].[Description], [d].[Number], [d].[Type]
    FROM [Docs] AS [d]
    WHERE (([d].[Id] = @__id_0) AND @__id_0 IS NOT NULL) AND (([d].[CompanyId] = @__GetCompanyID_1) AND @__GetCompanyID_1 IS NOT NULL)
) AS [t]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Amount], [d0].[CompanyId], [d0].[DocsId], [d0].[IngredientsId], [d0].[Number], [d0].[Price], [d0].[Quantity], [i].[Id] AS [Id0], [i].[CompanyId] AS [CompanyId0], [i].[MeasureUnit], [i].[Name], [i].[StockDate], [i].[StockValue]
    FROM [DocLines] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientsId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DocsId]
ORDER BY [t].[Id], [t0].[Id], [t0].[Id0]
2019-11-07 13:32:51.199 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:32:51.241 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 42.1379ms.
2019-11-07 13:32:51.241 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DocsController.EditModal (CateringPro) in 115.8054ms
2019-11-07 13:32:51.241 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DocsController.EditModal (CateringPro)'
2019-11-07 13:32:51.241 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 122.2026ms 200 text/html; charset=utf-8
2019-11-07 13:33:20.572 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:33:20.574 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:33:20.574 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:33:20.574 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:33:20.575 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:33:20.576 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:33:20.579 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:33:20.581 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 2.6171ms.
2019-11-07 13:33:20.582 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 7.3984000000000005ms
2019-11-07 13:33:20.582 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:33:20.582 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.88ms 200 text/html; charset=utf-8
2019-11-07 13:33:20.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:33:20.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:33:20.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:33:20.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:33:20.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:33:20.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0149000000000001ms 200 text/css
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1759000000000002ms 200 text/css
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1ms 200 application/javascript
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4284000000000001ms 200 text/css
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:33:20.589 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2735ms 200 text/css
2019-11-07 13:33:20.590 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:33:20.590 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7698ms 200 text/css
2019-11-07 13:33:20.591 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:33:20.592 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:33:20.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7142000000000001ms 200 text/css
2019-11-07 13:33:20.594 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:33:20.594 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:33:20.594 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:33:20.594 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7044ms 200 application/javascript
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6192000000000001ms 200 application/javascript
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:33:20.595 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4645000000000001ms 200 text/css
2019-11-07 13:33:20.596 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:33:20.596 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3521ms 200 application/javascript
2019-11-07 13:33:20.599 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:33:20.599 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0991ms 200 application/javascript
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.37010000000000004ms 200 text/css
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:33:20.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2864ms 200 text/css
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0544ms 200 text/css
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5871000000000002ms 200 text/css
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5546ms 200 text/css
2019-11-07 13:33:20.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8829ms 200 text/css
2019-11-07 13:33:20.753 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:33:20.753 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:33:20.754 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:33:20.755 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:33:20.755 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2313ms 200 text/css
2019-11-07 13:33:20.756 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:33:20.756 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0085ms 200 text/css
2019-11-07 13:33:20.756 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5147ms 200 text/css
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41040000000000004ms 200 text/css
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:33:20.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6267ms 200 text/css
2019-11-07 13:33:20.773 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:33:20.774 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.558300000000003ms 200 text/css
2019-11-07 13:33:20.774 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:33:20.776 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:33:20.777 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7506ms 200 font/woff2
2019-11-07 13:33:20.779 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:33:20.779 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:33:20.779 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:33:20.779 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5137ms 200 text/css
2019-11-07 13:33:20.781 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:33:20.781 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1326ms 200 text/css
2019-11-07 13:33:20.796 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573126400684  
2019-11-07 13:33:20.797 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:33:20.798 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:33:20.799 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:33:20.801 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:33:20.803 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:33:20.807 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:33:20.815 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 8.1069ms.
2019-11-07 13:33:20.815 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 16.7707ms
2019-11-07 13:33:20.815 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:33:20.816 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.276400000000002ms 200 text/html; charset=utf-8
2019-11-07 13:33:20.885 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:33:20.885 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:33:20.886 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8772000000000001ms 404 
2019-11-07 13:33:20.886 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8767ms 404 
2019-11-07 13:33:20.892 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:33:20.892 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5398000000000001ms 404 
2019-11-07 13:33:20.897 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:33:20.897 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3876ms 404 
2019-11-07 13:33:22.311 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126400685  
2019-11-07 13:33:22.313 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:33:22.313 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:33:22.314 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:33:22.315 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:33:22.318 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:33:22.320 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:33:22.323 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.5137ms.
2019-11-07 13:33:22.323 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 8.8633ms
2019-11-07 13:33:22.323 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:33:22.323 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.5641ms 200 text/html; charset=utf-8
2019-11-07 13:33:22.344 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126400686  
2019-11-07 13:33:22.345 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:33:22.346 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:33:22.346 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:33:22.346 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:33:22.347 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:33:22.356 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:33:22.360 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:33:22.361 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.1902000000000001ms.
2019-11-07 13:33:22.361 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 15.5928ms
2019-11-07 13:33:22.361 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:33:22.361 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.86ms 200 text/html; charset=utf-8
2019-11-07 13:37:31.060 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:37:31.061 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:37:31.061 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:37:31.062 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:37:31.063 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:37:31.065 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:37:31.069 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:37:31.074 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 5.191800000000001ms.
2019-11-07 13:37:31.074 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 12.1029ms
2019-11-07 13:37:31.074 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:37:31.074 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.602ms 200 text/html; charset=utf-8
2019-11-07 13:37:31.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:37:31.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6036ms 200 text/css
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7437ms 200 text/css
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:37:31.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6138ms 200 text/css
2019-11-07 13:37:31.104 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:37:31.104 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:37:31.105 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:37:31.105 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0317ms 200 application/javascript
2019-11-07 13:37:31.105 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:37:31.105 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:37:31.105 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5011ms 200 text/css
2019-11-07 13:37:31.107 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:37:31.107 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:37:31.107 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.943200000000001ms 200 application/javascript
2019-11-07 13:37:31.107 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.4842ms 200 text/css
2019-11-07 13:37:31.109 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:37:31.109 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:37:31.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:37:31.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:37:31.111 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:37:31.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3705ms 200 application/javascript
2019-11-07 13:37:31.112 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:37:31.112 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2817000000000003ms 200 text/css
2019-11-07 13:37:31.113 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:37:31.114 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.0652ms 200 application/javascript
2019-11-07 13:37:31.115 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:37:31.115 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.9914ms 200 application/javascript
2019-11-07 13:37:31.127 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:37:31.127 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.6634ms 200 text/css
2019-11-07 13:37:31.244 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:37:31.244 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:37:31.244 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3627ms 200 text/css
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6308ms 200 text/css
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:37:31.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4137ms 200 text/css
2019-11-07 13:37:31.247 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:37:31.247 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.902ms 200 text/css
2019-11-07 13:37:31.247 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:37:31.248 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6776ms 200 text/css
2019-11-07 13:37:31.248 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:37:31.249 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8774ms 200 text/css
2019-11-07 13:37:31.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:37:31.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:37:31.252 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:37:31.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3619ms 200 text/css
2019-11-07 13:37:31.252 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:37:31.253 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5051ms 200 text/css
2019-11-07 13:37:31.254 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:37:31.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:37:31.257 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:37:31.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8606ms 200 text/css
2019-11-07 13:37:31.258 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:37:31.258 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.375900000000001ms 200 text/css
2019-11-07 13:37:31.262 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:37:31.263 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:37:31.263 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1532ms 200 text/css
2019-11-07 13:37:31.263 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:37:31.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:37:31.264 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:37:31.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.931ms 200 text/css
2019-11-07 13:37:31.264 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:37:31.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8774000000000001ms 200 text/css
2019-11-07 13:37:31.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:37:31.266 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:37:31.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6674ms 200 text/css
2019-11-07 13:37:31.293 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:37:31.297 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:37:31.297 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.331ms 200 font/woff2
2019-11-07 13:37:31.318 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573126651177  
2019-11-07 13:37:31.321 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:37:31.321 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:37:31.321 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:37:31.323 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:37:31.325 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:37:31.327 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:37:31.331 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.9548ms.
2019-11-07 13:37:31.331 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 9.9049ms
2019-11-07 13:37:31.331 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:37:31.331 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.8817ms 200 text/html; charset=utf-8
2019-11-07 13:37:31.340 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:37:31.340 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:37:31.340 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.507ms 404 
2019-11-07 13:37:31.340 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5114000000000001ms 404 
2019-11-07 13:37:31.402 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:37:31.403 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3788ms 404 
2019-11-07 13:37:31.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:37:31.409 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3184ms 404 
2019-11-07 13:37:33.190 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126651178  
2019-11-07 13:37:33.191 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:37:33.191 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:37:33.191 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:37:33.192 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:37:33.194 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:37:33.198 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:37:33.201 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.9533ms.
2019-11-07 13:37:33.201 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 9.2913ms
2019-11-07 13:37:33.201 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:37:33.201 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.4016ms 200 text/html; charset=utf-8
2019-11-07 13:37:33.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126651179  
2019-11-07 13:37:33.221 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:37:33.221 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:37:33.222 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:37:33.223 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:37:33.224 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:37:33.228 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:37:33.231 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:37:33.233 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.1209000000000002ms.
2019-11-07 13:37:33.233 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 11.4892ms
2019-11-07 13:37:33.233 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:37:33.233 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.4677ms 200 text/html; charset=utf-8
2019-11-07 13:38:15.960 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.966 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.966 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.966 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.966 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.966 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.967 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.967 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.967 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.967 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.967 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.967 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.968 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.968 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.968 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.968 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.968 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.969 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.969 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:38:15.994 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:38:16.179 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:38:16.226 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:38:16.334 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:38:16.509 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:38:16.509 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:38:16.509 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:38:16.520 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:38:16.527 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:38:16.577 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:38:16.578 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:38:16.596 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:38:16.602 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:38:16.661 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:38:16.763 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:38:16.860 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 97.5693ms.
2019-11-07 13:38:16.865 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:38:16.865 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:38:16.865 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:38:16.866 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:38:16.867 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:38:16.867 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 270.2952ms
2019-11-07 13:38:16.867 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:38:16.872 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:38:16.872 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:38:16.872 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.300800000000001ms 200 text/css
2019-11-07 13:38:16.872 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.101100000000001ms 200 application/javascript
2019-11-07 13:38:16.878 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 358.4682ms 200 text/html; charset=utf-8
2019-11-07 13:38:16.879 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:38:16.879 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:38:16.879 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:38:16.879 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.8949ms 200 application/javascript
2019-11-07 13:38:16.879 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.5905ms 200 text/css
2019-11-07 13:38:16.879 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.4442ms 200 text/css
2019-11-07 13:38:16.880 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:38:16.880 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:38:16.881 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:38:16.882 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5535ms 200 text/css
2019-11-07 13:38:16.880 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:38:16.883 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:38:16.883 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0566ms 200 text/css
2019-11-07 13:38:16.884 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:38:16.884 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4082ms 200 application/javascript
2019-11-07 13:38:16.885 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:38:16.892 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:38:16.892 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.4752ms 200 application/javascript
2019-11-07 13:38:16.894 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:38:16.895 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:38:16.896 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:38:16.896 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7621ms 200 application/javascript
2019-11-07 13:38:16.896 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:38:16.896 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.58ms 200 text/css
2019-11-07 13:38:16.902 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:38:16.903 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:38:16.903 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1486ms 200 text/css
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:38:16.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.333ms 200 text/css
2019-11-07 13:38:16.983 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:38:16.983 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3714000000000002ms 200 text/css
2019-11-07 13:38:16.983 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:38:16.983 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7946000000000002ms 200 text/css
2019-11-07 13:38:16.984 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:38:16.984 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.671ms 200 text/css
2019-11-07 13:38:16.984 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:38:16.984 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4107000000000003ms 200 text/css
2019-11-07 13:38:16.985 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:38:16.985 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7335000000000003ms 200 text/css
2019-11-07 13:38:16.988 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9001ms 200 text/css
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:38:16.989 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:38:16.990 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:38:16.990 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:38:16.990 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5281ms 200 text/css
2019-11-07 13:38:16.990 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7200000000000001ms 200 text/css
2019-11-07 13:38:16.990 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:38:16.990 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3198ms 200 text/css
2019-11-07 13:38:16.992 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:38:16.992 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:38:16.993 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2017ms 200 text/css
2019-11-07 13:38:16.993 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5372000000000003ms 200 text/css
2019-11-07 13:38:16.996 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:38:16.997 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:38:16.997 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3068ms 200 text/css
2019-11-07 13:38:16.997 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:38:16.999 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:38:16.999 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.982ms 200 text/css
2019-11-07 13:38:17.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:38:17.097 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:38:17.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8493ms 200 font/woff2
2019-11-07 13:38:17.110 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573126696968  
2019-11-07 13:38:17.120 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:38:17.121 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:38:17.140 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:38:17.161 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:38:17.161 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:38:17.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0125ms 404 
2019-11-07 13:38:17.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0962ms 404 
2019-11-07 13:38:17.192 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:38:17.196 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:38:17.199 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:38:17.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:38:17.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5883ms 404 
2019-11-07 13:38:17.222 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:38:17.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5982000000000001ms 404 
2019-11-07 13:38:17.258 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 60.118500000000004ms.
2019-11-07 13:38:17.259 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 118.8216ms
2019-11-07 13:38:17.259 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:38:17.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 149.0387ms 200 text/html; charset=utf-8
2019-11-07 13:38:18.548 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126696969  
2019-11-07 13:38:18.564 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:38:18.564 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:38:18.570 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:38:18.573 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:38:18.594 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:38:18.599 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:38:18.634 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 35.2013ms.
2019-11-07 13:38:18.634 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 64.0068ms
2019-11-07 13:38:18.634 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:38:18.634 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 85.8606ms 200 text/html; charset=utf-8
2019-11-07 13:38:18.659 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126696970  
2019-11-07 13:38:18.659 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:38:18.660 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:38:18.665 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:38:18.669 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:38:18.691 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:38:18.706 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:38:18.710 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:38:18.721 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 11.4495ms.
2019-11-07 13:38:18.721 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 55.8701ms
2019-11-07 13:38:18.721 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:38:18.721 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 62.219300000000004ms 200 text/html; charset=utf-8
2019-11-07 13:43:32.314 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.319 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.319 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.320 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.320 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.320 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.320 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.320 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.321 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.321 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.321 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.321 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.321 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.322 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.322 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.322 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.322 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.322 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.322 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:43:32.348 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:43:32.532 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:43:32.579 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:43:32.696 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:43:32.853 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:43:32.854 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:43:32.854 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:43:32.867 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126696971  
2019-11-07 13:43:32.872 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:43:32.924 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:43:32.926 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:43:32.950 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:43:32.959 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:43:33.023 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:43:33.125 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:43:33.199 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 75.5864ms.
2019-11-07 13:43:33.201 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 250.63580000000002ms
2019-11-07 13:43:33.201 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:43:33.206 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 339.998ms 200 text/html; charset=utf-8
2019-11-07 13:43:33.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126696972  
2019-11-07 13:43:33.234 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:43:33.234 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:43:33.237 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:43:33.280 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:43:33.312 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:43:33.331 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:43:33.335 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:43:33.346 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 11.6348ms.
2019-11-07 13:43:33.346 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 108.97980000000001ms
2019-11-07 13:43:33.346 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:43:33.347 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 121.1401ms 200 text/html; charset=utf-8
2019-11-07 13:44:59.884 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.890 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.891 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.891 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.891 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.891 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.891 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.891 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.892 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.892 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.892 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.892 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.892 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.893 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.893 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.893 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.893 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.893 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.893 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:44:59.919 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:45:00.133 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:45:00.183 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:45:00.319 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:45:00.496 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:45:00.496 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:45:00.496 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:45:00.508 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126696973  
2019-11-07 13:45:00.514 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:45:00.557 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:45:00.559 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:45:00.583 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:45:00.591 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:45:00.661 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:45:00.757 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:45:00.834 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 75.4901ms.
2019-11-07 13:45:00.835 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 252.0842ms
2019-11-07 13:45:00.836 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:45:00.843 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 334.95050000000003ms 200 text/html; charset=utf-8
2019-11-07 13:45:00.866 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126696974  
2019-11-07 13:45:00.875 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:45:00.876 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:45:00.881 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:45:00.917 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:45:00.944 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:45:00.965 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:45:00.967 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:45:00.974 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.2464ms.
2019-11-07 13:45:00.974 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 93.73750000000001ms
2019-11-07 13:45:00.974 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:45:00.975 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 108.46170000000001ms 200 text/html; charset=utf-8
2019-11-07 13:45:55.020 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.026 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.026 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.027 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.027 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.027 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.027 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.027 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.028 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.028 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.028 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.028 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.028 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.029 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.029 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.029 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.029 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.029 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.029 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:45:55.056 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:45:55.247 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:45:55.292 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:45:55.396 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:45:55.529 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:45:55.529 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:45:55.529 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:45:55.541 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126696975  
2019-11-07 13:45:55.548 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:45:55.603 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:45:55.606 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:45:55.637 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:45:55.647 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:45:55.710 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:45:55.810 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:45:55.892 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 81.705ms.
2019-11-07 13:45:55.894 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 256.3157ms
2019-11-07 13:45:55.895 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:45:55.900 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 359.0027ms 200 text/html; charset=utf-8
2019-11-07 13:45:55.925 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126696976  
2019-11-07 13:45:55.932 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:45:55.932 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:45:55.936 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:45:55.971 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:45:55.997 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:45:56.019 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:45:56.023 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:45:56.033 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 10.5175ms.
2019-11-07 13:45:56.033 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 97.20190000000001ms
2019-11-07 13:45:56.033 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:45:56.033 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 108.0961ms 200 text/html; charset=utf-8
2019-11-07 13:46:17.353 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573126696977  
2019-11-07 13:46:17.372 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:46:17.372 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:46:17.372 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:46:17.374 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:46:17.378 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:46:17.380 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:46:17.384 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 4.3197ms.
2019-11-07 13:46:17.384 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 11.9191ms
2019-11-07 13:46:17.384 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:46:17.385 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.979000000000003ms 200 text/html; charset=utf-8
2019-11-07 13:46:17.401 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573126696978  
2019-11-07 13:46:17.402 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:46:17.402 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:46:17.402 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:46:17.402 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:46:17.403 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:46:17.405 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:46:17.406 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:46:17.407 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.5089000000000001ms.
2019-11-07 13:46:17.407 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 5.2264ms
2019-11-07 13:46:17.407 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:46:17.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.696400000000001ms 200 text/html; charset=utf-8
2019-11-07 13:46:20.103 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:46:20.105 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:46:20.105 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:46:20.108 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:46:20.109 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:46:20.114 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:46:20.121 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:46:20.170 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 51.366400000000006ms.
2019-11-07 13:46:20.170 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 62.076800000000006ms
2019-11-07 13:46:20.170 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:46:20.170 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 67.63130000000001ms 200 text/html; charset=utf-8
2019-11-07 13:46:20.175 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:46:20.175 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:46:20.175 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:46:20.175 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:46:20.175 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:46:20.176 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:46:20.182 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:46:20.182 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:46:20.182 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:46:20.182 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.9285000000000005ms 200 text/css
2019-11-07 13:46:20.182 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.9267ms 200 text/css
2019-11-07 13:46:20.182 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.915ms 200 text/css
2019-11-07 13:46:20.187 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:46:20.187 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:46:20.188 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.198500000000001ms 200 text/css
2019-11-07 13:46:20.188 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.245000000000001ms 200 text/css
2019-11-07 13:46:20.188 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:46:20.188 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:46:20.188 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.7199ms 200 text/css
2019-11-07 13:46:20.188 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:46:20.190 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:46:20.190 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:46:20.192 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5826000000000002ms 200 application/javascript
2019-11-07 13:46:20.192 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:46:20.193 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:46:20.193 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5864ms 200 application/javascript
2019-11-07 13:46:20.194 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:46:20.195 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:46:20.195 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9676ms 200 application/javascript
2019-11-07 13:46:20.195 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:46:20.198 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:46:20.198 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5381ms 200 application/javascript
2019-11-07 13:46:20.199 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:46:20.199 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.4969ms 200 application/javascript
2019-11-07 13:46:20.207 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:46:20.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.8979ms 200 text/css
2019-11-07 13:46:20.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:46:20.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:46:20.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:46:20.266 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:46:20.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7759ms 200 text/css
2019-11-07 13:46:20.268 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:46:20.268 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4638ms 200 text/css
2019-11-07 13:46:20.268 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:46:20.268 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4955000000000003ms 200 text/css
2019-11-07 13:46:20.268 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:46:20.269 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:46:20.269 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9136000000000001ms 200 text/css
2019-11-07 13:46:20.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:46:20.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:46:20.271 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:46:20.271 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:46:20.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5723ms 200 text/css
2019-11-07 13:46:20.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5723ms 200 text/css
2019-11-07 13:46:20.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:46:20.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:46:20.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:46:20.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:46:20.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:46:20.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:46:20.331 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:46:20.331 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:46:20.331 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0793ms 200 text/css
2019-11-07 13:46:20.332 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.354900000000001ms 200 text/css
2019-11-07 13:46:20.332 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:46:20.332 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:46:20.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.9156ms 200 text/css
2019-11-07 13:46:20.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.7708ms 200 text/css
2019-11-07 13:46:20.333 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:46:20.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.2856000000000005ms 200 text/css
2019-11-07 13:46:20.333 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:46:20.334 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:46:20.334 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0164ms 200 text/css
2019-11-07 13:46:20.337 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:46:20.338 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:46:20.338 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.797600000000001ms 200 text/css
2019-11-07 13:46:20.338 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:46:20.338 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7894ms 200 text/css
2019-11-07 13:46:20.365 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:46:20.366 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:46:20.366 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3632ms 200 font/woff2
2019-11-07 13:46:20.386 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127180258  
2019-11-07 13:46:20.388 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:46:20.388 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:46:20.395 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:46:20.400 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:46:20.402 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:46:20.405 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:46:20.416 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:46:20.417 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:46:20.418 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.021ms 404 
2019-11-07 13:46:20.419 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9804000000000002ms 404 
2019-11-07 13:46:20.443 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:46:20.443 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.44580000000000003ms 404 
2019-11-07 13:46:20.446 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:46:20.447 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3407ms 404 
2019-11-07 13:46:20.453 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 48.4067ms.
2019-11-07 13:46:20.453 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 57.8102ms
2019-11-07 13:46:20.453 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:46:20.453 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 67.17410000000001ms 200 text/html; charset=utf-8
2019-11-07 13:46:22.325 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127180259  
2019-11-07 13:46:22.327 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:46:22.327 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:46:22.327 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:46:22.328 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:46:22.331 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:46:22.333 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:46:22.335 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.6277ms.
2019-11-07 13:46:22.335 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 8.1518ms
2019-11-07 13:46:22.335 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:46:22.336 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.0366ms 200 text/html; charset=utf-8
2019-11-07 13:46:22.353 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127180260  
2019-11-07 13:46:22.354 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:46:22.354 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:46:22.354 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:46:22.354 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:46:22.355 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:46:22.356 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:46:22.357 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:46:22.359 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.6012000000000002ms.
2019-11-07 13:46:22.359 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 5.0561ms
2019-11-07 13:46:22.359 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:46:22.359 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.1623ms 200 text/html; charset=utf-8
2019-11-07 13:48:28.776 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:48:28.779 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:28.780 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:48:28.780 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:28.782 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:28.785 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:48:28.789 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:48:28.795 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.1836ms.
2019-11-07 13:48:28.795 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 14.648000000000001ms
2019-11-07 13:48:28.795 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:48:28.795 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.727700000000002ms 200 text/html; charset=utf-8
2019-11-07 13:48:28.801 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:48:28.802 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:48:28.802 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:48:28.802 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:48:28.804 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:48:28.804 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4889ms 200 text/css
2019-11-07 13:48:28.805 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:48:28.805 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:48:28.805 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.0737000000000005ms 200 text/css
2019-11-07 13:48:28.805 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6024000000000003ms 200 text/css
2019-11-07 13:48:28.806 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:48:28.806 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5660000000000003ms 200 text/css
2019-11-07 13:48:28.808 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:48:28.809 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:48:28.810 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:48:28.810 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8365ms 200 text/css
2019-11-07 13:48:28.810 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:48:28.811 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:48:28.811 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5274ms 200 application/javascript
2019-11-07 13:48:28.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:48:28.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:48:28.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:48:28.822 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:48:28.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5019ms 200 application/javascript
2019-11-07 13:48:28.825 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:48:28.825 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1839ms 200 text/css
2019-11-07 13:48:28.827 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:48:28.827 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.5351ms 200 text/css
2019-11-07 13:48:28.828 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:48:28.828 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4857000000000005ms 200 application/javascript
2019-11-07 13:48:28.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:48:28.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:48:28.834 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:48:28.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2459000000000002ms 200 application/javascript
2019-11-07 13:48:28.834 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:48:28.834 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5184ms 200 application/javascript
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:48:28.964 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5593ms 200 text/css
2019-11-07 13:48:28.965 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:48:28.965 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.555ms 200 text/css
2019-11-07 13:48:28.965 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:48:28.968 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:48:28.968 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:48:28.968 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2887ms 200 text/css
2019-11-07 13:48:28.968 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3528000000000002ms 200 text/css
2019-11-07 13:48:28.968 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:48:28.968 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2707ms 200 text/css
2019-11-07 13:48:28.970 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:48:28.970 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:48:28.970 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4242ms 200 text/css
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5703ms 200 text/css
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8692000000000001ms 200 text/css
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:48:28.971 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.3287ms 200 text/css
2019-11-07 13:48:28.973 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:48:28.973 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:48:28.974 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:48:28.974 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0693000000000001ms 200 text/css
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.6348ms 200 text/css
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41250000000000003ms 200 text/css
2019-11-07 13:48:28.977 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5146000000000001ms 200 text/css
2019-11-07 13:48:28.978 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:48:28.978 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5278ms 200 text/css
2019-11-07 13:48:28.996 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:48:28.997 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:48:28.997 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.88ms 200 font/woff2
2019-11-07 13:48:29.001 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:48:29.002 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:48:29.002 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7542ms 404 
2019-11-07 13:48:29.002 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.42460000000000003ms 404 
2019-11-07 13:48:29.028 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127308896  
2019-11-07 13:48:29.030 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:29.030 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:48:29.031 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:29.033 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:29.034 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:48:29.036 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:48:29.039 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.5049ms.
2019-11-07 13:48:29.039 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 8.6498ms
2019-11-07 13:48:29.039 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:48:29.039 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.7642ms 200 text/html; charset=utf-8
2019-11-07 13:48:29.114 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:48:29.115 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3542ms 404 
2019-11-07 13:48:29.119 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:48:29.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.37570000000000003ms 404 
2019-11-07 13:48:30.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127308897  
2019-11-07 13:48:30.488 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:30.488 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:48:30.488 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:30.490 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:30.492 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:48:30.495 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:48:30.498 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.4759ms.
2019-11-07 13:48:30.498 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 10.2048ms
2019-11-07 13:48:30.498 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:48:30.499 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.420900000000001ms 200 text/html; charset=utf-8
2019-11-07 13:48:30.514 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127308898  
2019-11-07 13:48:30.516 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:30.516 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:48:30.516 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:30.517 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:30.517 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:48:30.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:48:30.523 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:48:30.524 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.2341ms.
2019-11-07 13:48:30.525 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 8.3985ms
2019-11-07 13:48:30.525 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:48:30.525 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.363000000000001ms 200 text/html; charset=utf-8
2019-11-07 13:48:32.310 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:48:32.356 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:32.356 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:48:32.356 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:32.358 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:32.359 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:48:32.361 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:48:32.363 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 2.3533ms.
2019-11-07 13:48:32.363 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 6.771800000000001ms
2019-11-07 13:48:32.363 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:48:32.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 53.128800000000005ms 200 text/html; charset=utf-8
2019-11-07 13:48:32.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:48:32.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:48:32.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:48:32.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:48:32.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:48:32.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8487ms 200 text/css
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8403ms 200 text/css
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9706ms 200 text/css
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8521000000000001ms 200 text/css
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2887ms 200 application/javascript
2019-11-07 13:48:32.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1773ms 200 text/css
2019-11-07 13:48:32.376 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:48:32.377 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:48:32.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2565ms 200 application/javascript
2019-11-07 13:48:32.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:48:32.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:48:32.380 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:48:32.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5793ms 200 text/css
2019-11-07 13:48:32.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:48:32.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:48:32.381 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:48:32.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8501000000000003ms 200 text/css
2019-11-07 13:48:32.382 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:48:32.382 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4746000000000001ms 200 application/javascript
2019-11-07 13:48:32.387 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:48:32.388 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:48:32.388 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.49110000000000004ms 200 application/javascript
2019-11-07 13:48:32.393 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:48:32.393 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.7813ms 200 application/javascript
2019-11-07 13:48:32.471 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:48:32.471 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:48:32.471 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:48:32.471 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:48:32.471 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:48:32.472 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:48:32.472 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:48:32.472 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.43870000000000003ms 200 text/css
2019-11-07 13:48:32.472 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.43910000000000005ms 200 text/css
2019-11-07 13:48:32.472 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:48:32.472 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0414ms 200 text/css
2019-11-07 13:48:32.473 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:48:32.473 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9388ms 200 text/css
2019-11-07 13:48:32.474 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:48:32.474 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:48:32.474 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1261ms 200 text/css
2019-11-07 13:48:32.475 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:48:32.475 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:48:32.475 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48050000000000004ms 200 text/css
2019-11-07 13:48:32.476 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:48:32.476 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:48:32.476 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6394000000000001ms 200 text/css
2019-11-07 13:48:32.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.4549ms 200 text/css
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:48:32.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6532ms 200 text/css
2019-11-07 13:48:32.481 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8426ms 200 text/css
2019-11-07 13:48:32.481 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:48:32.481 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8967ms 200 text/css
2019-11-07 13:48:32.483 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:48:32.483 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4079ms 200 text/css
2019-11-07 13:48:32.484 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:48:32.484 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:48:32.484 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:48:32.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8410000000000001ms 200 text/css
2019-11-07 13:48:32.485 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:48:32.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3066ms 200 text/css
2019-11-07 13:48:32.570 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:48:32.571 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:48:32.571 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8998ms 200 font/woff2
2019-11-07 13:48:32.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127312465  
2019-11-07 13:48:32.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:48:32.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:48:32.592 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4148ms 404 
2019-11-07 13:48:32.593 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0337ms 404 
2019-11-07 13:48:32.594 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:32.594 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:48:32.594 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:32.596 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:32.596 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:48:32.597 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:48:32.601 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 4.1792ms.
2019-11-07 13:48:32.601 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 7.1963ms
2019-11-07 13:48:32.601 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:48:32.602 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.143500000000001ms 200 text/html; charset=utf-8
2019-11-07 13:48:32.673 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:48:32.673 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4545ms 404 
2019-11-07 13:48:32.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:48:32.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3864ms 404 
2019-11-07 13:48:35.571 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127312466  
2019-11-07 13:48:35.573 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:35.573 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:48:35.574 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:35.575 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:35.577 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:48:35.578 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:48:35.581 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.1769000000000003ms.
2019-11-07 13:48:35.581 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 7.0335ms
2019-11-07 13:48:35.581 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:48:35.581 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.9356ms 200 text/html; charset=utf-8
2019-11-07 13:48:35.593 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127312467  
2019-11-07 13:48:35.593 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:35.593 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:48:35.593 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:35.594 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:35.594 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:48:35.596 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:48:35.596 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:48:35.597 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 0.9225000000000001ms.
2019-11-07 13:48:35.597 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 4.0360000000000005ms
2019-11-07 13:48:35.597 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:48:35.597 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.8952ms 200 text/html; charset=utf-8
2019-11-07 13:48:55.677 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.683 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.684 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.685 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.685 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.685 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.685 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.685 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 13:48:55.712 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:55.909 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 13:48:55.959 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 13:48:56.070 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 13:48:56.207 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 13:48:56.208 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 13:48:56.208 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 13:48:56.221 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127312468  
2019-11-07 13:48:56.228 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 13:48:56.281 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:56.283 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:48:56.308 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:56.316 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:56.381 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:48:56.483 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:48:56.560 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 76.6555ms.
2019-11-07 13:48:56.562 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 254.1808ms
2019-11-07 13:48:56.562 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:48:56.568 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 347.7527ms 200 text/html; charset=utf-8
2019-11-07 13:48:56.584 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127312469  
2019-11-07 13:48:56.590 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:48:56.590 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:48:56.594 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:48:56.630 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:48:56.666 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:48:56.688 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:48:56.690 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:48:56.697 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.0343ms.
2019-11-07 13:48:56.697 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 102.79990000000001ms
2019-11-07 13:48:56.697 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:48:56.698 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 113.6744ms 200 text/html; charset=utf-8
2019-11-07 13:49:27.199 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:49:27.214 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:27.215 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:49:27.219 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:27.221 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:27.228 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:49:27.236 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:49:27.297 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 63.068900000000006ms.
2019-11-07 13:49:27.297 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 78.8103ms
2019-11-07 13:49:27.297 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:49:27.298 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 98.76100000000001ms 200 text/html; charset=utf-8
2019-11-07 13:49:27.303 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:49:27.303 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:49:27.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:49:27.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:49:27.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:49:27.304 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:49:27.311 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:49:27.311 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.9762ms 200 text/css
2019-11-07 13:49:27.311 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:49:27.311 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.1235ms 200 text/css
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.1332ms 200 text/css
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.1921ms 200 text/css
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.7828ms 200 text/css
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:49:27.317 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:49:27.318 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:49:27.318 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6192000000000001ms 200 application/javascript
2019-11-07 13:49:27.318 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:49:27.318 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:49:27.319 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:49:27.319 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1932ms 200 application/javascript
2019-11-07 13:49:27.319 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:49:27.319 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2241ms 200 application/javascript
2019-11-07 13:49:27.320 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:49:27.322 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:49:27.323 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:49:27.323 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.553ms 200 text/css
2019-11-07 13:49:27.324 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:49:27.324 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8065ms 200 application/javascript
2019-11-07 13:49:27.326 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:49:27.326 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.5577000000000005ms 200 application/javascript
2019-11-07 13:49:27.339 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:49:27.339 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.333400000000005ms 200 text/css
2019-11-07 13:49:27.351 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:49:27.351 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:49:27.352 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:49:27.352 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:49:27.354 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6091ms 200 text/css
2019-11-07 13:49:27.354 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6262000000000003ms 200 text/css
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.45730000000000004ms 200 text/css
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:49:27.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5396000000000001ms 200 text/css
2019-11-07 13:49:27.363 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:49:27.363 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:49:27.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7679ms 200 text/css
2019-11-07 13:49:27.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.868ms 200 text/css
2019-11-07 13:49:27.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:49:27.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:49:27.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:49:27.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:49:27.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:49:27.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5006ms 200 text/css
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5372ms 200 text/css
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6644ms 200 text/css
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:49:27.425 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8212ms 200 text/css
2019-11-07 13:49:27.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:49:27.427 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:49:27.428 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:49:27.428 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2398ms 200 text/css
2019-11-07 13:49:27.431 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:49:27.431 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5689ms 200 text/css
2019-11-07 13:49:27.433 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:49:27.433 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.3312ms 200 text/css
2019-11-07 13:49:27.438 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:49:27.438 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.6273ms 200 text/css
2019-11-07 13:49:27.526 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:49:27.526 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:49:27.528 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3514ms 404 
2019-11-07 13:49:27.528 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3426ms 404 
2019-11-07 13:49:27.531 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:49:27.532 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:49:27.532 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4424000000000001ms 200 font/woff2
2019-11-07 13:49:27.548 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127367417  
2019-11-07 13:49:27.549 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:27.549 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:49:27.556 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:27.561 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:27.563 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:49:27.565 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:49:27.604 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 39.4823ms.
2019-11-07 13:49:27.604 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 47.917500000000004ms
2019-11-07 13:49:27.604 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:49:27.604 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.9044ms 200 text/html; charset=utf-8
2019-11-07 13:49:27.619 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:49:27.619 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3321ms 404 
2019-11-07 13:49:27.626 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:49:27.626 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2777ms 404 
2019-11-07 13:49:29.062 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127367418  
2019-11-07 13:49:29.063 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:29.064 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:49:29.064 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:29.065 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:29.067 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:49:29.070 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:49:29.073 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.4186ms.
2019-11-07 13:49:29.073 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 9.0204ms
2019-11-07 13:49:29.073 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:49:29.073 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.7787ms 200 text/html; charset=utf-8
2019-11-07 13:49:29.089 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127367419  
2019-11-07 13:49:29.090 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:29.091 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:49:29.091 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:29.091 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:29.092 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:49:29.096 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:49:29.098 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:49:29.099 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.1288ms.
2019-11-07 13:49:29.099 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 8.7284ms
2019-11-07 13:49:29.099 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:49:29.100 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.114700000000001ms 200 text/html; charset=utf-8
2019-11-07 13:49:42.913 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:49:42.916 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:42.916 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:49:42.917 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:42.918 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:42.920 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:49:42.922 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:49:42.926 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 4.2447ms.
2019-11-07 13:49:42.926 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 9.4417ms
2019-11-07 13:49:42.926 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:49:42.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.6971ms 200 text/html; charset=utf-8
2019-11-07 13:49:42.933 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:49:42.933 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:49:42.933 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:49:42.934 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:49:42.934 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:49:42.934 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:49:42.935 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:49:42.935 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6058000000000001ms 200 text/css
2019-11-07 13:49:42.937 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:49:42.937 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5628ms 200 text/css
2019-11-07 13:49:42.937 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:49:42.937 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0609ms 200 text/css
2019-11-07 13:49:42.938 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:49:42.938 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9825ms 200 application/javascript
2019-11-07 13:49:42.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:49:42.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:49:42.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7523000000000001ms 200 application/javascript
2019-11-07 13:49:42.942 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:49:42.943 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.6023ms 200 text/css
2019-11-07 13:49:42.944 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:49:42.944 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.785ms 200 text/css
2019-11-07 13:49:42.951 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:49:42.951 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:49:42.951 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:49:42.952 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:49:42.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.436ms 200 application/javascript
2019-11-07 13:49:42.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:49:42.952 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:49:42.953 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:49:42.953 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5900000000000001ms 200 text/css
2019-11-07 13:49:42.956 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:49:42.956 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:49:42.956 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.8926ms 200 application/javascript
2019-11-07 13:49:42.956 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.778700000000001ms 200 application/javascript
2019-11-07 13:49:42.969 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:49:42.969 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.9829ms 200 text/css
2019-11-07 13:49:43.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:49:43.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:49:43.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:49:43.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:49:43.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:49:43.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9515ms 200 text/css
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.068ms 200 text/css
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9364ms 200 text/css
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4338ms 200 text/css
2019-11-07 13:49:43.097 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4295ms 200 text/css
2019-11-07 13:49:43.099 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:49:43.101 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:49:43.102 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:49:43.102 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9518000000000001ms 200 text/css
2019-11-07 13:49:43.104 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:49:43.104 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.103400000000001ms 200 text/css
2019-11-07 13:49:43.104 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:49:43.104 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.9367ms 200 text/css
2019-11-07 13:49:43.104 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:49:43.104 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:49:43.106 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:49:43.106 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.358ms 200 text/css
2019-11-07 13:49:43.110 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:49:43.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:49:43.111 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:49:43.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.5102ms 200 text/css
2019-11-07 13:49:43.111 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:49:43.112 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:49:43.112 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2276ms 200 text/css
2019-11-07 13:49:43.112 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:49:43.113 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:49:43.113 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.49300000000000005ms 200 text/css
2019-11-07 13:49:43.113 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:49:43.113 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.951ms 200 text/css
2019-11-07 13:49:43.113 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:49:43.113 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5175ms 200 text/css
2019-11-07 13:49:43.130 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:49:43.133 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:49:43.133 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8128ms 200 font/woff2
2019-11-07 13:49:43.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:49:43.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:49:43.148 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5527ms 404 
2019-11-07 13:49:43.148 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4939ms 404 
2019-11-07 13:49:43.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127383022  
2019-11-07 13:49:43.169 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:43.169 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:49:43.170 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:43.172 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:43.174 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:49:43.176 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:49:43.183 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 6.604900000000001ms.
2019-11-07 13:49:43.183 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 13.6441ms
2019-11-07 13:49:43.184 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:49:43.184 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.7437ms 200 text/html; charset=utf-8
2019-11-07 13:49:43.248 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:49:43.249 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3671ms 404 
2019-11-07 13:49:43.253 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:49:43.254 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6735ms 404 
2019-11-07 13:49:45.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127383023  
2019-11-07 13:49:45.823 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:45.823 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:49:45.823 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:45.824 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:45.826 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:49:45.827 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:49:45.829 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.3422ms.
2019-11-07 13:49:45.829 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 6.2912ms
2019-11-07 13:49:45.829 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:49:45.829 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.5103ms 200 text/html; charset=utf-8
2019-11-07 13:49:45.841 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127383024  
2019-11-07 13:49:45.842 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:49:45.842 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:49:45.842 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:49:45.843 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:49:45.843 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:49:45.844 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:49:45.845 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:49:45.846 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.3927ms.
2019-11-07 13:49:45.846 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 4.3143ms
2019-11-07 13:49:45.846 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:49:45.846 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.8558ms 200 text/html; charset=utf-8
2019-11-07 13:51:14.195 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:51:14.197 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:51:14.198 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:51:14.198 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:51:14.199 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:51:14.202 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:51:14.205 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:51:14.208 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 3.1137ms.
2019-11-07 13:51:14.208 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 10.0779ms
2019-11-07 13:51:14.208 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:51:14.208 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.914800000000001ms 200 text/html; charset=utf-8
2019-11-07 13:51:14.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:51:14.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:51:14.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:51:14.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:51:14.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:51:14.216 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:51:14.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7549ms 200 application/javascript
2019-11-07 13:51:14.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:51:14.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:51:14.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.6267000000000005ms 200 application/javascript
2019-11-07 13:51:14.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:51:14.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.566800000000001ms 200 text/css
2019-11-07 13:51:14.221 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:51:14.221 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.0115ms 200 application/javascript
2019-11-07 13:51:14.224 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:51:14.225 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:51:14.225 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5388000000000002ms 200 text/css
2019-11-07 13:51:14.226 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:51:14.228 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:51:14.228 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.250900000000001ms 200 text/css
2019-11-07 13:51:14.230 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:51:14.231 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:51:14.231 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4608ms 200 text/css
2019-11-07 13:51:14.231 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:51:14.232 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:51:14.232 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2108ms 200 text/css
2019-11-07 13:51:14.237 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:51:14.241 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:51:14.241 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.929000000000002ms 200 text/css
2019-11-07 13:51:14.242 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:51:14.242 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.8487ms 200 application/javascript
2019-11-07 13:51:14.244 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:51:14.245 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:51:14.245 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5215ms 200 text/css
2019-11-07 13:51:14.246 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:51:14.246 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.3719ms 200 application/javascript
2019-11-07 13:51:14.321 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:51:14.321 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:51:14.321 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:51:14.321 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:51:14.321 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8141ms 200 text/css
2019-11-07 13:51:14.322 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7317ms 200 text/css
2019-11-07 13:51:14.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:51:14.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:51:14.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:51:14.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:51:14.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:51:14.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:51:14.381 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:51:14.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.40190000000000003ms 200 text/css
2019-11-07 13:51:14.381 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:51:14.381 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2366000000000001ms 200 text/css
2019-11-07 13:51:14.382 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:51:14.382 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:51:14.382 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6858000000000002ms 200 text/css
2019-11-07 13:51:14.382 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1519ms 200 text/css
2019-11-07 13:51:14.382 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:51:14.383 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:51:14.383 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8655ms 200 text/css
2019-11-07 13:51:14.384 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4222ms 200 text/css
2019-11-07 13:51:14.386 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:51:14.387 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:51:14.387 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:51:14.388 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:51:14.388 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5820000000000001ms 200 text/css
2019-11-07 13:51:14.388 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:51:14.388 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:51:14.388 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8029000000000001ms 200 text/css
2019-11-07 13:51:14.388 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:51:14.389 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5517000000000001ms 200 text/css
2019-11-07 13:51:14.392 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:51:14.392 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.5234000000000005ms 200 text/css
2019-11-07 13:51:14.392 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:51:14.392 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:51:14.393 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:51:14.396 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.764ms 200 text/css
2019-11-07 13:51:14.396 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:51:14.396 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5523000000000002ms 200 text/css
2019-11-07 13:51:14.410 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:51:14.411 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:51:14.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5281ms 200 font/woff2
2019-11-07 13:51:14.428 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127474314  
2019-11-07 13:51:14.430 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:51:14.430 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:51:14.430 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:51:14.432 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:51:14.434 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:51:14.435 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:51:14.438 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:51:14.438 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:51:14.439 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4566ms 404 
2019-11-07 13:51:14.439 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5194ms 404 
2019-11-07 13:51:14.440 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 5.350700000000001ms.
2019-11-07 13:51:14.441 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 10.001700000000001ms
2019-11-07 13:51:14.441 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:51:14.441 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.5534ms 200 text/html; charset=utf-8
2019-11-07 13:51:14.515 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:51:14.515 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3624ms 404 
2019-11-07 13:51:14.521 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:51:14.521 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4193ms 404 
2019-11-07 13:51:15.517 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127474315  
2019-11-07 13:51:15.519 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:51:15.519 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:51:15.519 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:51:15.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:51:15.523 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:51:15.531 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:51:15.535 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.5584000000000002ms.
2019-11-07 13:51:15.535 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 15.8336ms
2019-11-07 13:51:15.535 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:51:15.535 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.6442ms 200 text/html; charset=utf-8
2019-11-07 13:51:15.571 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127474316  
2019-11-07 13:51:15.572 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:51:15.572 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:51:15.572 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:51:15.572 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:51:15.573 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:51:15.586 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:51:15.595 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:51:15.596 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.296ms.
2019-11-07 13:51:15.596 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 24.6122ms
2019-11-07 13:51:15.596 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:51:15.597 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.7129ms 200 text/html; charset=utf-8
2019-11-07 13:53:03.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 13:53:03.209 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:53:03.209 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:53:03.209 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:53:03.210 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:53:03.212 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:53:03.216 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 13:53:03.223 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.7045ms.
2019-11-07 13:53:03.223 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 13.8489ms
2019-11-07 13:53:03.223 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 13:53:03.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.5593ms 200 text/html; charset=utf-8
2019-11-07 13:53:03.234 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:53:03.235 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:53:03.236 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:53:03.237 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:53:03.237 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5859ms 200 text/css
2019-11-07 13:53:03.237 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:53:03.241 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:53:03.242 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6955ms 200 text/css
2019-11-07 13:53:03.242 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:53:03.243 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 13:53:03.244 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 13:53:03.244 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0631000000000002ms 200 application/javascript
2019-11-07 13:53:03.246 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:53:03.246 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.4291ms 200 text/css
2019-11-07 13:53:03.247 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 13:53:03.251 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:53:03.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.792200000000001ms 200 text/css
2019-11-07 13:53:03.251 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 13:53:03.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.807300000000001ms 200 application/javascript
2019-11-07 13:53:03.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:53:03.253 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:53:03.253 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.581200000000003ms 200 text/css
2019-11-07 13:53:03.254 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:53:03.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 13:53:03.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 13:53:03.258 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 13:53:03.258 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1592000000000002ms 200 application/javascript
2019-11-07 13:53:03.259 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:53:03.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.8817ms 200 text/css
2019-11-07 13:53:03.260 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:53:03.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.0463000000000005ms 200 text/css
2019-11-07 13:53:03.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 13:53:03.264 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 13:53:03.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5004ms 200 application/javascript
2019-11-07 13:53:03.268 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 13:53:03.268 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.6523ms 200 application/javascript
2019-11-07 13:53:03.359 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:53:03.361 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:53:03.361 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1742ms 200 text/css
2019-11-07 13:53:03.361 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 13:53:03.362 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 13:53:03.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6362ms 200 text/css
2019-11-07 13:53:03.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:53:03.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 13:53:03.362 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:53:03.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:53:03.364 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:53:03.365 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5507ms 200 text/css
2019-11-07 13:53:03.366 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:53:03.366 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:53:03.366 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8714000000000004ms 200 text/css
2019-11-07 13:53:03.366 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2575000000000003ms 200 text/css
2019-11-07 13:53:03.366 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 13:53:03.366 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2159ms 200 text/css
2019-11-07 13:53:03.368 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:53:03.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 13:53:03.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:53:03.372 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 13:53:03.373 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:53:03.373 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.929ms 200 text/css
2019-11-07 13:53:03.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 13:53:03.480 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:53:03.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 13:53:03.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 111.3455ms 200 text/css
2019-11-07 13:53:03.481 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 13:53:03.481 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8671000000000001ms 200 text/css
2019-11-07 13:53:03.482 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 13:53:03.482 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 112.7989ms 200 text/css
2019-11-07 13:53:03.484 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 13:53:03.484 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 114.0331ms 200 text/css
2019-11-07 13:53:03.487 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 13:53:03.487 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.527ms 200 text/css
2019-11-07 13:53:03.487 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:53:03.488 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:53:03.488 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4212ms 200 text/css
2019-11-07 13:53:03.488 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 13:53:03.489 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 13:53:03.489 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3715000000000002ms 200 text/css
2019-11-07 13:53:03.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:53:03.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 13:53:03.494 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9731000000000001ms 404 
2019-11-07 13:53:03.495 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 13:53:03.495 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4308ms 200 font/woff2
2019-11-07 13:53:03.496 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 13:53:03.497 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6149ms 404 
2019-11-07 13:53:03.516 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573127583344  
2019-11-07 13:53:03.517 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:53:03.518 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:53:03.518 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:53:03.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:53:03.522 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 13:53:03.524 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 13:53:03.528 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 4.085500000000001ms.
2019-11-07 13:53:03.528 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 9.7537ms
2019-11-07 13:53:03.528 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 13:53:03.528 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.7047ms 200 text/html; charset=utf-8
2019-11-07 13:53:03.568 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:53:03.568 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3084ms 404 
2019-11-07 13:53:03.574 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 13:53:03.574 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.39080000000000004ms 404 
2019-11-07 13:53:05.217 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573127583345  
2019-11-07 13:53:05.218 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:53:05.218 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:53:05.218 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:53:05.219 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:53:05.221 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 13:53:05.223 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 13:53:05.226 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.4917000000000002ms.
2019-11-07 13:53:05.226 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 7.473800000000001ms
2019-11-07 13:53:05.226 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 13:53:05.226 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.3978ms 200 text/html; charset=utf-8
2019-11-07 13:53:05.244 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573127583346  
2019-11-07 13:53:05.246 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 13:53:05.246 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:53:05.246 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 13:53:05.248 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 13:53:05.250 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 13:53:05.255 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 13:53:05.259 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 13:53:05.260 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.5105000000000002ms.
2019-11-07 13:53:05.260 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 14.130500000000001ms
2019-11-07 13:53:05.260 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 13:53:05.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.2205ms 200 text/html; charset=utf-8
2019-11-07 14:07:19.671 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:07:19.674 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:19.695 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:07:19.748 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 14:07:19.773 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 14:07:19.782 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 14:07:19.791 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 14:07:19.797 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:19.797 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:07:19.797 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:19.797 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:07:19.799 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:07:19.803 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 4.1696ms.
2019-11-07 14:07:19.804 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 6.6821ms
2019-11-07 14:07:19.804 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:07:19.804 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 132.6633ms 200 text/html; charset=utf-8
2019-11-07 14:07:19.809 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:07:19.810 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:07:19.810 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:07:19.815 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:07:19.815 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:07:19.816 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:07:19.824 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:07:19.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.002500000000001ms 200 text/css
2019-11-07 14:07:19.830 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:07:19.830 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.589100000000002ms 200 text/css
2019-11-07 14:07:19.835 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:07:19.835 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.2432ms 200 text/css
2019-11-07 14:07:19.839 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:07:19.839 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:07:19.840 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:07:19.840 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.4072ms 200 text/css
2019-11-07 14:07:19.840 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:07:19.853 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:07:19.854 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:07:19.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.36160000000000003ms 200 text/css
2019-11-07 14:07:19.855 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:07:19.855 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.814200000000001ms 200 text/css
2019-11-07 14:07:19.861 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:07:19.861 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.7908ms 200 application/javascript
2019-11-07 14:07:19.862 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:07:19.867 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:07:19.872 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:07:19.872 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.077300000000001ms 200 text/css
2019-11-07 14:07:19.877 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:07:19.877 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.285900000000005ms 200 application/javascript
2019-11-07 14:07:19.888 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:07:19.889 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:07:19.889 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:07:19.889 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:07:19.889 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9909ms 200 text/css
2019-11-07 14:07:19.891 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:07:19.891 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3248ms 200 text/css
2019-11-07 14:07:19.895 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:07:19.896 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:07:19.896 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6234000000000001ms 200 text/css
2019-11-07 14:07:19.898 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:07:19.899 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:07:19.899 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.44170000000000004ms 200 text/css
2019-11-07 14:07:19.903 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:07:19.903 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.2283ms 200 text/css
2019-11-07 14:07:19.904 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:07:19.904 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:07:19.904 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.455ms 200 text/css
2019-11-07 14:07:19.926 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:07:19.927 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2336ms 200 text/css
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6048ms 200 text/css
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:07:19.928 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0953ms 200 text/css
2019-11-07 14:07:19.942 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:07:19.943 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:07:19.943 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:07:19.944 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:07:19.944 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.7058ms 200 text/css
2019-11-07 14:07:19.945 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:07:19.948 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:07:19.948 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 81.39ms 200 application/javascript
2019-11-07 14:07:19.948 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:07:19.949 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3080000000000003ms 200 text/css
2019-11-07 14:07:19.950 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:07:19.950 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.581ms 200 text/css
2019-11-07 14:07:19.954 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:07:19.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.5039ms 200 text/css
2019-11-07 14:07:19.954 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:07:19.960 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:07:19.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.6652000000000005ms 200 text/css
2019-11-07 14:07:19.988 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:07:19.988 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48210000000000003ms 404 
2019-11-07 14:07:19.991 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:07:19.991 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2932ms 404 
2019-11-07 14:07:20.081 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:07:20.081 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 270.5094ms 200 application/javascript
2019-11-07 14:07:20.490 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:07:20.490 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 673.7451ms 200 application/javascript
2019-11-07 14:07:20.598 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:07:20.612 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:07:20.613 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8515ms 404 
2019-11-07 14:07:20.618 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573128440110  
2019-11-07 14:07:20.620 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:07:20.620 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.7743ms 200 font/woff2
2019-11-07 14:07:20.621 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:20.621 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:07:20.621 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:20.622 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:07:20.623 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7623000000000001ms 404 
2019-11-07 14:07:20.627 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:20.628 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:07:20.633 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:07:20.638 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 5.0686ms.
2019-11-07 14:07:20.638 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 16.965ms
2019-11-07 14:07:20.638 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:07:20.639 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.302200000000003ms 200 text/html; charset=utf-8
2019-11-07 14:07:22.518 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573128440111  
2019-11-07 14:07:22.519 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:22.519 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:07:22.519 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:22.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:22.522 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:07:22.525 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:07:22.528 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.391ms.
2019-11-07 14:07:22.528 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 8.1534ms
2019-11-07 14:07:22.528 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:07:22.528 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.717500000000001ms 200 text/html; charset=utf-8
2019-11-07 14:07:22.553 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573128440112  
2019-11-07 14:07:22.555 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:22.555 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:07:22.555 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:22.557 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:22.558 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:07:22.564 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:07:22.568 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:07:22.570 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.2436000000000003ms.
2019-11-07 14:07:22.570 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 15.3489ms
2019-11-07 14:07:22.570 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:07:22.571 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.5519ms 200 text/html; charset=utf-8
2019-11-07 14:07:45.814 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:07:45.816 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:45.816 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:07:45.816 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:45.816 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:45.817 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:07:45.821 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:07:45.823 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 2.4027000000000003ms.
2019-11-07 14:07:45.830 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 7.7343ms
2019-11-07 14:07:45.830 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:07:45.830 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.5427ms 200 text/html; charset=utf-8
2019-11-07 14:07:45.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:07:45.832 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:07:45.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7271000000000001ms 200 text/css
2019-11-07 14:07:45.832 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:07:45.833 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:07:45.833 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:07:45.833 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3835ms 200 text/css
2019-11-07 14:07:45.833 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:07:45.833 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4348ms 200 text/css
2019-11-07 14:07:45.839 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:07:45.840 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:07:45.844 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:07:45.844 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4467ms 200 text/css
2019-11-07 14:07:45.850 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:07:45.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.4251ms 200 text/css
2019-11-07 14:07:45.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:07:45.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:07:45.851 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:07:45.851 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:07:45.852 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:07:45.852 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7896ms 200 application/javascript
2019-11-07 14:07:45.852 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:07:45.852 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6348ms 200 text/css
2019-11-07 14:07:45.854 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:07:45.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8714000000000004ms 200 application/javascript
2019-11-07 14:07:45.855 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:07:45.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:07:45.857 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:07:45.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5373ms 200 application/javascript
2019-11-07 14:07:45.863 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:07:45.863 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.0324ms 200 application/javascript
2019-11-07 14:07:45.863 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:07:45.864 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:07:45.864 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5451ms 200 text/css
2019-11-07 14:07:45.865 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:07:45.865 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.293000000000001ms 200 application/javascript
2019-11-07 14:07:45.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:07:45.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:07:45.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:07:45.940 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:07:45.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.43310000000000004ms 200 text/css
2019-11-07 14:07:45.940 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.629ms 200 text/css
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8242ms 200 text/css
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6865ms 200 text/css
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:07:45.941 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:07:45.942 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:07:45.942 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48600000000000004ms 200 text/css
2019-11-07 14:07:45.942 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:07:45.942 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9333ms 200 text/css
2019-11-07 14:07:46.006 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:07:46.007 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:07:46.007 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:07:46.007 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:07:46.007 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3216ms 200 text/css
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5037ms 200 text/css
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8858000000000001ms 200 text/css
2019-11-07 14:07:46.008 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6927ms 200 text/css
2019-11-07 14:07:46.009 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:07:46.009 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.543ms 200 text/css
2019-11-07 14:07:46.009 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:07:46.010 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:07:46.010 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6364000000000001ms 200 text/css
2019-11-07 14:07:46.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:07:46.018 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:07:46.018 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5556ms 200 text/css
2019-11-07 14:07:46.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:07:46.023 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:07:46.023 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9073ms 200 text/css
2019-11-07 14:07:46.035 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:07:46.036 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:07:46.036 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0432000000000001ms 200 font/woff2
2019-11-07 14:07:46.052 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:07:46.052 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.608ms 404 
2019-11-07 14:07:46.052 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:07:46.053 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4505ms 404 
2019-11-07 14:07:46.067 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573128465931  
2019-11-07 14:07:46.068 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:46.068 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:07:46.068 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:46.070 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:46.071 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:07:46.072 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:07:46.076 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.5757000000000003ms.
2019-11-07 14:07:46.076 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 7.931ms
2019-11-07 14:07:46.076 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:07:46.076 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.621400000000001ms 200 text/html; charset=utf-8
2019-11-07 14:07:46.161 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:07:46.161 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.49860000000000004ms 404 
2019-11-07 14:07:46.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:07:46.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.39330000000000004ms 404 
2019-11-07 14:07:48.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573128465932  
2019-11-07 14:07:48.215 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:48.215 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:07:48.215 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:48.216 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:48.218 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:07:48.221 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:07:48.223 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.9321000000000002ms.
2019-11-07 14:07:48.223 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 7.2780000000000005ms
2019-11-07 14:07:48.223 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:07:48.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.6301ms 200 text/html; charset=utf-8
2019-11-07 14:07:48.247 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573128465933  
2019-11-07 14:07:48.248 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:07:48.248 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:07:48.248 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:07:48.249 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:07:48.250 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:07:48.255 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:07:48.259 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:07:48.261 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.5790000000000002ms.
2019-11-07 14:07:48.261 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 12.9007ms
2019-11-07 14:07:48.261 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:07:48.262 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.599ms 200 text/html; charset=utf-8
2019-11-07 14:10:34.792 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.798 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.798 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.798 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.799 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.799 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.799 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.799 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.799 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.799 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.800 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.800 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.800 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.800 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.800 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.801 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.801 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.801 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.801 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:10:34.833 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:10:35.165 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 14:10:35.224 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 14:10:35.347 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 14:10:35.686 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 14:10:35.687 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 14:10:35.687 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 14:10:35.706 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573128465934  
2019-11-07 14:10:35.713 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 14:10:35.769 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:10:35.772 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:10:35.797 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:10:35.808 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:10:35.873 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:10:35.971 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:10:36.078 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 107.9311ms.
2019-11-07 14:10:36.079 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 282.47180000000003ms
2019-11-07 14:10:36.080 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:10:36.084 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 378.36330000000004ms 200 text/html; charset=utf-8
2019-11-07 14:10:36.119 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573128465935  
2019-11-07 14:10:36.129 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:10:36.129 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:10:36.134 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:10:36.174 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:10:36.200 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:10:36.216 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:10:36.219 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:10:36.228 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 9.1427ms.
2019-11-07 14:10:36.228 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 94.57180000000001ms
2019-11-07 14:10:36.228 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:10:36.229 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 109.6273ms 200 text/html; charset=utf-8
2019-11-07 14:16:39.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573128465936  
2019-11-07 14:16:39.841 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:16:39.842 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:16:39.842 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:16:39.843 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:16:39.848 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:16:39.851 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:16:39.854 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.7876000000000003ms.
2019-11-07 14:16:39.854 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 12.5123ms
2019-11-07 14:16:39.854 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:16:39.855 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.3041ms 200 text/html; charset=utf-8
2019-11-07 14:16:39.871 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573128465937  
2019-11-07 14:16:39.872 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:16:39.872 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:16:39.872 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:16:39.873 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:16:39.874 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:16:39.877 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:16:39.880 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:16:39.881 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.1185ms.
2019-11-07 14:16:39.881 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 9.034600000000001ms
2019-11-07 14:16:39.881 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:16:39.881 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.5085ms 200 text/html; charset=utf-8
2019-11-07 14:16:51.643 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:16:51.646 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:16:51.647 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:16:51.657 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:16:51.659 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:16:51.668 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:16:51.674 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:16:51.730 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 57.946400000000004ms.
2019-11-07 14:16:51.730 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 72.8797ms
2019-11-07 14:16:51.730 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:16:51.730 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 87.7162ms 200 text/html; charset=utf-8
2019-11-07 14:16:51.736 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:16:51.737 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:16:51.737 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:16:51.737 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:16:51.737 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:16:51.738 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:16:51.746 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:16:51.746 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.5869ms 200 text/css
2019-11-07 14:16:51.748 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:16:51.748 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.765ms 200 text/css
2019-11-07 14:16:51.751 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:16:51.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.6438ms 200 text/css
2019-11-07 14:16:51.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:16:51.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:16:51.752 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:16:51.752 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2277ms 200 application/javascript
2019-11-07 14:16:51.753 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:16:51.753 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5418ms 200 text/css
2019-11-07 14:16:51.753 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:16:51.753 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.8324ms 200 application/javascript
2019-11-07 14:16:51.754 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:16:51.754 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.2817ms 200 text/css
2019-11-07 14:16:51.755 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:16:51.755 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.4038ms 200 application/javascript
2019-11-07 14:16:51.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:16:51.759 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:16:51.759 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:16:51.760 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:16:51.760 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.43160000000000004ms 200 application/javascript
2019-11-07 14:16:51.761 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:16:51.761 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2087ms 200 text/css
2019-11-07 14:16:51.766 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:16:51.767 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:16:51.768 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0438ms 200 application/javascript
2019-11-07 14:16:51.772 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:16:51.772 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.7796ms 200 text/css
2019-11-07 14:16:51.846 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:16:51.849 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:16:51.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:16:51.851 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:16:51.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:16:51.851 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5483000000000002ms 200 text/css
2019-11-07 14:16:51.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:16:51.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:16:51.852 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:16:51.853 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9942ms 200 text/css
2019-11-07 14:16:51.853 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:16:51.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5614000000000003ms 200 text/css
2019-11-07 14:16:51.854 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:16:51.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1726ms 200 text/css
2019-11-07 14:16:51.854 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:16:51.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.222700000000001ms 200 text/css
2019-11-07 14:16:51.856 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:16:51.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:16:51.857 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:16:51.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0887ms 200 text/css
2019-11-07 14:16:51.858 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:16:51.858 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.7147ms 200 text/css
2019-11-07 14:16:51.858 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:16:51.858 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8591000000000001ms 200 text/css
2019-11-07 14:16:51.863 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:16:51.863 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7035ms 200 text/css
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9561000000000001ms 200 text/css
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:16:51.864 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.38630000000000003ms 200 text/css
2019-11-07 14:16:51.866 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:16:51.866 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:16:51.867 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:16:51.867 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6045ms 200 text/css
2019-11-07 14:16:51.869 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:16:51.869 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9727ms 200 text/css
2019-11-07 14:16:51.879 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:16:51.879 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:16:51.880 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5491000000000001ms 200 text/css
2019-11-07 14:16:51.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:16:51.960 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:16:51.962 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2472000000000003ms 404 
2019-11-07 14:16:51.962 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2954000000000003ms 404 
2019-11-07 14:16:51.966 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:16:51.967 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:16:51.968 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2384000000000002ms 200 font/woff2
2019-11-07 14:16:51.978 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129011826  
2019-11-07 14:16:51.980 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:16:51.981 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:16:51.996 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:16:52.005 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:16:52.006 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:16:52.007 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:16:52.052 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 45.3202ms.
2019-11-07 14:16:52.052 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 56.064400000000006ms
2019-11-07 14:16:52.052 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:16:52.052 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 74.0079ms 200 text/html; charset=utf-8
2019-11-07 14:16:52.091 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:16:52.091 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3614ms 404 
2019-11-07 14:16:52.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:16:52.096 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4459ms 404 
2019-11-07 14:16:53.341 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129011827  
2019-11-07 14:16:53.343 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:16:53.344 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:16:53.344 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:16:53.345 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:16:53.349 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:16:53.351 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:16:53.357 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 6.6851ms.
2019-11-07 14:16:53.358 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 13.445400000000001ms
2019-11-07 14:16:53.358 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:16:53.358 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.169ms 200 text/html; charset=utf-8
2019-11-07 14:16:53.387 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129011828  
2019-11-07 14:16:53.389 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:16:53.389 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:16:53.389 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:16:53.391 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:16:53.393 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:16:53.395 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:16:53.397 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:16:53.399 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.7449000000000003ms.
2019-11-07 14:16:53.399 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 10.128400000000001ms
2019-11-07 14:16:53.400 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:16:53.400 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.9711ms 200 text/html; charset=utf-8
2019-11-07 14:21:08.791 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:21:08.793 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:08.793 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:21:08.793 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:08.794 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:08.803 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:21:08.806 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:21:08.812 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 5.943700000000001ms.
2019-11-07 14:21:08.812 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 18.7086ms
2019-11-07 14:21:08.812 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:21:08.812 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.2848ms 200 text/html; charset=utf-8
2019-11-07 14:21:08.819 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:21:08.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:21:08.821 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:21:08.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:21:08.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6692ms 200 text/css
2019-11-07 14:21:08.821 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:21:08.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:21:08.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:21:08.822 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:21:08.822 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41300000000000003ms 200 text/css
2019-11-07 14:21:08.822 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:21:08.823 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:21:08.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8989ms 200 application/javascript
2019-11-07 14:21:08.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.245ms 200 text/css
2019-11-07 14:21:08.823 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:21:08.823 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4075ms 200 text/css
2019-11-07 14:21:08.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:21:08.828 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:21:08.829 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4430000000000005ms 200 application/javascript
2019-11-07 14:21:08.841 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:21:08.842 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:21:08.842 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.3205ms 200 application/javascript
2019-11-07 14:21:08.852 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:21:08.853 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:21:08.854 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:21:08.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5273ms 200 text/css
2019-11-07 14:21:08.855 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:21:08.855 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.2337ms 200 text/css
2019-11-07 14:21:08.855 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:21:08.856 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:21:08.856 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8011ms 200 text/css
2019-11-07 14:21:08.856 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:21:08.857 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:21:08.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.677ms 200 application/javascript
2019-11-07 14:21:08.866 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:21:08.866 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.333300000000001ms 200 application/javascript
2019-11-07 14:21:08.931 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:21:08.933 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:21:08.933 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4087ms 200 text/css
2019-11-07 14:21:08.936 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:21:08.939 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:21:08.939 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7042ms 200 text/css
2019-11-07 14:21:09.012 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:21:09.012 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:21:09.014 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:21:09.015 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:21:09.015 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3709000000000002ms 200 text/css
2019-11-07 14:21:09.015 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:21:09.015 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:21:09.016 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2391ms 200 text/css
2019-11-07 14:21:09.016 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1566ms 200 text/css
2019-11-07 14:21:09.014 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:21:09.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:21:09.018 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:21:09.018 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1738ms 200 text/css
2019-11-07 14:21:09.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:21:09.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:21:09.021 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:21:09.023 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:21:09.023 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0972ms 200 text/css
2019-11-07 14:21:09.023 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:21:09.023 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:21:09.023 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.0974ms 200 text/css
2019-11-07 14:21:09.025 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:21:09.025 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.3358ms 200 text/css
2019-11-07 14:21:09.025 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8568000000000002ms 200 text/css
2019-11-07 14:21:09.025 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:21:09.025 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:21:09.027 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:21:09.027 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:21:09.027 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8154000000000001ms 200 text/css
2019-11-07 14:21:09.027 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0834ms 200 text/css
2019-11-07 14:21:09.031 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:21:09.032 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:21:09.032 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8237ms 200 text/css
2019-11-07 14:21:09.034 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:21:09.036 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:21:09.036 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8567ms 200 text/css
2019-11-07 14:21:09.043 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:21:09.044 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:21:09.044 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:21:09.047 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5273000000000003ms 404 
2019-11-07 14:21:09.048 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5297ms 404 
2019-11-07 14:21:09.048 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:21:09.049 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.2305ms 200 font/woff2
2019-11-07 14:21:09.066 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129268919  
2019-11-07 14:21:09.068 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:09.068 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:21:09.068 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:09.070 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:09.072 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:21:09.074 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:21:09.079 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 5.1866ms.
2019-11-07 14:21:09.079 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 11.2332ms
2019-11-07 14:21:09.080 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:21:09.080 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.153ms 200 text/html; charset=utf-8
2019-11-07 14:21:09.153 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:21:09.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3265ms 404 
2019-11-07 14:21:09.158 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:21:09.159 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3453ms 404 
2019-11-07 14:21:10.430 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129268920  
2019-11-07 14:21:10.431 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:10.432 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:21:10.432 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:10.433 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:10.435 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:21:10.438 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:21:10.441 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.1334ms.
2019-11-07 14:21:10.441 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 9.2134ms
2019-11-07 14:21:10.441 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:21:10.442 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.477300000000001ms 200 text/html; charset=utf-8
2019-11-07 14:21:10.473 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129268921  
2019-11-07 14:21:10.475 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:10.475 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:21:10.475 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:10.478 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:10.480 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:21:10.489 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:21:10.497 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:21:10.500 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.6253ms.
2019-11-07 14:21:10.500 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 23.843300000000003ms
2019-11-07 14:21:10.500 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:21:10.500 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.104200000000002ms 200 text/html; charset=utf-8
2019-11-07 14:21:34.001 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:21:34.003 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:34.003 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:21:34.003 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:34.004 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:34.005 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:21:34.007 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:21:34.009 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 2.2639ms.
2019-11-07 14:21:34.009 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 6.1896ms
2019-11-07 14:21:34.009 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:21:34.009 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.0032ms 200 text/html; charset=utf-8
2019-11-07 14:21:34.014 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:21:34.014 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:21:34.014 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:21:34.015 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:21:34.015 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:21:34.015 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/jquery-ui.css was not modified
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8568000000000002ms 304 application/javascript
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8802000000000003ms 304 text/css
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0336000000000003ms 304 text/css
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9309000000000003ms 304 text/css
2019-11-07 14:21:34.017 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5977ms 304 text/css
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8289ms 304 text/css
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery-ui.js was not modified
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3053ms 304 application/javascript
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.21450000000000002ms 304 text/css
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.1957ms 304 application/javascript
2019-11-07 14:21:34.019 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.16490000000000002ms 304 application/javascript
2019-11-07 14:21:34.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:21:34.020 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-11-07 14:21:34.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.1913ms 304 text/css
2019-11-07 14:21:34.021 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:21:34.021 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-11-07 14:21:34.021 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.26980000000000004ms 304 application/javascript
2019-11-07 14:21:34.092 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:21:34.092 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-11-07 14:21:34.092 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3811ms 304 font/woff2
2019-11-07 14:21:34.098 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129294056  
2019-11-07 14:21:34.099 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:34.100 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:21:34.100 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:34.101 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:34.103 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:21:34.105 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:21:34.109 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.4403ms.
2019-11-07 14:21:34.109 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 8.824300000000001ms
2019-11-07 14:21:34.109 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:21:34.109 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.9953ms 200 text/html; charset=utf-8
2019-11-07 14:21:35.475 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129294057  
2019-11-07 14:21:35.477 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:35.477 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:21:35.478 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:35.479 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:35.481 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:21:35.483 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:21:35.486 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.6557ms.
2019-11-07 14:21:35.486 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 7.8337ms
2019-11-07 14:21:35.486 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:21:35.486 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.6049ms 200 text/html; charset=utf-8
2019-11-07 14:21:35.497 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129294058  
2019-11-07 14:21:35.498 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:21:35.499 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:21:35.499 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:21:35.500 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:21:35.501 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:21:35.503 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:21:35.504 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:21:35.505 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.2585ms.
2019-11-07 14:21:35.506 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 6.7496ms
2019-11-07 14:21:35.506 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:21:35.506 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.5146ms 200 text/html; charset=utf-8
2019-11-07 14:21:38.673 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:21:38.674 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:21:38.674 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:21:38.675 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:21:38.675 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:21:38.675 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:21:38.675 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1767ms 200 text/css
2019-11-07 14:21:38.675 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:21:38.676 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:21:38.676 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.881ms 200 text/css
2019-11-07 14:21:38.676 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:21:38.676 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.079ms 200 text/css
2019-11-07 14:21:38.677 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:21:38.677 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7687000000000002ms 200 text/css
2019-11-07 14:21:38.677 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:21:38.677 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6207000000000003ms 200 text/css
2019-11-07 14:21:38.678 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:21:38.679 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:21:38.679 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8791ms 200 text/css
2019-11-07 14:21:38.679 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:21:38.679 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9907ms 200 text/css
2019-11-07 14:21:38.681 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:21:38.682 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:21:38.682 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8499ms 200 text/css
2019-11-07 14:21:38.683 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:21:38.684 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:21:38.684 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3132000000000001ms 200 text/css
2019-11-07 14:21:38.688 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:21:38.689 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:21:38.689 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1433ms 200 text/css
2019-11-07 14:21:38.689 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:21:38.690 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:21:38.690 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7090000000000001ms 200 text/css
2019-11-07 14:21:38.691 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:21:38.691 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:21:38.692 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:21:38.692 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4908ms 200 text/css
2019-11-07 14:21:38.697 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:21:38.697 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:21:38.697 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.2052000000000005ms 200 text/css
2019-11-07 14:21:38.700 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:21:38.700 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8240000000000003ms 200 text/css
2019-11-07 14:21:38.824 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:21:38.825 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2454ms 404 
2019-11-07 14:21:38.829 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:21:38.829 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6495000000000001ms 404 
2019-11-07 14:21:38.830 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:21:38.830 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5449ms 404 
2019-11-07 14:21:38.837 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:21:38.837 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5481ms 404 
2019-11-07 14:23:21.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:23:21.121 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:23:21.121 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:23:21.121 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:23:21.122 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:23:21.123 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:23:21.126 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:23:21.129 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 3.5734000000000004ms.
2019-11-07 14:23:21.130 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 8.0325ms
2019-11-07 14:23:21.130 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:23:21.130 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.608ms 200 text/html; charset=utf-8
2019-11-07 14:23:21.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:23:21.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:23:21.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:23:21.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6355000000000001ms 200 text/css
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41950000000000004ms 200 text/css
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:23:21.140 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2745ms 200 text/css
2019-11-07 14:23:21.142 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:23:21.142 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4731ms 200 text/css
2019-11-07 14:23:21.143 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:23:21.254 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 114.82430000000001ms 200 text/css
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 115.679ms 200 text/css
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:23:21.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5043ms 200 application/javascript
2019-11-07 14:23:21.256 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:23:21.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4067ms 200 application/javascript
2019-11-07 14:23:21.256 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:23:21.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 113.5712ms 200 text/css
2019-11-07 14:23:21.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:23:21.259 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:23:21.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41700000000000004ms 200 application/javascript
2019-11-07 14:23:21.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:23:21.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:23:21.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:23:21.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.38580000000000003ms 200 text/css
2019-11-07 14:23:21.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:23:21.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6566000000000001ms 200 text/css
2019-11-07 14:23:21.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:23:21.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4937000000000005ms 200 application/javascript
2019-11-07 14:23:21.262 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:23:21.263 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:23:21.263 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6754ms 200 text/css
2019-11-07 14:23:21.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:23:21.265 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:23:21.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4403000000000001ms 200 text/css
2019-11-07 14:23:21.266 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:23:21.267 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:23:21.267 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6485000000000001ms 200 text/css
2019-11-07 14:23:21.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:23:21.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:23:21.271 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:23:21.273 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:23:21.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.851ms 200 text/css
2019-11-07 14:23:21.273 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:23:21.273 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:23:21.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3186ms 200 application/javascript
2019-11-07 14:23:21.273 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3185000000000002ms 200 text/css
2019-11-07 14:23:21.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:23:21.274 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:23:21.274 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3922ms 200 text/css
2019-11-07 14:23:21.292 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:23:21.292 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:23:21.292 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:23:21.292 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:23:21.292 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.48650000000000004ms 200 text/css
2019-11-07 14:23:21.292 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4877ms 200 text/css
2019-11-07 14:23:21.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:23:21.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:23:21.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:23:21.363 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:23:21.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6135ms 200 text/css
2019-11-07 14:23:21.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:23:21.365 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:23:21.365 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2283ms 200 text/css
2019-11-07 14:23:21.365 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:23:21.365 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5747ms 200 text/css
2019-11-07 14:23:21.367 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:23:21.367 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.3505ms 200 text/css
2019-11-07 14:23:21.454 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:23:21.454 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:23:21.454 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7536ms 200 font/woff2
2019-11-07 14:23:21.474 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129401354  
2019-11-07 14:23:21.475 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:23:21.475 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:23:21.476 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:23:21.478 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:23:21.479 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:23:21.482 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:23:21.487 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 4.9172ms.
2019-11-07 14:23:21.487 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 11.2217ms
2019-11-07 14:23:21.487 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:23:21.487 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.4166ms 200 text/html; charset=utf-8
2019-11-07 14:23:21.504 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:23:21.505 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4091ms 404 
2019-11-07 14:23:21.541 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:23:21.541 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.38480000000000003ms 404 
2019-11-07 14:23:21.564 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:23:21.564 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3259ms 404 
2019-11-07 14:23:21.570 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:23:21.570 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4323ms 404 
2019-11-07 14:23:23.518 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129401355  
2019-11-07 14:23:23.519 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:23:23.519 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:23:23.519 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:23:23.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:23:23.521 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:23:23.523 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:23:23.525 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.723ms.
2019-11-07 14:23:23.525 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 6.0023ms
2019-11-07 14:23:23.525 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:23:23.525 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.591ms 200 text/html; charset=utf-8
2019-11-07 14:23:23.544 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129401356  
2019-11-07 14:23:23.545 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:23:23.545 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:23:23.545 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:23:23.547 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:23:23.548 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:23:23.551 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:23:23.555 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:23:23.556 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.6019ms.
2019-11-07 14:23:23.556 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 10.896500000000001ms
2019-11-07 14:23:23.556 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:23:23.556 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.6722ms 200 text/html; charset=utf-8
2019-11-07 14:24:17.189 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:24:17.190 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:17.191 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:17.191 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:17.191 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:17.193 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:17.196 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:24:17.200 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 3.8760000000000003ms.
2019-11-07 14:24:17.200 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 8.9374ms
2019-11-07 14:24:17.200 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:17.200 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.998000000000001ms 200 text/html; charset=utf-8
2019-11-07 14:24:17.206 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:17.207 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:17.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0477ms 200 text/css
2019-11-07 14:24:17.211 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:17.211 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:17.211 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:17.211 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4268ms 200 text/css
2019-11-07 14:24:17.211 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:17.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:24:17.212 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:17.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.32580000000000003ms 200 text/css
2019-11-07 14:24:17.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:17.212 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:17.212 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2637ms 200 text/css
2019-11-07 14:24:17.215 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:17.215 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.0399ms 200 text/css
2019-11-07 14:24:17.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:24:17.219 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:24:17.219 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.9477ms 200 application/javascript
2019-11-07 14:24:17.220 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:24:17.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4988ms 200 application/javascript
2019-11-07 14:24:17.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:17.223 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:24:17.226 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:24:17.226 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:17.227 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:17.227 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.9671000000000003ms 200 text/css
2019-11-07 14:24:17.227 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:24:17.227 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.898ms 200 application/javascript
2019-11-07 14:24:17.228 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:17.228 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0062ms 200 text/css
2019-11-07 14:24:17.229 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:24:17.230 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:24:17.230 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5366000000000001ms 200 application/javascript
2019-11-07 14:24:17.231 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:24:17.231 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.3466000000000005ms 200 application/javascript
2019-11-07 14:24:17.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:17.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:17.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:17.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:17.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:17.407 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:17.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4555000000000002ms 200 text/css
2019-11-07 14:24:17.407 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:17.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5858000000000003ms 200 text/css
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1930000000000005ms 200 text/css
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6639000000000004ms 200 text/css
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:17.408 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3417ms 200 text/css
2019-11-07 14:24:17.409 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:17.409 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9322ms 200 text/css
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3718ms 200 text/css
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.365ms 200 text/css
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:17.411 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3703ms 200 text/css
2019-11-07 14:24:17.419 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:17.419 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:17.420 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:17.420 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:17.422 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:17.422 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1273ms 200 text/css
2019-11-07 14:24:17.423 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:17.423 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.7012ms 200 text/css
2019-11-07 14:24:17.423 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:17.423 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6540000000000004ms 200 text/css
2019-11-07 14:24:17.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:17.424 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:17.424 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8948ms 200 text/css
2019-11-07 14:24:17.426 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:17.426 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8181000000000003ms 200 text/css
2019-11-07 14:24:17.442 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:24:17.443 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:24:17.443 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2272ms 200 font/woff2
2019-11-07 14:24:17.456 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129457302  
2019-11-07 14:24:17.458 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:17.458 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:17.458 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:17.460 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:17.461 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:17.463 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:24:17.466 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.1901ms.
2019-11-07 14:24:17.466 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 8.4636ms
2019-11-07 14:24:17.467 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:17.467 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.759ms 200 text/html; charset=utf-8
2019-11-07 14:24:17.484 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:17.484 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:17.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1595ms 404 
2019-11-07 14:24:17.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2201ms 404 
2019-11-07 14:24:17.553 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:17.553 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4027ms 404 
2019-11-07 14:24:17.558 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:17.559 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2548ms 404 
2019-11-07 14:24:22.029 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:24:22.030 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:22.030 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:22.030 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:22.031 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:22.032 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:22.033 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:24:22.035 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 1.8729ms.
2019-11-07 14:24:22.035 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 5.0943000000000005ms
2019-11-07 14:24:22.035 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:22.036 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.7809ms 200 text/html; charset=utf-8
2019-11-07 14:24:22.041 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:22.041 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2581ms 200 text/css
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6817000000000001ms 200 text/css
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.23620000000000002ms 200 text/css
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:22.042 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:22.044 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:24:22.047 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:22.047 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4471ms 200 text/css
2019-11-07 14:24:22.048 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:24:22.048 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4177ms 200 application/javascript
2019-11-07 14:24:22.048 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:22.049 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:22.049 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:22.049 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6543ms 200 text/css
2019-11-07 14:24:22.049 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:24:22.049 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.0982ms 200 application/javascript
2019-11-07 14:24:22.051 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:22.051 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.7181ms 200 text/css
2019-11-07 14:24:22.053 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:24:22.053 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:24:22.053 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4388ms 200 application/javascript
2019-11-07 14:24:22.054 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:24:22.054 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:22.054 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.1543ms 200 text/css
2019-11-07 14:24:22.065 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:24:22.069 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:24:22.069 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.0234ms 200 application/javascript
2019-11-07 14:24:22.069 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:24:22.069 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4717000000000002ms 200 application/javascript
2019-11-07 14:24:22.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:22.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:22.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:22.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:22.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:22.167 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:22.168 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:22.168 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2727ms 200 text/css
2019-11-07 14:24:22.168 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:22.168 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5968ms 200 text/css
2019-11-07 14:24:22.168 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:22.168 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8565ms 200 text/css
2019-11-07 14:24:22.169 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:22.169 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2965ms 200 text/css
2019-11-07 14:24:22.169 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:22.169 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5983ms 200 text/css
2019-11-07 14:24:22.169 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:22.170 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:22.170 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:22.170 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:22.170 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3926ms 200 text/css
2019-11-07 14:24:22.171 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:22.171 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9513ms 200 text/css
2019-11-07 14:24:22.172 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:22.172 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4706ms 200 text/css
2019-11-07 14:24:22.172 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:22.172 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:22.172 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8569ms 200 text/css
2019-11-07 14:24:22.173 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:22.173 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5369ms 200 text/css
2019-11-07 14:24:22.173 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:22.173 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:22.173 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:22.173 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.45270000000000005ms 200 text/css
2019-11-07 14:24:22.174 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:22.174 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:22.174 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3672ms 200 text/css
2019-11-07 14:24:22.174 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:22.174 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3514ms 200 text/css
2019-11-07 14:24:22.178 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:22.178 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:22.178 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.36410000000000003ms 200 text/css
2019-11-07 14:24:22.258 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:24:22.259 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:24:22.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3516000000000001ms 200 font/woff2
2019-11-07 14:24:22.276 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129462160  
2019-11-07 14:24:22.279 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:22.279 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:22.279 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:22.280 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:22.280 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.377ms 404 
2019-11-07 14:24:22.280 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:22.280 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3779ms 404 
2019-11-07 14:24:22.282 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:22.283 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:22.285 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:24:22.288 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.4490000000000003ms.
2019-11-07 14:24:22.289 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 8.8656ms
2019-11-07 14:24:22.289 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:22.289 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.7384ms 200 text/html; charset=utf-8
2019-11-07 14:24:22.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:22.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.34140000000000004ms 404 
2019-11-07 14:24:22.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:22.363 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4305ms 404 
2019-11-07 14:24:23.457 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:24:23.458 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:23.458 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:23.458 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:23.459 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:23.460 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:23.464 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:24:23.467 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 2.7315ms.
2019-11-07 14:24:23.467 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 9.1075ms
2019-11-07 14:24:23.467 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:23.467 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.4289ms 200 text/html; charset=utf-8
2019-11-07 14:24:23.482 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:23.483 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:23.484 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:23.484 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7994ms 200 text/css
2019-11-07 14:24:23.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:24:23.485 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:24:23.485 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7877000000000001ms 200 application/javascript
2019-11-07 14:24:23.492 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:23.492 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.3145ms 200 text/css
2019-11-07 14:24:23.492 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6888000000000001ms 200 text/css
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5247ms 200 text/css
2019-11-07 14:24:23.493 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:23.494 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6078ms 200 text/css
2019-11-07 14:24:23.494 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:23.494 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:23.494 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5075000000000001ms 200 text/css
2019-11-07 14:24:23.494 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:24:23.495 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:24:23.495 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6714ms 200 application/javascript
2019-11-07 14:24:23.495 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:24:23.496 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:24:23.496 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.47190000000000004ms 200 application/javascript
2019-11-07 14:24:23.552 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:24:23.552 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:24:23.552 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:23.552 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:23.553 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3119ms 200 text/css
2019-11-07 14:24:23.553 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:24:23.553 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.046ms 200 application/javascript
2019-11-07 14:24:23.565 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:24:23.565 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.632200000000001ms 200 application/javascript
2019-11-07 14:24:23.618 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:23.619 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:23.620 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:23.620 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3776000000000002ms 200 text/css
2019-11-07 14:24:23.620 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.29150000000000004ms 200 text/css
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9085000000000001ms 200 text/css
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:23.621 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5855ms 200 text/css
2019-11-07 14:24:23.622 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:23.622 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4203000000000001ms 200 text/css
2019-11-07 14:24:23.674 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:23.675 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:23.675 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:23.675 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8451000000000001ms 200 text/css
2019-11-07 14:24:23.676 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:23.676 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5109000000000001ms 200 text/css
2019-11-07 14:24:23.679 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6171ms 200 text/css
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2949ms 200 text/css
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3013ms 200 text/css
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:23.680 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 61.866600000000005ms 200 text/css
2019-11-07 14:24:23.688 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:23.689 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:23.689 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2674ms 200 text/css
2019-11-07 14:24:23.691 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:23.692 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:23.692 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9986ms 200 text/css
2019-11-07 14:24:23.698 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:23.698 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:23.698 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.40340000000000004ms 200 text/css
2019-11-07 14:24:23.770 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:24:23.774 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:24:23.774 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1202000000000005ms 200 font/woff2
2019-11-07 14:24:23.797 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129463602  
2019-11-07 14:24:23.798 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:23.798 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:23.798 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:23.800 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:23.801 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:23.805 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:24:23.808 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.8851ms.
2019-11-07 14:24:23.808 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 10.2291ms
2019-11-07 14:24:23.808 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:23.808 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.6251ms 200 text/html; charset=utf-8
2019-11-07 14:24:23.923 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:23.923 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:23.923 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6473ms 404 
2019-11-07 14:24:23.924 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9874ms 404 
2019-11-07 14:24:23.930 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:23.930 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3866ms 404 
2019-11-07 14:24:23.935 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:23.936 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5012ms 404 
2019-11-07 14:24:24.578 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:24:24.579 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:24.579 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:24.579 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:24.580 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:24.581 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:24.583 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:24:24.585 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 1.749ms.
2019-11-07 14:24:24.585 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 5.6165ms
2019-11-07 14:24:24.585 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:24.585 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.7412ms 200 text/html; charset=utf-8
2019-11-07 14:24:24.609 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:24:24.628 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:24:24.628 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.5941ms 200 application/javascript
2019-11-07 14:24:24.628 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:24:24.628 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:24.634 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:24.634 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.5418ms 200 text/css
2019-11-07 14:24:24.637 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:24.638 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:24:24.638 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:24.638 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:24.638 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4298ms 200 text/css
2019-11-07 14:24:24.638 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:24:24.638 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5346000000000001ms 200 application/javascript
2019-11-07 14:24:24.639 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:24.639 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4807000000000001ms 200 text/css
2019-11-07 14:24:24.676 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:24:24.686 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:24.687 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:24.687 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3645ms 200 text/css
2019-11-07 14:24:24.687 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:24:24.687 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 59.0383ms 200 application/javascript
2019-11-07 14:24:24.697 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:24.698 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:24.698 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.022600000000001ms 200 text/css
2019-11-07 14:24:24.741 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:24:24.748 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:24:24.748 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.8028ms 200 application/javascript
2019-11-07 14:24:24.750 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:24:24.750 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 73.93480000000001ms 200 application/javascript
2019-11-07 14:24:24.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:24.756 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:24.756 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.7149ms 200 text/css
2019-11-07 14:24:24.756 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:24.769 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:24.769 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.9123ms 200 text/css
2019-11-07 14:24:24.931 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:24:24.932 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:24:24.932 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3493000000000002ms 200 font/woff2
2019-11-07 14:24:24.957 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129464810  
2019-11-07 14:24:24.958 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:24.958 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:24.958 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:24.959 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:24.960 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:24.992 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:24:24.999 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.3998ms.
2019-11-07 14:24:24.999 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 41.0888ms
2019-11-07 14:24:24.999 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:24.999 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.202200000000005ms 200 text/html; charset=utf-8
2019-11-07 14:24:25.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:25.147 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:25.162 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:25.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:25.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:25.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:25.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:25.175 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:25.175 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.883000000000001ms 200 text/css
2019-11-07 14:24:25.178 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:25.178 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.309800000000001ms 200 text/css
2019-11-07 14:24:25.162 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.6296ms 200 text/css
2019-11-07 14:24:25.184 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:25.184 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.8619ms 200 text/css
2019-11-07 14:24:25.184 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:25.184 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.5389ms 200 text/css
2019-11-07 14:24:25.186 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:25.186 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.3976ms 200 text/css
2019-11-07 14:24:25.191 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:25.192 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:25.192 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5584ms 200 text/css
2019-11-07 14:24:25.202 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:25.203 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:25.203 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:25.203 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:25.204 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:25.206 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5457ms 200 text/css
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.298900000000001ms 200 text/css
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.0589ms 200 text/css
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:25.207 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.8964000000000003ms 200 text/css
2019-11-07 14:24:25.208 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:25.208 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5978ms 200 text/css
2019-11-07 14:24:25.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:25.210 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5597ms 200 text/css
2019-11-07 14:24:25.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:25.214 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3831ms 404 
2019-11-07 14:24:25.217 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:25.217 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:25.218 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3613ms 404 
2019-11-07 14:24:25.231 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:25.231 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.500300000000001ms 200 text/css
2019-11-07 14:24:25.311 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:25.313 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8792ms 404 
2019-11-07 14:24:25.351 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:25.351 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3074ms 404 
2019-11-07 14:24:26.190 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:24:26.191 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:26.191 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:26.191 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:26.192 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:26.197 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:26.198 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:24:26.200 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 1.7128ms.
2019-11-07 14:24:26.200 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 8.7452ms
2019-11-07 14:24:26.200 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:26.200 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.826500000000001ms 200 text/html; charset=utf-8
2019-11-07 14:24:26.209 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:26.210 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:26.210 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:26.210 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3992ms 200 text/css
2019-11-07 14:24:26.210 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:26.216 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:26.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.7637ms 200 text/css
2019-11-07 14:24:26.216 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:26.217 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:26.220 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4588ms 200 text/css
2019-11-07 14:24:26.226 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:24:26.229 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:24:26.229 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.7325000000000004ms 200 application/javascript
2019-11-07 14:24:26.230 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:26.230 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.0778ms 200 text/css
2019-11-07 14:24:26.234 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:26.238 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:26.239 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:26.239 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5693ms 200 text/css
2019-11-07 14:24:26.239 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:24:26.240 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:24:26.240 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3278ms 200 application/javascript
2019-11-07 14:24:26.243 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:24:26.254 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:26.254 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.069200000000002ms 200 text/css
2019-11-07 14:24:26.255 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:24:26.257 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:24:26.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2674000000000003ms 200 application/javascript
2019-11-07 14:24:26.257 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:24:26.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.6677ms 200 application/javascript
2019-11-07 14:24:26.278 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:24:26.282 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:26.287 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:24:26.287 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.6173ms 200 application/javascript
2019-11-07 14:24:26.320 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:26.320 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.5978ms 200 text/css
2019-11-07 14:24:26.350 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:26.350 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:26.390 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:26.390 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.7854ms 200 text/css
2019-11-07 14:24:26.390 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:26.390 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.4944ms 200 text/css
2019-11-07 14:24:26.397 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:26.399 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:26.399 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:26.402 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:26.420 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:26.420 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.2087ms 200 text/css
2019-11-07 14:24:26.435 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:26.437 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:26.438 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.117000000000004ms 200 text/css
2019-11-07 14:24:26.438 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:26.438 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.1124ms 200 text/css
2019-11-07 14:24:26.438 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:26.438 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.930800000000005ms 200 text/css
2019-11-07 14:24:26.439 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:26.441 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:26.467 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:26.467 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.9779ms 200 text/css
2019-11-07 14:24:26.471 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:26.471 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.309000000000005ms 200 text/css
2019-11-07 14:24:26.472 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:26.478 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:26.515 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:26.515 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.447700000000005ms 200 text/css
2019-11-07 14:24:26.518 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:26.519 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 78.02940000000001ms 200 text/css
2019-11-07 14:24:26.528 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:26.528 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 50.534400000000005ms 200 text/css
2019-11-07 14:24:26.555 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:26.562 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:26.565 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:26.573 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:26.573 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.0572ms 200 text/css
2019-11-07 14:24:26.573 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:24:26.588 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:26.588 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.652800000000003ms 200 text/css
2019-11-07 14:24:26.590 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:26.590 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.3881ms 200 text/css
2019-11-07 14:24:26.601 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129466407  
2019-11-07 14:24:26.605 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:26.605 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:26.606 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:26.607 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:26.607 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:26.611 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:24:26.611 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.2959ms 200 font/woff2
2019-11-07 14:24:26.611 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:24:26.619 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 8.2714ms.
2019-11-07 14:24:26.619 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 13.606900000000001ms
2019-11-07 14:24:26.619 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:26.619 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.1755ms 200 text/html; charset=utf-8
2019-11-07 14:24:27.045 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:27.045 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:27.045 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.538ms 404 
2019-11-07 14:24:27.045 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6556000000000001ms 404 
2019-11-07 14:24:27.063 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:27.063 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.42960000000000004ms 404 
2019-11-07 14:24:27.073 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:27.073 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3869ms 404 
2019-11-07 14:24:34.108 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:24:34.109 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:34.109 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:34.109 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:34.109 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:34.110 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:34.112 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:24:34.113 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 1.7343000000000002ms.
2019-11-07 14:24:34.114 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 4.7061ms
2019-11-07 14:24:34.114 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:24:34.114 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.7865ms 200 text/html; charset=utf-8
2019-11-07 14:24:34.119 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7727ms 200 text/css
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:24:34.120 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3416ms 200 application/javascript
2019-11-07 14:24:34.123 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:24:34.134 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:34.134 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.2673ms 200 text/css
2019-11-07 14:24:34.137 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:24:34.137 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.666800000000002ms 200 application/javascript
2019-11-07 14:24:34.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:34.139 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:34.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.46390000000000003ms 200 text/css
2019-11-07 14:24:34.139 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:24:34.142 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:24:34.142 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0466ms 200 application/javascript
2019-11-07 14:24:34.145 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:24:34.145 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.238400000000002ms 200 application/javascript
2019-11-07 14:24:34.152 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.307500000000005ms 200 text/css
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2912ms 200 text/css
2019-11-07 14:24:34.154 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:34.155 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:34.155 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2817ms 200 text/css
2019-11-07 14:24:34.160 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:24:34.160 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.5519ms 200 application/javascript
2019-11-07 14:24:34.164 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:34.164 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.6029ms 200 text/css
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6486000000000001ms 200 text/css
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:24:34.251 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7573000000000001ms 200 text/css
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.921ms 200 text/css
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3877000000000002ms 200 text/css
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:24:34.252 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7001000000000001ms 200 text/css
2019-11-07 14:24:34.253 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:34.253 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:34.253 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:34.253 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4768ms 200 text/css
2019-11-07 14:24:34.256 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:34.256 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3400000000000003ms 200 text/css
2019-11-07 14:24:34.257 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:24:34.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.059ms 200 text/css
2019-11-07 14:24:34.257 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:34.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:34.259 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:34.259 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.40750000000000003ms 200 text/css
2019-11-07 14:24:34.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:24:34.260 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:34.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3791ms 200 text/css
2019-11-07 14:24:34.260 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:24:34.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:24:34.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7259ms 200 text/css
2019-11-07 14:24:34.261 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:24:34.261 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5386000000000001ms 200 text/css
2019-11-07 14:24:34.264 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:24:34.265 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:24:34.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5163ms 200 text/css
2019-11-07 14:24:34.265 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:24:34.267 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:24:34.267 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0874ms 200 text/css
2019-11-07 14:24:34.369 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:24:34.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:24:34.372 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2995ms 200 font/woff2
2019-11-07 14:24:34.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:34.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:24:34.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4385ms 404 
2019-11-07 14:24:34.380 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.43410000000000004ms 404 
2019-11-07 14:24:34.387 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129474242  
2019-11-07 14:24:34.388 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:34.388 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:34.388 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:34.391 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:34.392 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:24:34.394 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:24:34.398 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.9649ms.
2019-11-07 14:24:34.398 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 10.4323ms
2019-11-07 14:24:34.398 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:24:34.399 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.8449ms 200 text/html; charset=utf-8
2019-11-07 14:24:34.457 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:34.458 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2821ms 404 
2019-11-07 14:24:34.462 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:24:34.463 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2753ms 404 
2019-11-07 14:24:47.879 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129474243  
2019-11-07 14:24:47.880 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:47.880 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:24:47.880 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:47.881 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:47.882 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:24:47.885 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:24:47.887 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.7355ms.
2019-11-07 14:24:47.887 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 7.1459ms
2019-11-07 14:24:47.887 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:24:47.887 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.3774ms 200 text/html; charset=utf-8
2019-11-07 14:24:47.911 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129474244  
2019-11-07 14:24:47.911 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:24:47.911 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:24:47.911 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:24:47.912 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:24:47.912 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:24:47.915 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:24:47.918 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:24:47.920 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.8809ms.
2019-11-07 14:24:47.920 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 8.699ms
2019-11-07 14:24:47.920 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:24:47.920 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.3472ms 200 text/html; charset=utf-8
2019-11-07 14:25:18.334 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.340 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.340 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.340 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.340 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.340 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.340 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.341 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.341 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.341 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.341 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.341 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.342 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.342 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.342 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.342 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.342 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.343 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.343 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 14:25:18.369 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:25:18.559 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 14:25:18.609 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 14:25:18.746 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 14:25:18.942 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 14:25:18.942 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 14:25:18.942 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 14:25:18.953 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:25:18.963 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 14:25:19.025 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:25:19.026 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:25:19.046 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:25:19.052 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:25:19.116 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:25:19.226 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:25:19.351 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 127.9201ms.
2019-11-07 14:25:19.353 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 306.66220000000004ms
2019-11-07 14:25:19.356 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:25:19.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:25:19.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:25:19.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:25:19.358 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:25:19.358 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:25:19.365 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:25:19.365 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:25:19.365 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:25:19.366 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.1973ms 200 text/css
2019-11-07 14:25:19.366 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.9062ms 200 text/css
2019-11-07 14:25:19.367 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.1201ms 200 text/css
2019-11-07 14:25:19.370 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 417.75640000000004ms 200 text/html; charset=utf-8
2019-11-07 14:25:19.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:25:19.371 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:25:19.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.4894ms 200 text/css
2019-11-07 14:25:19.371 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.363000000000001ms 200 application/javascript
2019-11-07 14:25:19.375 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:25:19.375 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:25:19.375 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:25:19.375 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:25:19.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9181000000000001ms 200 text/css
2019-11-07 14:25:19.377 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8988ms 200 text/css
2019-11-07 14:25:19.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:25:19.379 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:25:19.379 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8015ms 200 application/javascript
2019-11-07 14:25:19.384 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:25:19.399 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:25:19.400 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:25:19.402 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2092ms 200 application/javascript
2019-11-07 14:25:19.404 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:25:19.404 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.962400000000002ms 200 text/css
2019-11-07 14:25:19.407 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:25:19.413 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:25:19.416 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:25:19.416 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.2564ms 200 application/javascript
2019-11-07 14:25:19.418 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:25:19.418 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.9336ms 200 application/javascript
2019-11-07 14:25:19.477 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:25:19.478 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:25:19.478 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:25:19.478 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4198ms 200 text/css
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1392ms 200 text/css
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3578ms 200 text/css
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:25:19.479 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5372000000000001ms 200 text/css
2019-11-07 14:25:19.481 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:25:19.481 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.7015ms 200 text/css
2019-11-07 14:25:19.488 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:25:19.488 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:25:19.489 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:25:19.489 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4808ms 200 text/css
2019-11-07 14:25:19.489 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:25:19.489 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.7379ms 200 text/css
2019-11-07 14:25:19.489 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:25:19.489 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1054000000000002ms 200 text/css
2019-11-07 14:25:19.491 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:25:19.491 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:25:19.491 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:25:19.491 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:25:19.491 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.512ms 200 text/css
2019-11-07 14:25:19.492 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:25:19.492 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:25:19.492 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.367ms 200 text/css
2019-11-07 14:25:19.492 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:25:19.492 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3876ms 200 text/css
2019-11-07 14:25:19.491 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:25:19.495 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:25:19.496 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.597300000000001ms 200 text/css
2019-11-07 14:25:19.496 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:25:19.496 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.7178ms 200 text/css
2019-11-07 14:25:19.505 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:25:19.506 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:25:19.506 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3249ms 200 text/css
2019-11-07 14:25:19.601 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:25:19.605 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:25:19.605 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9689000000000005ms 200 font/woff2
2019-11-07 14:25:19.632 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:25:19.637 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129519460  
2019-11-07 14:25:19.640 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:25:19.641 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.4198ms 404 
2019-11-07 14:25:19.641 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8402000000000001ms 404 
2019-11-07 14:25:19.643 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:25:19.644 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:25:19.666 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:25:19.722 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:25:19.729 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:25:19.734 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:25:19.765 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:25:19.767 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6883ms 404 
2019-11-07 14:25:19.772 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:25:19.772 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.33680000000000004ms 404 
2019-11-07 14:25:19.805 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 71.5702ms.
2019-11-07 14:25:19.805 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 138.7237ms
2019-11-07 14:25:19.805 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:25:19.805 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 167.948ms 200 text/html; charset=utf-8
2019-11-07 14:25:20.986 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129519461  
2019-11-07 14:25:21.003 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:25:21.004 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:25:21.011 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:25:21.016 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:25:21.042 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:25:21.048 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:25:21.093 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 46.1884ms.
2019-11-07 14:25:21.093 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 82.32010000000001ms
2019-11-07 14:25:21.093 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:25:21.094 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.6567ms 200 text/html; charset=utf-8
2019-11-07 14:25:21.155 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129519462  
2019-11-07 14:25:21.157 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:25:21.157 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:25:21.162 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:25:21.167 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:25:21.207 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:25:21.251 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:25:21.263 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:25:21.272 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 9.2405ms.
2019-11-07 14:25:21.272 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 109.88390000000001ms
2019-11-07 14:25:21.272 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:25:21.272 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 116.77090000000001ms 200 text/html; charset=utf-8
2019-11-07 14:29:25.700 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex  
2019-11-07 14:29:25.703 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:29:25.703 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:29:25.704 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:29:25.705 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:29:25.707 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:29:25.712 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 14:29:25.716 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 4.8933ms.
2019-11-07 14:29:25.716 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.Index (CateringPro) in 12.5188ms
2019-11-07 14:29:25.717 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.Index (CateringPro)'
2019-11-07 14:29:25.717 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.6518ms 200 text/html; charset=utf-8
2019-11-07 14:29:25.724 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-11-07 14:29:25.724 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:29:25.725 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:29:25.725 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:29:25.725 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-11-07 14:29:25.726 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:29:25.726 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:29:25.726 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1059ms 200 text/css
2019-11-07 14:29:25.726 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0866000000000002ms 200 text/css
2019-11-07 14:29:25.726 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-11-07 14:29:25.726 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0717ms 200 application/javascript
2019-11-07 14:29:25.727 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:29:25.727 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4768000000000003ms 200 text/css
2019-11-07 14:29:25.728 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-11-07 14:29:25.728 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.1582ms 200 application/javascript
2019-11-07 14:29:25.731 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:29:25.731 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5454ms 200 text/css
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-11-07 14:29:25.732 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4715ms 200 application/javascript
2019-11-07 14:29:25.734 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:29:25.734 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8005ms 200 text/css
2019-11-07 14:29:25.738 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery-ui.js  
2019-11-07 14:29:25.738 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:29:25.738 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.2834ms 200 text/css
2019-11-07 14:29:25.746 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery-ui.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery-ui.js'
2019-11-07 14:29:25.746 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.1823ms 200 application/javascript
2019-11-07 14:29:25.747 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=VIllxICRF0LvVpceUAcBe_HsrWO_6NBKsXchWYiaN0E  
2019-11-07 14:29:25.751 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-11-07 14:29:25.751 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6636ms 200 application/javascript
2019-11-07 14:29:25.761 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:29:25.762 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.9798ms 200 text/css
2019-11-07 14:29:25.847 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:29:25.847 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:29:25.847 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/jquery-ui.css  
2019-11-07 14:29:25.848 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:29:25.848 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:29:25.849 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:29:25.849 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.1756ms 200 text/css
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9468ms 200 text/css
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6689000000000003ms 200 text/css
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/jquery-ui.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\jquery-ui.css'
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1301ms 200 text/css
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:29:25.850 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6248ms 200 text/css
2019-11-07 14:29:25.852 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:29:25.852 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3456ms 200 text/css
2019-11-07 14:29:25.853 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:29:25.854 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-11-07 14:29:25.855 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:29:25.856 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-11-07 14:29:25.856 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:29:25.856 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-11-07 14:29:25.856 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.8036000000000003ms 200 text/css
2019-11-07 14:29:25.856 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5515000000000003ms 200 text/css
2019-11-07 14:29:25.857 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:29:25.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8478ms 200 text/css
2019-11-07 14:29:25.857 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-11-07 14:29:25.859 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-11-07 14:29:25.859 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4080000000000004ms 200 text/css
2019-11-07 14:29:25.859 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-11-07 14:29:25.861 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-11-07 14:29:25.861 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.3245000000000005ms 200 text/css
2019-11-07 14:29:25.861 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 14:29:25.862 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-11-07 14:29:25.862 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6609ms 200 text/css
2019-11-07 14:29:25.868 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-11-07 14:29:25.868 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.016ms 200 text/css
2019-11-07 14:29:25.869 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-11-07 14:29:25.870 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-11-07 14:29:25.870 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9944000000000001ms 200 text/css
2019-11-07 14:29:25.948 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-11-07 14:29:25.951 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-11-07 14:29:25.951 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6921000000000004ms 200 font/woff2
2019-11-07 14:29:25.969 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129765839  
2019-11-07 14:29:25.971 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:29:25.971 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:29:25.971 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:29:25.973 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:29:25.974 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:29:25.975 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:29:25.979 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.7497000000000003ms.
2019-11-07 14:29:25.979 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 7.6242ms
2019-11-07 14:29:25.979 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:29:25.979 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.958ms 200 text/html; charset=utf-8
2019-11-07 14:29:26.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:29:26.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-11-07 14:29:26.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3725ms 404 
2019-11-07 14:29:26.020 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4541ms 404 
2019-11-07 14:29:26.028 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:29:26.028 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.38470000000000004ms 404 
2019-11-07 14:29:26.035 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-11-07 14:29:26.036 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4333ms 404 
2019-11-07 14:29:27.788 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditModal/1?_=1573129765840  
2019-11-07 14:29:27.789 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:29:27.789 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:29:27.790 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:29:27.791 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:29:27.793 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 14:29:27.795 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-11-07 14:29:27.798 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 2.4191000000000003ms.
2019-11-07 14:29:27.798 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 7.938700000000001ms
2019-11-07 14:29:27.798 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:29:27.798 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.4136ms 200 text/html; charset=utf-8
2019-11-07 14:29:27.820 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/EditDishes/1?_=1573129765841  
2019-11-07 14:29:27.820 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:29:27.821 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:29:27.821 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDishes", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditDishes(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:29:27.821 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:29:27.822 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[ComplexId])
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__id_1) AND @__id_1 IS NOT NULL)
2019-11-07 14:29:27.825 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id] AS [Value], [d].[Name] AS [Text]
FROM [Dishes] AS [d]
WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [d].[Name]
2019-11-07 14:29:27.828 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditDishes.
2019-11-07 14:29:27.830 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.1987ms.
2019-11-07 14:29:27.830 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditDishes (CateringPro) in 8.949300000000001ms
2019-11-07 14:29:27.830 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditDishes (CateringPro)'
2019-11-07 14:29:27.830 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.964400000000001ms 200 text/html; charset=utf-8
2019-11-07 14:29:34.480 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Complex/EditModal/1 application/x-www-form-urlencoded; charset=UTF-8 313
2019-11-07 14:29:34.482 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:29:34.482 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:29:34.516 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(Int32, CateringPro.Models.Complex, System.Collections.Generic.List`1[System.String]) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:29:34.533 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:29:34.631 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 100), @p2='?' (DbType = Decimal)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Complex] SET [CompanyId] = @p0, [Name] = @p1, [Price] = @p2
WHERE [Id] = @p3;
SELECT @@ROWCOUNT;
2019-11-07 14:29:34.660 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32), @__complex_Id_1='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[ComplexId], [d].[CompanyId]
FROM [DishComplex] AS [d]
WHERE (([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL) AND (([d].[DishId] = @__complex_Id_1) AND @__complex_Id_1 IS NOT NULL)
2019-11-07 14:29:34.709 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DishComplex] ([DishId], [ComplexId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-11-07 14:29:34.718 +02:00 [Error] Microsoft.EntityFrameworkCore.Database.Command: Failed executing DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DishComplex] ([DishId], [ComplexId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-11-07 14:29:34.759 +02:00 [Error] Microsoft.EntityFrameworkCore.Update: An exception occurred in the database while saving changes for context type 'CateringPro.Data.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_DishComplex'. Cannot insert duplicate key in object 'dbo.DishComplex'. The duplicate key value is (3, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:9da607c1-6c99-44d6-9b2e-e3e6089f8aff
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_DishComplex'. Cannot insert duplicate key in object 'dbo.DishComplex'. The duplicate key value is (3, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:9da607c1-6c99-44d6-9b2e-e3e6089f8aff
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2019-11-07 14:29:34.776 +02:00 [Error] CateringPro.Models.CompanyUser: UpdateComplexDishes
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while updating the entries. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Violation of PRIMARY KEY constraint 'PK_DishComplex'. Cannot insert duplicate key in object 'dbo.DishComplex'. The duplicate key value is (3, 1).
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__164_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:9da607c1-6c99-44d6-9b2e-e3e6089f8aff
Error Number:2627,State:1,Class:14
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(DbContext _, ValueTuple`2 parameters, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at CateringPro.Repositories.ComplexRepository.UpdateComplexDishes(Complex complex, List`1 dishes, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\ComplexRepository.cs:line 50
2019-11-07 14:29:34.778 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType7`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-11-07 14:29:34.783 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.EditModal (CateringPro) in 267.3073ms
2019-11-07 14:29:34.783 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.EditModal (CateringPro)'
2019-11-07 14:29:34.783 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 303.9298ms 200 application/json; charset=utf-8
2019-11-07 14:29:34.793 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Complex/ListItems?searchcriteria=&_=1573129765842  
2019-11-07 14:29:34.793 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 14:29:34.793 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:29:34.793 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Complex"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.ComplexController (CateringPro).
2019-11-07 14:29:34.794 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 14:29:34.795 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[CompanyId], [c].[Name], [c].[Price]
FROM [Complex] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-11-07 14:29:34.795 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-11-07 14:29:34.799 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 3.3176ms.
2019-11-07 14:29:34.799 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.ComplexController.ListItems (CateringPro) in 5.243ms
2019-11-07 14:29:34.799 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.ComplexController.ListItems (CateringPro)'
2019-11-07 14:29:34.799 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.2819ms 200 text/html; charset=utf-8
2019-11-07 15:00:14.870 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.902 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.905 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.906 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.908 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.910 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.912 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.913 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.915 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.916 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.918 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.920 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.922 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.923 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.926 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.928 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.930 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.933 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.935 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:00:14.969 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:00:15.287 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 15:00:15.353 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 15:00:15.472 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 15:00:15.736 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 15:00:15.741 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 15:00:15.743 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 15:00:15.757 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 15:00:15.766 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 15:00:15.837 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:00:15.915 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 15:00:16.059 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-11-07 15:00:16.094 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-11-07 15:00:16.106 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-11-07 15:00:16.120 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-11-07 15:00:16.131 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 15:00:16.159 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 15:00:16.178 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 15:00:16.330 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 154.3725ms.
2019-11-07 15:00:16.342 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 172.2536ms
2019-11-07 15:00:16.345 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 15:00:16.347 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-11-07 15:00:16.357 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 599.3515ms 200 text/html; charset=utf-8
2019-11-07 15:00:16.358 +02:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-11-07 15:00:16.369 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.6145ms 304 text/css
2019-11-07 15:00:26.199 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 15:00:26.220 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 15:00:26.223 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 15:00:26.231 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 15:00:26.265 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:00:26.272 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 15:00:26.286 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 15:00:26.343 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 15:00:26.450 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.501 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.507 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.596 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.641 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.647 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.656 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.661 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.666 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.671 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.675 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.680 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.687 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.693 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.698 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.703 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.709 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.714 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.722 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.726 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.732 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.737 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.742 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.746 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.752 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.759 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.764 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:00:26.768 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.773 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.779 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:00:26.922 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 689.1976000000001ms
2019-11-07 15:00:26.925 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 15:00:26.990 +02:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.ArgumentOutOfRangeException: The added or subtracted value results in an un-representable DateTime. (Parameter 'value')
   at System.DateTime.AddTicks(Int64 value)
   at System.DateTime.Add(Double value, Int32 scale)
   at System.DateTime.AddDays(Double value)
   at CateringPro.Repositories.UserDayDishesRepository.IsAllowDayEdit(DateTime dt, Int32 companyid) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Repositories\UserDayDishesRepository.cs:line 36
   at CateringPro.ViewComponents.UserDayComplexComponent.InvokeAsync(DateTime daydate) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Components\UserDayComplexComponent.cs:line 32
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.InvokeAsyncCore(ObjectMethodExecutor executor, ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.InvokeAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.InvokeCoreAsync(ViewComponentDescriptor descriptor, Object arguments)
   at AspNetCore.Views_UserDayDishes_Index.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\UserDayDishes\Index.cshtml:line 70
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-11-07 15:00:27.060 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 862.4362ms 500 text/html; charset=utf-8
2019-11-07 15:01:37.062 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Complex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.070 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'InitialQuantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.072 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.075 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'Consignment'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.077 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.079 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'ReadyWeight' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.081 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Proportion' on entity type 'DishIngredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.083 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.085 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.087 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Quantity' on entity type 'DocLines'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.089 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Amount' on entity type 'Docs'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.091 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'StockValue' on entity type 'Ingredients'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.093 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.095 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.098 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.101 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Total' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.103 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'TotalPaid' on entity type 'UserDay'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.105 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayComplex'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.107 +02:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'UserDayDish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-11-07 15:01:37.148 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:01:37.520 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-11-07 15:01:37.613 +02:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-11-07 15:01:37.754 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-11-07 15:01:38.063 +02:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-11-07 15:01:38.068 +02:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-11-07 15:01:38.069 +02:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-11-07 15:01:38.083 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-11-07 15:01:38.091 +02:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-11-07 15:01:38.145 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 15:01:38.175 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-11-07 15:01:38.194 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 15:01:38.348 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 156.505ms.
2019-11-07 15:01:38.356 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 174.3449ms
2019-11-07 15:01:38.358 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-11-07 15:01:38.365 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 280.2258ms 200 text/html; charset=utf-8
2019-11-07 15:01:41.738 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-11-07 15:01:41.751 +02:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-11-07 15:01:41.754 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 15:01:41.766 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-11-07 15:01:41.774 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:01:41.901 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[MenuType], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 15:01:42.083 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-11-07 15:01:42.155 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[OrderLeadTimeH], [c].[OrderThresholdTimeH], [c].[Phone], [c].[PictureId], [c].[StampPictureId], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 15:02:17.157 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:17.208 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:17.214 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.706 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.753 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.760 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.769 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.775 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.780 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.787 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.791 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.796 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.803 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.807 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.812 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.816 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.821 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.826 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.835 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.840 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.845 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.850 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.855 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.859 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.865 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.868 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.873 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.877 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.882 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.887 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.893 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.898 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.903 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.907 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.912 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.916 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.922 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.926 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.929 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_0='?' (DbType = Date), @__companyid_1='?' (DbType = Int32), @__userId_2='?' (Size = 450), @__companyId_4='?' (DbType = Int32), @__companyId_5='?' (DbType = Int32), @__companyId_3='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Name], [t0].[Quantity], [c].[Price], CASE
    WHEN (([t0].[Date] = @__daydate_0) AND ([t0].[Date] IS NOT NULL AND @__daydate_0 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_0 IS NULL) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[Name], [t3].[PictureId], [t3].[Description], [t3].[DishId], [t3].[ComplexId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
FROM [Complex] AS [c]
INNER JOIN (
    SELECT [d].[Date], [d].[ComplexId], [d].[CompanyId]
    FROM [DayComplex] AS [d]
    WHERE (([d].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL) AND (([d].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t] ON [c].[Id] = [t].[ComplexId]
LEFT JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[ComplexId], [u].[CompanyId], [u].[Price], [u].[Quantity]
    FROM [UserDayComplex] AS [u]
    WHERE ((([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL) AND (([u].[Date] = @__daydate_0) AND @__daydate_0 IS NOT NULL)) AND (([u].[CompanyId] = @__companyid_1) AND @__companyid_1 IS NOT NULL)
) AS [t0] ON [t].[ComplexId] = [t0].[ComplexId]
LEFT JOIN (
    SELECT [d0].[Id], [d0].[Name], [d0].[PictureId], [d0].[Description], [t1].[DishId], [t1].[ComplexId], [t2].[Name] AS [Name0], [t2].[DishId] AS [DishId0], [t2].[IngredientId], [t2].[Id] AS [Id0]
    FROM [Dishes] AS [d0]
    INNER JOIN (
        SELECT [d1].[DishId], [d1].[ComplexId], [d1].[CompanyId]
        FROM [DishComplex] AS [d1]
        WHERE ([d1].[CompanyId] = @__companyId_4) AND @__companyId_4 IS NOT NULL
    ) AS [t1] ON [d0].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d2].[DishId], [d2].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i] ON [d2].[IngredientId] = [i].[Id]
        WHERE ([d2].[CompanyId] = @__companyId_5) AND @__companyId_5 IS NOT NULL
    ) AS [t2] ON [d0].[Id] = [t2].[DishId]
    WHERE ([d0].[CompanyId] = @__companyId_3) AND @__companyId_3 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[ComplexId]
ORDER BY [c].[Id], [t].[Date], [t].[ComplexId], [t].[CompanyId], [t3].[Id], [t3].[DishId], [t3].[ComplexId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0]
2019-11-07 15:02:21.932 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.937 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.941 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t5].[Id], [t5].[Name], [t5].[c], [t5].[CategoriesId], [t5].[Description], [t5].[PictureId], [t5].[c0], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[Name0], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[Name1], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[Name2], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[Name3], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Price]
        ELSE [d].[Price]
    END AS [c], [d].[CategoriesId], [d].[Description], [d].[PictureId], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c0], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1], [t3].[Name] AS [Name2], [t3].[DishId] AS [DishId2], [t3].[IngredientId] AS [IngredientId1], [t3].[Id] AS [Id2], [t4].[Name] AS [Name3], [t4].[DishId] AS [DishId3], [t4].[IngredientId] AS [IngredientId2], [t4].[Id] AS [Id3]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[ComplexId], [u].[IsComplex], [u].[Price], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    LEFT JOIN (
        SELECT [i1].[Name], [d3].[DishId], [d3].[IngredientId], [i1].[Id]
        FROM [DishIngredients] AS [d3]
        INNER JOIN [Ingredients] AS [i1] ON [d3].[IngredientId] = [i1].[Id]
    ) AS [t3] ON [d].[Id] = [t3].[DishId]
    LEFT JOIN (
        SELECT [i2].[Name], [d4].[DishId], [d4].[IngredientId], [i2].[Id]
        FROM [DishIngredients] AS [d4]
        INNER JOIN [Ingredients] AS [i2] ON [d4].[IngredientId] = [i2].[Id]
    ) AS [t4] ON [d].[Id] = [t4].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t5] ON [c].[Id] = [t5].[CategoriesId]
ORDER BY [c].[Id], [t5].[Id], [t5].[Date], [t5].[DishId], [t5].[CompanyId], [t5].[DishId0], [t5].[IngredientId], [t5].[Id0], [t5].[DishId1], [t5].[IngredientId0], [t5].[Id1], [t5].[DishId2], [t5].[IngredientId1], [t5].[Id2], [t5].[DishId3], [t5].[IngredientId2], [t5].[Id3]
2019-11-07 15:02:21.957 +02:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 39875.9043ms.
2019-11-07 15:02:21.966 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 40191.714700000004ms
2019-11-07 15:02:21.969 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=50&height=50  
2019-11-07 15:02:21.971 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/6?width=50&height=50  
2019-11-07 15:02:21.974 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-11-07 15:02:21.982 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40245.2398ms 200 text/html; charset=utf-8
2019-11-07 15:02:21.994 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 15:02:21.996 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 15:02:22.002 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 15:02:22.004 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-11-07 15:02:22.162 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:02:22.164 +02:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-11-07 15:02:22.170 +02:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-11-07 15:02:22.197 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 15:02:22.207 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 202.1647ms
2019-11-07 15:02:22.209 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 15:02:22.210 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 242.62220000000002ms 200 image/jpeg
2019-11-07 15:02:22.436 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-11-07 15:02:22.439 +02:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 432.41560000000004ms
2019-11-07 15:02:22.441 +02:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-11-07 15:02:22.443 +02:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 474.822ms 200 image/jpeg
