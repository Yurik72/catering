2019-10-21 08:34:49.678 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 08:34:49.687 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 08:34:49.689 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 08:34:49.691 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 08:34:49.720 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 08:34:50.100 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 08:34:50.167 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 08:34:50.303 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 08:34:50.710 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 08:34:50.713 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 08:34:50.715 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 08:34:50.764 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 08:34:50.771 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 08:34:50.851 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 08:34:50.941 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 08:34:51.084 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 08:34:51.119 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 08:34:51.132 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 08:34:51.145 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 08:34:51.155 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 08:34:51.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 08:34:51.197 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 08:34:51.357 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 161.3467ms.
2019-10-21 08:34:51.367 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 178.35080000000002ms
2019-10-21 08:34:51.370 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 08:34:51.372 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 08:34:51.373 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide0.jpg  
2019-10-21 08:34:51.377 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 08:34:51.381 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 08:34:51.387 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide1.jpg  
2019-10-21 08:34:51.396 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-10-21 08:34:51.397 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-10-21 08:34:51.399 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /images/slide0.jpg was not modified
2019-10-21 08:34:51.401 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 08:34:51.403 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /images/slide1.jpg was not modified
2019-10-21 08:34:51.405 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 632.1379000000001ms 200 text/html; charset=utf-8
2019-10-21 08:34:51.410 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.0497ms 304 application/javascript
2019-10-21 08:34:51.412 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.888400000000004ms 304 image/jpeg
2019-10-21 08:34:51.414 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.7289ms 304 text/css
2019-10-21 08:34:51.416 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.730000000000004ms 304 application/javascript
2019-10-21 08:34:51.417 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide2.jpg  
2019-10-21 08:34:51.419 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.1648ms 304 image/jpeg
2019-10-21 08:34:51.421 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /images/slide2.jpg was not modified
2019-10-21 08:34:51.424 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.0558ms 304 image/jpeg
2019-10-21 08:34:53.811 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 08:34:53.822 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 08:34:53.829 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 08:34:53.861 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 08:34:53.906 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 08:34:53.981 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 08:34:53.997 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 15.367500000000001ms.
2019-10-21 08:34:54.003 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 170.8178ms
2019-10-21 08:34:54.006 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 08:34:54.010 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 201.8604ms 200 text/html; charset=utf-8
2019-10-21 08:34:54.173 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571636094034  
2019-10-21 08:34:54.189 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 08:34:54.197 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 08:34:54.208 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 08:34:54.211 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 08:34:54.213 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 08:34:54.223 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 08:34:54.255 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 08:34:54.266 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 08:34:54.395 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 129.6783ms.
2019-10-21 08:34:54.398 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 198.2744ms
2019-10-21 08:34:54.399 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 08:34:54.401 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 228.29850000000002ms 200 text/html; charset=utf-8
2019-10-21 08:34:54.406 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 08:34:54.408 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 08:34:54.411 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 08:34:54.413 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 08:34:54.420 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 08:34:54.422 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 08:34:54.500 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 08:34:54.502 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 08:34:54.509 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 08:34:54.531 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 08:34:54.535 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 113.12920000000001ms
2019-10-21 08:34:54.538 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 08:34:54.540 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 133.1722ms 200 image/jpeg
2019-10-21 08:34:54.782 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 08:34:54.785 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 360.856ms
2019-10-21 08:34:54.788 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 08:34:54.790 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 383.4006ms 200 image/jpeg
2019-10-21 09:19:36.276 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:19:36.288 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:19:36.290 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:19:36.292 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:19:36.335 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:19:36.756 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:19:36.860 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:19:37.019 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:19:37.233 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:19:37.242 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:19:37.244 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:19:37.261 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:19:37.270 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:19:37.334 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:19:37.369 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:19:37.397 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:19:37.538 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 140.1344ms.
2019-10-21 09:19:37.547 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 170.1021ms
2019-10-21 09:19:37.552 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:19:37.558 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 296.51820000000004ms 200 text/html; charset=utf-8
2019-10-21 09:19:39.182 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:19:39.188 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:19:39.192 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:19:39.203 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:19:39.242 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 39.7502ms.
2019-10-21 09:19:39.244 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 50.2517ms
2019-10-21 09:19:39.247 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:19:39.249 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 67.7973ms 200 text/html; charset=utf-8
2019-10-21 09:19:41.231 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:19:41.241 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:19:41.251 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:19:41.286 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:19:41.293 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:19:41.378 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:19:41.530 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:19:41.581 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:19:41.614 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:19:41.627 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:19:41.644 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:19:41.655 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:19:41.664 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:19:41.677 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 424.3589ms
2019-10-21 09:19:41.679 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:19:41.684 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 454.50320000000005ms 200 application/json; charset=utf-8
2019-10-21 09:19:41.695 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:19:41.702 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:19:41.706 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:19:41.710 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:19:41.718 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.650400000000001ms.
2019-10-21 09:19:41.729 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 12.8678ms
2019-10-21 09:19:41.731 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:19:41.734 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.368300000000005ms 200 text/html; charset=utf-8
2019-10-21 09:19:43.760 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:19:43.766 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:19:43.774 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:19:43.778 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:19:43.831 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:19:43.874 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.890 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.894 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.898 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.902 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.906 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.910 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:19:43.920 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 140.2329ms.
2019-10-21 09:19:43.923 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 146.6439ms
2019-10-21 09:19:43.926 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:19:43.929 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 169.9737ms 200 text/html; charset=utf-8
2019-10-21 09:19:43.931 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 09:19:43.939 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-10-21 09:19:43.943 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.183ms 304 application/javascript
2019-10-21 09:20:53.494 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:20:53.504 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:20:53.507 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:20:53.509 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:20:53.541 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:20:53.871 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:20:53.939 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:20:54.081 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:20:54.344 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:20:54.352 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:20:54.353 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:20:54.371 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:20:54.380 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:20:54.428 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:20:54.458 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:20:54.489 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:20:54.660 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 175.3281ms.
2019-10-21 09:20:54.672 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 202.7915ms
2019-10-21 09:20:54.674 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:20:54.680 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 309.5172ms 200 text/html; charset=utf-8
2019-10-21 09:20:56.360 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:20:56.371 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:20:56.376 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:20:56.387 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:20:56.423 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 36.6809ms.
2019-10-21 09:20:56.425 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 47.2975ms
2019-10-21 09:20:56.427 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:20:56.430 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 71.69890000000001ms 200 text/html; charset=utf-8
2019-10-21 09:20:58.622 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:20:58.633 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:20:58.647 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:20:58.684 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:20:58.690 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:20:58.781 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:20:58.959 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:20:59.007 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:20:59.047 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:20:59.058 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:20:59.074 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:20:59.086 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:20:59.096 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:20:59.115 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 460.62980000000005ms
2019-10-21 09:20:59.122 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:20:59.132 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 510.4103ms 200 application/json; charset=utf-8
2019-10-21 09:20:59.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:20:59.155 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:20:59.160 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:20:59.166 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:20:59.182 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 11.4062ms.
2019-10-21 09:20:59.187 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 22.4174ms
2019-10-21 09:20:59.189 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:20:59.192 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.988ms 200 text/html; charset=utf-8
2019-10-21 09:21:00.995 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:21:01.000 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:21:01.008 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:21:01.013 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:21:01.064 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:21:01.105 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.121 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.125 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.129 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.132 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.135 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.139 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:21:01.148 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 135.92940000000002ms.
2019-10-21 09:21:01.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 139.63670000000002ms
2019-10-21 09:21:01.155 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:21:01.157 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 162.87460000000002ms 200 text/html; charset=utf-8
2019-10-21 09:21:10.682 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:21:10.680 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:21:10.683 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:21:10.691 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:21:10.693 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:21:10.695 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:21:10.720 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:21:10.726 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.4485ms 200 text/css
2019-10-21 09:21:10.728 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:21:10.731 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:21:10.733 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 52.135400000000004ms 200 text/css
2019-10-21 09:21:10.736 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 54.1625ms 200 text/css
2019-10-21 09:21:10.744 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:21:10.746 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:21:10.748 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:21:10.753 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:21:10.755 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:21:10.760 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 77.2425ms 200 text/css
2019-10-21 09:21:10.763 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 75.66460000000001ms 200 text/css
2019-10-21 09:21:10.767 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:21:10.770 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:21:10.773 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:21:10.774 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.4537ms 200 text/css
2019-10-21 09:21:10.778 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:21:10.781 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:21:10.786 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.723800000000004ms 200 text/css
2019-10-21 09:21:10.788 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:21:10.790 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.024300000000004ms 200 text/css
2019-10-21 09:21:10.793 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.6827ms 200 text/css
2019-10-21 09:21:10.795 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:21:10.798 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:21:10.799 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 85.4568ms 200 text/css
2019-10-21 09:21:10.804 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:21:10.802 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:21:10.807 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:21:10.811 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:21:10.814 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.524ms 200 text/css
2019-10-21 09:21:10.815 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.426300000000005ms 200 text/css
2019-10-21 09:21:10.820 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.5442ms 404 
2019-10-21 09:21:10.823 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.790000000000003ms 404 
2019-10-21 09:21:10.851 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:21:10.854 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2113ms 404 
2019-10-21 09:21:10.858 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:21:10.860 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2724ms 404 
2019-10-21 09:23:15.550 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:23:15.558 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:23:15.560 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:23:15.562 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:23:15.598 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:23:15.948 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:23:16.024 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:23:16.157 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:23:16.404 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:23:16.411 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:23:16.413 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:23:16.431 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:23:16.438 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:23:16.485 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:23:16.516 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:23:16.540 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:23:16.677 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 137.99710000000002ms.
2019-10-21 09:23:16.687 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 161.3537ms
2019-10-21 09:23:16.689 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:23:16.697 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 263.7591ms 200 text/html; charset=utf-8
2019-10-21 09:23:18.471 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:23:18.477 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:23:18.482 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:23:18.494 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:23:18.540 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 46.688700000000004ms.
2019-10-21 09:23:18.542 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 57.9942ms
2019-10-21 09:23:18.544 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:23:18.546 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 77.2128ms 200 text/html; charset=utf-8
2019-10-21 09:23:20.752 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:23:20.760 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:23:20.770 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:23:20.800 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:23:20.805 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:23:20.878 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:23:21.017 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:23:21.051 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:23:21.082 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:23:21.093 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:23:21.107 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:23:21.117 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:23:21.127 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:23:21.136 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 363.66970000000003ms
2019-10-21 09:23:21.138 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:23:21.143 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 392.4012ms 200 application/json; charset=utf-8
2019-10-21 09:23:21.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:23:21.159 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:23:21.161 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:23:21.166 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:23:21.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.3454ms.
2019-10-21 09:23:21.185 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 18.165100000000002ms
2019-10-21 09:23:21.187 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:23:21.189 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.563700000000004ms 200 text/html; charset=utf-8
2019-10-21 09:23:23.812 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:23:23.817 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:23:23.824 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:23:23.830 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:23:23.882 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:23:23.923 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.938 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.943 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.946 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.950 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.954 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.958 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:23:23.968 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 138.6789ms.
2019-10-21 09:23:23.972 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 144.7499ms
2019-10-21 09:23:23.975 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:23:23.980 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 164.9331ms 200 text/html; charset=utf-8
2019-10-21 09:24:05.949 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:24:05.954 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:24:05.958 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:24:05.960 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:24:05.964 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:24:05.966 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:24:05.982 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:24:05.985 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:24:05.987 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:24:05.992 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.9704ms 200 text/css
2019-10-21 09:24:06.002 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.7932ms 200 text/css
2019-10-21 09:24:06.006 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.623700000000003ms 200 text/css
2019-10-21 09:24:06.013 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:24:06.015 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:24:06.019 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:24:06.028 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:24:06.034 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:24:06.041 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 84.0402ms 200 text/css
2019-10-21 09:24:06.048 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:24:06.050 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 89.7304ms 200 text/css
2019-10-21 09:24:06.054 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:24:06.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.9932ms 200 text/css
2019-10-21 09:24:06.062 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.6026ms 200 text/css
2019-10-21 09:24:06.065 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:24:06.067 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:24:06.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:24:06.071 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.9821ms 200 text/css
2019-10-21 09:24:06.074 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 122.64070000000001ms 200 text/css
2019-10-21 09:24:06.076 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:24:06.082 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:24:06.085 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:24:06.089 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:24:06.092 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.2844ms 200 text/css
2019-10-21 09:24:06.095 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:24:06.098 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:24:06.100 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:24:06.102 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.3141ms 200 text/css
2019-10-21 09:24:06.105 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 51.8811ms 200 text/css
2019-10-21 09:24:06.109 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.5625ms 404 
2019-10-21 09:24:06.111 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.5853ms 404 
2019-10-21 09:24:06.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:24:06.146 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9438ms 404 
2019-10-21 09:24:06.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:24:06.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.5840000000000005ms 404 
2019-10-21 09:27:09.087 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:27:09.099 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:27:09.101 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:27:09.102 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:27:09.136 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:27:09.517 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:27:09.593 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:27:09.733 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:27:09.992 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:27:10.005 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:27:10.007 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:27:10.026 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:27:10.034 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:27:10.100 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:27:10.135 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:27:10.159 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:27:10.304 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 145.8701ms.
2019-10-21 09:27:10.316 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 170.37210000000002ms
2019-10-21 09:27:10.319 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:27:10.326 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 298.52500000000003ms 200 text/html; charset=utf-8
2019-10-21 09:27:20.536 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:27:20.542 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:27:20.547 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:27:20.567 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:27:20.629 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 67.6366ms.
2019-10-21 09:27:20.633 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 82.10220000000001ms
2019-10-21 09:27:20.640 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:27:20.646 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.9714ms 200 text/html; charset=utf-8
2019-10-21 09:27:22.959 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:27:22.968 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:27:22.977 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:27:23.009 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:27:23.015 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:27:23.092 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:27:23.235 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:27:23.274 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:27:23.307 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:27:23.318 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:27:23.333 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:27:23.343 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:27:23.353 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:27:23.362 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 383.35560000000004ms
2019-10-21 09:27:23.365 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:27:23.370 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 411.5509ms 200 application/json; charset=utf-8
2019-10-21 09:27:23.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:27:23.385 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:27:23.388 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:27:23.390 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:27:23.397 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.8142000000000005ms.
2019-10-21 09:27:23.404 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 9.7849ms
2019-10-21 09:27:23.407 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:27:23.410 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.3594ms 200 text/html; charset=utf-8
2019-10-21 09:27:25.039 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:27:25.045 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:27:25.054 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:27:25.059 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:27:25.110 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:27:25.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.168 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.172 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.176 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.180 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.183 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.187 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:27:25.196 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 138.26160000000002ms.
2019-10-21 09:27:25.202 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 143.321ms
2019-10-21 09:27:25.204 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:27:25.206 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 168.2404ms 200 text/html; charset=utf-8
2019-10-21 09:51:13.614 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:51:13.622 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:51:13.624 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:51:13.626 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:51:13.660 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:51:13.933 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:51:14.023 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:51:14.150 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:51:14.352 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:51:14.356 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:51:14.361 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:51:14.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:51:14.386 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:51:14.426 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:51:14.454 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:51:14.478 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:51:14.625 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 145.1856ms.
2019-10-21 09:51:14.631 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 171.81640000000002ms
2019-10-21 09:51:14.634 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:51:14.636 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide2.jpg  
2019-10-21 09:51:14.638 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:51:14.640 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide0.jpg  
2019-10-21 09:51:14.642 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/images/slide1.jpg  
2019-10-21 09:51:14.644 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/jquery-validation/dist/jquery.validate.js  
2019-10-21 09:51:14.649 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 271.5706ms 200 text/html; charset=utf-8
2019-10-21 09:51:14.673 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:51:14.675 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js  
2019-10-21 09:51:14.678 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.5857ms 200 text/css
2019-10-21 09:51:14.687 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 09:51:14.702 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide1.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide1.jpg'
2019-10-21 09:51:14.704 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide0.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide0.jpg'
2019-10-21 09:51:14.707 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/jquery-validation/dist/jquery.validate.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\jquery-validation\dist\jquery.validate.js'
2019-10-21 09:51:14.709 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\jquery-validation-unobtrusive\jquery.validate.unobtrusive.js'
2019-10-21 09:51:14.712 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 75.0076ms 200 application/javascript
2019-10-21 09:51:14.716 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 74.9955ms 200 image/jpeg
2019-10-21 09:51:14.718 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.1744ms 200 application/javascript
2019-10-21 09:51:14.723 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:51:14.725 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 75.0002ms 200 image/jpeg
2019-10-21 09:51:14.727 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 09:51:14.736 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:51:14.730 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 09:51:14.733 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 09:51:14.739 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.886900000000004ms 200 application/javascript
2019-10-21 09:51:14.741 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.3505ms 200 text/css
2019-10-21 09:51:14.744 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:51:14.746 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 09:51:14.750 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:51:14.752 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 09:51:14.755 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.8583ms 200 application/javascript
2019-10-21 09:51:14.759 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:51:14.761 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:51:14.763 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.207ms 200 text/css
2019-10-21 09:51:14.765 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:51:14.769 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.526200000000003ms 200 text/css
2019-10-21 09:51:14.770 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:51:14.773 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:51:14.775 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.097800000000001ms 200 text/css
2019-10-21 09:51:14.779 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:51:14.781 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.0273ms 200 text/css
2019-10-21 09:51:14.784 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/images/slide2.jpg'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\images\slide2.jpg'
2019-10-21 09:51:14.786 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 149.4323ms 200 image/jpeg
2019-10-21 09:51:14.801 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 09:51:14.803 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 56.188100000000006ms 200 application/javascript
2019-10-21 09:51:14.927 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 09:51:14.929 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 201.0507ms 200 application/javascript
2019-10-21 09:51:16.575 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:51:16.584 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:51:16.589 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:51:16.600 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:51:16.635 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 36.434000000000005ms.
2019-10-21 09:51:16.637 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 46.1909ms
2019-10-21 09:51:16.640 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:51:16.642 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 68.94500000000001ms 200 text/html; charset=utf-8
2019-10-21 09:51:19.011 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:51:19.019 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:51:19.030 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:51:19.063 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:51:19.068 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:51:19.147 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:51:19.278 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:51:19.313 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:51:19.351 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:51:19.366 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:51:19.384 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:51:19.399 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:51:19.411 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:51:19.424 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 390.5247ms
2019-10-21 09:51:19.427 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:51:19.432 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 421.432ms 200 application/json; charset=utf-8
2019-10-21 09:51:19.443 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:51:19.451 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:51:19.454 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:51:19.457 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:51:19.475 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.2714ms.
2019-10-21 09:51:19.481 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 21.732300000000002ms
2019-10-21 09:51:19.484 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:51:19.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.055800000000005ms 200 text/html; charset=utf-8
2019-10-21 09:51:20.852 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:51:20.858 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:51:20.866 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:51:20.870 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:51:20.919 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:51:20.962 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:20.976 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:20.981 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:20.984 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:20.988 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:20.992 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:20.996 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:51:21.002 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 133.5119ms.
2019-10-21 09:51:21.008 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 136.90630000000002ms
2019-10-21 09:51:21.010 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:51:21.012 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 09:51:21.015 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 164.3837ms 200 text/html; charset=utf-8
2019-10-21 09:51:21.047 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-10-21 09:51:21.050 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.0728ms 200 application/javascript
2019-10-21 09:51:25.555 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:51:25.558 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:51:25.561 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:51:25.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:51:25.566 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:51:25.569 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:51:25.581 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:51:25.579 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:51:25.587 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.0346ms 200 text/css
2019-10-21 09:51:25.590 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.9478ms 200 text/css
2019-10-21 09:51:25.593 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:51:25.598 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:51:25.600 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:51:25.603 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.2423ms 200 text/css
2019-10-21 09:51:25.607 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.6212ms 200 text/css
2019-10-21 09:51:25.612 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:51:25.610 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.6792ms 200 text/css
2019-10-21 09:51:25.615 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:51:25.617 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:51:25.621 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 65.20320000000001ms 200 text/css
2019-10-21 09:51:25.625 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:51:25.629 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:51:25.631 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:51:25.634 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:51:25.639 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:51:25.641 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.6946ms 200 text/css
2019-10-21 09:51:25.646 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:51:25.646 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:51:25.651 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:51:25.654 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.537100000000002ms 200 text/css
2019-10-21 09:51:25.656 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.4101ms 200 text/css
2019-10-21 09:51:25.660 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.0435ms 200 text/css
2019-10-21 09:51:25.662 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:51:25.664 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 65.0921ms 200 text/css
2019-10-21 09:51:25.668 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:51:25.670 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:51:25.673 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:51:25.675 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.0916ms 200 text/css
2019-10-21 09:51:25.679 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.6186ms 404 
2019-10-21 09:51:25.681 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.699200000000001ms 404 
2019-10-21 09:51:25.719 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:51:25.721 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5186ms 404 
2019-10-21 09:51:25.728 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:51:25.730 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6207000000000003ms 404 
2019-10-21 09:52:14.155 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 09:52:14.163 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 09:52:14.165 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 09:52:14.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 09:52:14.176 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:52:14.191 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:52:14.257 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.291 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.297 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.302 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.308 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.312 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.317 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.323 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.327 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.331 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.334 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.338 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.342 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.345 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 09:52:14.360 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 178.005ms.
2019-10-21 09:52:14.364 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 188.0275ms
2019-10-21 09:52:14.366 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:52:14.375 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 09:52:14.401 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:52:14.406 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:52:14.408 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 251.9635ms 200 text/html; charset=utf-8
2019-10-21 09:52:14.416 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:52:14.420 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:52:14.444 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:52:14.458 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 58.4003ms 200 text/css
2019-10-21 09:52:14.463 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:52:14.472 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.99390000000001ms 200 text/css
2019-10-21 09:52:14.473 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 09:52:14.480 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:52:14.482 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:52:14.486 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 78.52590000000001ms 200 text/css
2019-10-21 09:52:14.488 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 114.9072ms 200 text/css
2019-10-21 09:52:14.491 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:52:14.494 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 09:52:14.496 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 09:52:14.499 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 70.8104ms 200 application/javascript
2019-10-21 09:52:14.510 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 09:52:14.514 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 09:52:14.515 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:52:14.520 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:52:14.521 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.206900000000005ms 200 text/css
2019-10-21 09:52:14.524 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap-input-spinner.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap-input-spinner.js'
2019-10-21 09:52:14.527 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 115.25710000000001ms 200 text/css
2019-10-21 09:52:14.533 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.672500000000003ms 200 application/javascript
2019-10-21 09:52:14.536 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 09:52:14.538 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 09:52:14.547 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 60.926300000000005ms 200 application/javascript
2019-10-21 09:52:14.553 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 09:52:14.557 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.825ms 200 application/javascript
2019-10-21 09:52:14.563 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 09:52:14.567 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.610400000000002ms 200 application/javascript
2019-10-21 09:52:14.585 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:52:14.587 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:52:14.589 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:52:14.593 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:52:14.598 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:52:14.600 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:52:14.603 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:52:14.605 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.480600000000003ms 200 text/css
2019-10-21 09:52:14.607 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.622500000000002ms 200 text/css
2019-10-21 09:52:14.616 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:52:14.619 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:52:14.623 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:52:14.631 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.2731ms 200 text/css
2019-10-21 09:52:14.638 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:52:14.640 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.3508ms 200 text/css
2019-10-21 09:52:14.642 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:52:14.644 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.144000000000002ms 200 text/css
2019-10-21 09:52:14.645 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 59.496700000000004ms 200 text/css
2019-10-21 09:52:14.648 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:52:14.650 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:52:14.652 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:52:14.654 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:52:14.657 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:52:14.659 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:52:14.663 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:52:14.667 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:52:14.671 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.593700000000002ms 200 text/css
2019-10-21 09:52:14.675 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:52:14.678 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.707700000000003ms 200 text/css
2019-10-21 09:52:14.679 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.4602ms 200 text/css
2019-10-21 09:52:14.681 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:52:14.683 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:52:14.686 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:52:14.689 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 09:52:14.691 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:52:14.693 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.1436ms 200 text/css
2019-10-21 09:52:14.695 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 80.91290000000001ms 200 text/css
2019-10-21 09:52:14.699 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.6212ms 404 
2019-10-21 09:52:14.701 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.7598ms 200 text/css
2019-10-21 09:52:14.704 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:52:14.707 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 09:52:14.709 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.6424ms 404 
2019-10-21 09:52:14.710 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.9658ms 200 font/woff2
2019-10-21 09:52:14.735 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:52:14.739 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1206ms 404 
2019-10-21 09:52:14.741 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:52:14.743 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3805ms 404 
2019-10-21 09:53:25.220 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:53:25.229 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:53:25.231 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:53:25.234 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:53:25.265 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:53:25.594 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:53:25.655 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:53:25.777 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:53:25.984 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:53:25.991 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:53:25.993 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:53:26.010 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:53:26.018 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:53:26.077 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:53:26.108 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:53:26.125 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:53:26.268 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 143.6839ms.
2019-10-21 09:53:26.278 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 160.98600000000002ms
2019-10-21 09:53:26.280 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:53:26.285 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 275.845ms 200 text/html; charset=utf-8
2019-10-21 09:53:29.149 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:53:29.157 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:53:29.163 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:53:29.167 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:53:29.202 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:53:29.292 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.333 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.338 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.342 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.346 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.351 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.354 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:53:29.367 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 199.50150000000002ms.
2019-10-21 09:53:29.371 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 204.83020000000002ms
2019-10-21 09:53:29.373 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:53:29.377 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 228.3426ms 200 text/html; charset=utf-8
2019-10-21 09:53:47.273 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:53:47.276 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:53:47.278 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:53:47.281 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:53:47.290 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 09:53:47.293 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 09:53:47.309 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:53:47.311 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 09:53:47.313 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:53:47.318 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.834900000000005ms 200 text/css
2019-10-21 09:53:47.320 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.002700000000004ms 200 text/css
2019-10-21 09:53:47.330 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.0887ms 200 text/css
2019-10-21 09:53:47.346 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:53:47.351 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 09:53:47.355 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 09:53:47.358 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:53:47.361 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:53:47.364 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:53:47.367 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 09:53:47.370 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.818800000000003ms 200 text/css
2019-10-21 09:53:47.373 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 09:53:47.375 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.124ms 200 text/css
2019-10-21 09:53:47.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 102.05810000000001ms 200 text/css
2019-10-21 09:53:47.380 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 101.77900000000001ms 200 text/css
2019-10-21 09:53:47.382 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.88850000000001ms 200 text/css
2019-10-21 09:53:47.385 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 09:53:47.388 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:53:47.390 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:53:47.394 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 09:53:47.396 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 49.7303ms 200 text/css
2019-10-21 09:53:47.399 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 09:53:47.407 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:53:47.408 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 09:53:47.411 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.809900000000003ms 200 text/css
2019-10-21 09:53:47.413 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 09:53:47.416 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.4506ms 200 text/css
2019-10-21 09:53:47.418 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 09:53:47.421 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.4581ms 200 text/css
2019-10-21 09:53:47.425 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.2394ms 404 
2019-10-21 09:53:47.427 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.373200000000004ms 404 
2019-10-21 09:53:47.480 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:53:47.483 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0638ms 404 
2019-10-21 09:53:47.486 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 09:53:47.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.33ms 404 
2019-10-21 09:55:08.096 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:55:08.105 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:55:08.107 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:55:08.108 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:55:08.140 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:08.456 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:55:08.519 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:55:08.636 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:55:08.842 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:55:08.852 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:55:08.854 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:55:08.868 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:55:08.875 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:55:08.916 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:55:08.949 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:55:08.975 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:55:09.139 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 165.246ms.
2019-10-21 09:55:09.149 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 190.0754ms
2019-10-21 09:55:09.152 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:55:09.158 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 289.61220000000003ms 200 text/html; charset=utf-8
2019-10-21 09:55:10.776 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:55:10.781 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:55:10.786 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:55:10.797 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:55:10.838 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 41.485800000000005ms.
2019-10-21 09:55:10.840 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 51.4604ms
2019-10-21 09:55:10.843 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:55:10.845 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 70.1254ms 200 text/html; charset=utf-8
2019-10-21 09:55:12.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:55:12.987 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:55:12.999 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:55:13.033 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:55:13.038 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:13.125 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:55:13.284 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:55:13.322 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:55:13.356 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:55:13.366 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:55:13.383 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:55:13.399 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:55:13.409 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:55:13.420 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 418.1868ms
2019-10-21 09:55:13.422 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:55:13.428 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 450.73940000000005ms 200 application/json; charset=utf-8
2019-10-21 09:55:13.435 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:55:13.443 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:55:13.445 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:55:13.448 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:55:13.459 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.1285ms.
2019-10-21 09:55:13.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 14.2896ms
2019-10-21 09:55:13.470 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:55:13.473 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.5047ms 200 text/html; charset=utf-8
2019-10-21 09:55:15.157 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:55:15.162 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:55:15.169 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:15.175 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:55:15.226 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:15.268 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.282 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.286 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.290 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.294 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.298 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.302 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:15.312 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 136.7551ms.
2019-10-21 09:55:15.315 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 142.9247ms
2019-10-21 09:55:15.317 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:55:15.320 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 163.447ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.133 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2027%202019  
2019-10-21 09:55:18.137 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2028%202019  
2019-10-21 09:55:18.139 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2029%202019  
2019-10-21 09:55:18.141 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Nov%2001%202019  
2019-10-21 09:55:18.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2031%202019  
2019-10-21 09:55:18.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2030%202019  
2019-10-21 09:55:18.148 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.150 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.153 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.154 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.156 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.158 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.163 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.165 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.166 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.168 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.170 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.171 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.177 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.181 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.183 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.185 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.186 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.189 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.191 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.192 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.194 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.196 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.198 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.202 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.205 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.208 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 36.5399ms
2019-10-21 09:55:18.211 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.213 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 46.1132ms
2019-10-21 09:55:18.215 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.217 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.218 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 52.0529ms
2019-10-21 09:55:18.220 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.222 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.224 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 85.52300000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.227 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 85.8441ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.228 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 89.26740000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.230 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.232 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 53.8811ms
2019-10-21 09:55:18.234 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Nov%2002%202019  
2019-10-21 09:55:18.236 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.238 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 65.3283ms
2019-10-21 09:55:18.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 99.4568ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.243 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.244 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.246 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 113.01450000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.248 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.251 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:18.252 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 77.31710000000001ms
2019-10-21 09:55:18.254 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.255 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 118.6688ms 200 text/html; charset=utf-8
2019-10-21 09:55:18.257 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:18.260 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:18.263 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:18.265 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 12.1818ms
2019-10-21 09:55:18.267 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:18.269 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.896300000000004ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.103 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Nov%2003%202019  
2019-10-21 09:55:19.106 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Nov%2006%202019  
2019-10-21 09:55:19.108 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Nov%2004%202019  
2019-10-21 09:55:19.110 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Nov%2005%202019  
2019-10-21 09:55:19.112 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Nov%2007%202019  
2019-10-21 09:55:19.115 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Nov%2008%202019  
2019-10-21 09:55:19.119 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.123 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.126 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.127 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.129 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.130 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.132 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.134 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.136 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.137 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.139 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.141 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.143 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.146 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.148 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.149 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.154 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.156 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.160 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.161 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.163 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.165 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.168 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.178 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.180 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.186 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.188 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.192 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 44.5721ms
2019-10-21 09:55:19.194 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 55.5748ms
2019-10-21 09:55:19.197 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.198 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 53.0865ms
2019-10-21 09:55:19.200 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.202 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.206 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 98.6628ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.208 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 96.2102ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.211 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 82.6605ms
2019-10-21 09:55:19.212 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 72.3914ms
2019-10-21 09:55:19.215 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.217 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.220 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 115.0006ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.222 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 112.98360000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.224 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 79.0747ms
2019-10-21 09:55:19.227 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 91.8563ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.229 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.230 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Nov%2009%202019  
2019-10-21 09:55:19.232 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 125.97200000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:19.236 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.238 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:19.240 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:19.243 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:19.246 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:19.249 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 9.3246ms
2019-10-21 09:55:19.250 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:19.252 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.3456ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2027%202019  
2019-10-21 09:55:20.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2028%202019  
2019-10-21 09:55:20.147 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2031%202019  
2019-10-21 09:55:20.149 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2030%202019  
2019-10-21 09:55:20.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2029%202019  
2019-10-21 09:55:20.153 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Nov%2001%202019  
2019-10-21 09:55:20.171 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.172 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.175 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.176 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.178 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.182 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.183 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.185 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.187 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.188 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.191 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.192 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.195 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.196 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.197 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.199 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.201 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.203 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.205 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.208 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.210 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.212 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.214 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.218 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.220 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.223 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.225 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.228 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.230 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 49.697500000000005ms
2019-10-21 09:55:20.232 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 44.4001ms
2019-10-21 09:55:20.234 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 49.2229ms
2019-10-21 09:55:20.236 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.238 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 53.0328ms
2019-10-21 09:55:20.240 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.243 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.245 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 99.1759ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.247 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.8204ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.249 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 94.301ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.251 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.253 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 31.7439ms
2019-10-21 09:55:20.255 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Nov%2002%202019  
2019-10-21 09:55:20.258 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 109.10480000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.260 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.262 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.263 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 118.86580000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.266 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.268 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.270 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.272 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 71.57690000000001ms
2019-10-21 09:55:20.274 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.276 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.278 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 133.3638ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.281 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:20.284 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 16.1038ms
2019-10-21 09:55:20.287 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.288 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.688ms 200 text/html; charset=utf-8
2019-10-21 09:55:20.929 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2020%202019  
2019-10-21 09:55:20.936 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2021%202019  
2019-10-21 09:55:20.939 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2023%202019  
2019-10-21 09:55:20.942 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2022%202019  
2019-10-21 09:55:20.945 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2024%202019  
2019-10-21 09:55:20.947 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2025%202019  
2019-10-21 09:55:20.951 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.953 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.956 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.958 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.960 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.962 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.963 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.965 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.966 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:20.968 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.970 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.972 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.974 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.976 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:20.978 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.979 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.981 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.983 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.985 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.987 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:20.989 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.991 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.993 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.995 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:20.998 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.000 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.002 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.004 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.006 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.009 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 31.181800000000003ms
2019-10-21 09:55:21.011 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.013 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 42.9454ms
2019-10-21 09:55:21.015 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 45.0925ms
2019-10-21 09:55:21.017 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.019 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.021 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 46.7019ms
2019-10-21 09:55:21.024 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 89.6723ms 200 text/html; charset=utf-8
2019-10-21 09:55:21.026 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 94.599ms 200 text/html; charset=utf-8
2019-10-21 09:55:21.027 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.029 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 36.481ms
2019-10-21 09:55:21.031 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.6596ms 200 text/html; charset=utf-8
2019-10-21 09:55:21.034 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.035 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 43.028600000000004ms
2019-10-21 09:55:21.037 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 91.7984ms 200 text/html; charset=utf-8
2019-10-21 09:55:21.038 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.041 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2026%202019  
2019-10-21 09:55:21.043 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 109.23610000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:21.044 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.047 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 111.50450000000001ms 200 text/html; charset=utf-8
2019-10-21 09:55:21.050 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.052 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:21.054 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:21.056 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:21.059 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:21.062 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 8.546100000000001ms
2019-10-21 09:55:21.065 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:21.067 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.0363ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.213 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 09:55:22.216 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 09:55:22.218 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 09:55:22.220 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 09:55:22.221 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 09:55:22.223 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 09:55:22.225 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.227 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.229 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.231 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.232 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.234 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.236 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.238 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.239 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.242 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.244 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.246 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.247 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.249 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.251 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.252 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.254 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.256 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.258 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.260 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.262 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.263 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.265 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.267 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.269 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.271 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.273 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.275 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.277 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.279 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.283 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 37.376200000000004ms
2019-10-21 09:55:22.285 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 30.651ms
2019-10-21 09:55:22.292 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 48.395500000000006ms
2019-10-21 09:55:22.297 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.299 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.301 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 43.2535ms
2019-10-21 09:55:22.303 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 83.93ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.305 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 86.7502ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.309 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.313 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.316 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 94.4889ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.321 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 99.662ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.324 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 09:55:22.326 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.328 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.331 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.333 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:55:22.335 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:55:22.337 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:55:22.341 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:55:22.344 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 8.6022ms
2019-10-21 09:55:22.346 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.348 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.4128ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.363 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 126.2046ms
2019-10-21 09:55:22.364 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 120.76020000000001ms
2019-10-21 09:55:22.366 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.368 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:55:22.370 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 153.7101ms 200 text/html; charset=utf-8
2019-10-21 09:55:22.372 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 157.9614ms 200 text/html; charset=utf-8
2019-10-21 09:55:24.696 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 09:55:24.700 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 09:55:24.706 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice() on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 09:55:24.716 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 09:55:24.726 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 10.3047ms.
2019-10-21 09:55:26.283 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 09:55:26.285 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 09:55:26.290 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.974600000000001ms 404 
2019-10-21 09:55:26.306 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 09:55:26.308 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.8231ms 200 text/css
2019-10-21 09:55:26.699 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1990.8495ms
2019-10-21 09:55:26.702 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 09:55:26.706 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2009.7804ms 200 application/pdf
2019-10-21 09:58:12.054 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:58:12.064 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:58:12.066 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:58:12.069 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 09:58:12.102 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:12.425 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 09:58:12.505 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 09:58:12.639 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 09:58:12.869 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 09:58:12.878 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 09:58:12.879 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 09:58:12.902 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:58:12.912 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 09:58:12.963 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:58:12.995 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:58:13.020 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:58:13.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 160.25990000000002ms.
2019-10-21 09:58:13.192 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 185.97400000000002ms
2019-10-21 09:58:13.195 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:58:13.201 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 297.9667ms 200 text/html; charset=utf-8
2019-10-21 09:58:15.406 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 09:58:15.419 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:58:15.424 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:58:15.433 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 09:58:15.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 35.1075ms.
2019-10-21 09:58:15.470 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 44.4671ms
2019-10-21 09:58:15.472 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 09:58:15.474 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 70.1782ms 200 text/html; charset=utf-8
2019-10-21 09:58:17.611 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 09:58:17.620 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:58:17.631 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 09:58:17.660 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 09:58:17.667 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:17.744 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 09:58:17.879 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:58:17.917 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 09:58:17.951 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 09:58:17.960 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 09:58:17.975 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 09:58:17.985 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 09:58:17.993 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 09:58:18.003 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 369.91220000000004ms
2019-10-21 09:58:18.005 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 09:58:18.010 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 400.4261ms 200 application/json; charset=utf-8
2019-10-21 09:58:18.020 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 09:58:18.026 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:58:18.028 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 09:58:18.031 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:58:18.043 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.0606ms.
2019-10-21 09:58:18.046 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 15.4067ms
2019-10-21 09:58:18.049 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 09:58:18.052 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.4018ms 200 text/html; charset=utf-8
2019-10-21 09:58:19.730 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 09:58:19.740 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:58:19.746 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:19.751 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 09:58:19.801 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:19.842 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.857 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.862 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.866 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.869 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.873 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.877 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:19.887 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 134.9453ms.
2019-10-21 09:58:19.891 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 140.3595ms
2019-10-21 09:58:19.893 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 09:58:19.895 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 167.1103ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.237 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 09:58:22.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 09:58:22.242 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 09:58:22.244 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 09:58:22.246 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 09:58:22.248 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 09:58:22.251 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.253 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.256 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.258 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.260 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.263 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.267 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.269 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.271 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.273 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.274 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.276 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.284 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.285 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.287 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.289 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.290 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.292 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.295 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.297 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.299 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.301 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.303 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.304 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.309 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.313 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.316 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 39.954ms
2019-10-21 09:58:22.319 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.321 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.323 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.325 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 83.4204ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.327 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 46.8464ms
2019-10-21 09:58:22.330 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.332 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.334 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 63.1051ms
2019-10-21 09:58:22.335 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.337 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.339 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 94.91380000000001ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.341 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.0356ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.342 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 58.028000000000006ms
2019-10-21 09:58:22.345 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 09:58:22.347 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.349 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 106.35940000000001ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.351 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.353 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 09:58:22.356 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.358 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.360 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 09:58:22.363 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:22.366 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 09:58:22.369 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 13.526800000000001ms
2019-10-21 09:58:22.371 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.373 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.234300000000005ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.385 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 111.4182ms
2019-10-21 09:58:22.386 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 113.49050000000001ms
2019-10-21 09:58:22.388 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.389 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 09:58:22.391 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 150.96200000000002ms 200 text/html; charset=utf-8
2019-10-21 09:58:22.393 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 155.059ms 200 text/html; charset=utf-8
2019-10-21 09:58:23.920 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 09:58:23.925 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 09:58:23.932 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 09:58:23.943 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 09:58:23.956 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 09:58:23.965 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 09:58:23.991 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 09:58:24.002 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 09:58:24.012 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 10.2111ms.
2019-10-21 09:58:25.216 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 09:58:25.217 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 09:58:25.222 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.973000000000001ms 404 
2019-10-21 09:58:25.230 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 09:58:25.232 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.058500000000002ms 200 text/css
2019-10-21 09:58:25.579 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1644.6992ms
2019-10-21 09:58:25.582 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 09:58:25.585 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1664.4332000000002ms 200 application/pdf
2019-10-21 10:01:53.099 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:01:53.110 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:01:53.112 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:01:53.113 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:01:53.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:01:53.458 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:01:53.526 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:01:53.651 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:01:53.867 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:01:53.870 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:01:53.876 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:01:53.893 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:01:53.901 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:01:53.942 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:01:53.971 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:01:53.996 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:01:54.134 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 139.9116ms.
2019-10-21 10:01:54.147 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 163.7929ms
2019-10-21 10:01:54.150 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:01:54.159 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 263.7658ms 200 text/html; charset=utf-8
2019-10-21 10:01:55.832 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 10:01:55.837 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:01:55.842 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:01:55.854 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 10:01:55.901 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 47.8674ms.
2019-10-21 10:01:55.903 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 59.002300000000005ms
2019-10-21 10:01:55.905 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:01:55.907 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 76.5215ms 200 text/html; charset=utf-8
2019-10-21 10:01:57.710 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 10:01:57.721 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:01:57.734 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:01:57.769 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 10:01:57.776 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:01:57.857 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 10:01:58.003 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:01:58.046 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:01:58.091 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 10:01:58.105 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 10:01:58.128 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 10:01:58.144 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 10:01:58.155 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 10:01:58.171 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 434.75210000000004ms
2019-10-21 10:01:58.174 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:01:58.180 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 474.1155ms 200 application/json; charset=utf-8
2019-10-21 10:01:58.188 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:01:58.195 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:01:58.198 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:01:58.201 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:01:58.213 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.3309ms.
2019-10-21 10:01:58.218 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 15.4046ms
2019-10-21 10:01:58.220 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:01:58.223 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.8648ms 200 text/html; charset=utf-8
2019-10-21 10:02:00.283 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:02:00.293 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:02:00.298 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:00.303 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:02:00.369 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:00.414 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.430 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.434 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.438 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.442 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.446 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.450 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:00.463 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 157.2122ms.
2019-10-21 10:02:00.466 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 164.7995ms
2019-10-21 10:02:00.469 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:02:00.472 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 188.5461ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.119 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:02:02.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:02:02.124 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:02:02.126 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:02:02.128 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:02:02.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:02:02.134 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.136 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.139 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.141 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.143 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.144 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.148 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.150 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.155 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.157 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.159 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.164 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.166 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.169 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.171 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.174 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.176 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.178 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.180 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.184 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.186 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.188 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.193 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.198 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.206 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.209 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.212 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 50.5882ms
2019-10-21 10:02:02.214 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.215 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.217 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.2779ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.222 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 66.87400000000001ms
2019-10-21 10:02:02.224 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 64.9958ms
2019-10-21 10:02:02.226 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.227 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:02:02.229 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.2504ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.231 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.233 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.235 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 112.48580000000001ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.236 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.239 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 79.4612ms
2019-10-21 10:02:02.241 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:02:02.243 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.244 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.246 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:02:02.248 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.250 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 124.17160000000001ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.252 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:02.256 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:02:02.259 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 15.3094ms
2019-10-21 10:02:02.260 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.262 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.011500000000005ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.274 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 123.29310000000001ms
2019-10-21 10:02:02.276 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 117.46470000000001ms
2019-10-21 10:02:02.278 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.280 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:02:02.281 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 159.2193ms 200 text/html; charset=utf-8
2019-10-21 10:02:02.283 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 185.1406ms 200 text/html; charset=utf-8
2019-10-21 10:02:03.733 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:02:03.738 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:02:03.749 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:02:03.759 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:02:03.774 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:02:03.792 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:02:03.825 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:02:03.839 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:02:03.854 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 15.4884ms.
2019-10-21 10:02:05.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:02:05.061 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:02:05.065 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.703200000000001ms 404 
2019-10-21 10:02:05.082 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:02:05.085 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.8684ms 200 text/css
2019-10-21 10:02:05.441 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1689.8329ms
2019-10-21 10:02:05.444 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:02:05.457 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1714.9999ms 200 application/pdf
2019-10-21 10:04:18.211 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:04:18.222 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:04:18.224 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:04:18.226 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:04:18.263 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:18.595 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:04:18.659 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:04:18.790 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:04:19.001 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:04:19.008 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:04:19.010 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:04:19.031 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:04:19.039 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:04:19.083 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:04:19.112 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:04:19.134 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:04:19.269 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 133.225ms.
2019-10-21 10:04:19.275 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 157.8881ms
2019-10-21 10:04:19.280 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:04:19.286 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 254.90470000000002ms 200 text/html; charset=utf-8
2019-10-21 10:04:20.551 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 10:04:20.558 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:04:20.566 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:04:20.577 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 10:04:20.613 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 37.2789ms.
2019-10-21 10:04:20.616 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 47.3298ms
2019-10-21 10:04:20.618 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:04:20.620 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 68.71640000000001ms 200 text/html; charset=utf-8
2019-10-21 10:04:22.362 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 10:04:22.370 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:04:22.380 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:04:22.416 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 10:04:22.421 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:22.500 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 10:04:22.635 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:04:22.670 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:04:22.700 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 10:04:22.711 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 10:04:22.725 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 10:04:22.735 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 10:04:22.744 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 10:04:22.754 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 372.0756ms
2019-10-21 10:04:22.757 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:04:22.761 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 399.6388ms 200 application/json; charset=utf-8
2019-10-21 10:04:22.768 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:04:22.774 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:04:22.776 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:04:22.779 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:04:22.787 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.8918ms.
2019-10-21 10:04:22.793 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 11.036200000000001ms
2019-10-21 10:04:22.795 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:04:22.797 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.2555ms 200 text/html; charset=utf-8
2019-10-21 10:04:24.088 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:04:24.094 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:04:24.100 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:24.105 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:04:24.157 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:24.199 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.214 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.219 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.223 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.228 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.232 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.237 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:24.248 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 142.8847ms.
2019-10-21 10:04:24.253 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 148.1466ms
2019-10-21 10:04:24.255 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:04:24.258 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 170.1369ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.015 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:04:26.018 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:04:26.021 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:04:26.024 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:04:26.026 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:04:26.029 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:04:26.033 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.036 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.038 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.040 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.043 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.045 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.047 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.049 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.050 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.052 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.054 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.056 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.062 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.064 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.066 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.068 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.070 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.073 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.075 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.077 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.079 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.081 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.084 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.086 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.090 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.095 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.099 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.121 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.124 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.126 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.128 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.130 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 79.04650000000001ms
2019-10-21 10:04:26.132 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 72.3109ms
2019-10-21 10:04:26.134 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 78.4646ms
2019-10-21 10:04:26.136 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.138 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.140 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 116.8917ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.142 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 121.0455ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.146 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 120.9072ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.149 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.150 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:04:26.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 94.9903ms
2019-10-21 10:04:26.155 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.158 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.160 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 141.5736ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.161 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:04:26.164 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:04:26.166 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:26.169 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:04:26.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 8.6038ms
2019-10-21 10:04:26.175 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.177 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.9342ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.186 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 135.74370000000002ms
2019-10-21 10:04:26.188 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 132.49280000000002ms
2019-10-21 10:04:26.190 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.192 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:04:26.193 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 179.97060000000002ms 200 text/html; charset=utf-8
2019-10-21 10:04:26.195 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 177.69910000000002ms 200 text/html; charset=utf-8
2019-10-21 10:04:27.334 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:04:27.339 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:04:27.348 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:04:27.359 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:04:27.373 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:04:27.383 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:04:27.415 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:04:27.426 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:04:27.436 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 11.4685ms.
2019-10-21 10:04:28.658 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:04:28.660 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:04:28.664 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.6477ms 404 
2019-10-21 10:04:28.678 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:04:28.680 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.149900000000002ms 200 text/css
2019-10-21 10:04:29.042 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1691.3966ms
2019-10-21 10:04:29.045 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:04:29.048 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1715.4567000000002ms 200 application/pdf
2019-10-21 10:10:19.835 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:10:19.845 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:10:19.847 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:10:19.849 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:10:19.883 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:10:20.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:10:20.269 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:10:20.399 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:10:20.606 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:10:20.613 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:10:20.615 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:10:20.632 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:10:20.641 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:10:20.681 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:10:20.709 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:10:20.732 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:10:20.875 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 144.7474ms.
2019-10-21 10:10:20.884 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 166.8914ms
2019-10-21 10:10:20.887 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:10:20.893 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 260.9171ms 200 text/html; charset=utf-8
2019-10-21 10:13:35.308 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 10:13:35.341 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:13:35.345 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:13:35.358 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 10:13:35.395 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 37.3943ms.
2019-10-21 10:13:35.396 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 49.822ms
2019-10-21 10:13:35.398 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:13:35.401 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 94.18010000000001ms 200 text/html; charset=utf-8
2019-10-21 10:13:37.512 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 10:13:37.521 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:13:37.530 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:13:37.559 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 10:13:37.565 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:37.637 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 10:13:37.766 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:13:37.800 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:13:37.830 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 10:13:37.840 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 10:13:37.854 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 10:13:37.863 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 10:13:37.873 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 10:13:37.882 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 349.5958ms
2019-10-21 10:13:37.884 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:13:37.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 377.8147ms 200 application/json; charset=utf-8
2019-10-21 10:13:37.896 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:13:37.904 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:13:37.906 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:13:37.908 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:13:37.920 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.643800000000001ms.
2019-10-21 10:13:37.926 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 14.487300000000001ms
2019-10-21 10:13:37.928 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:13:37.930 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.7667ms 200 text/html; charset=utf-8
2019-10-21 10:13:40.660 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:13:40.666 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:13:40.676 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:40.682 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:13:40.732 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:40.773 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.787 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.791 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.795 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.798 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.802 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.806 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:40.813 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 133.3722ms.
2019-10-21 10:13:40.819 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 137.1296ms
2019-10-21 10:13:40.821 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:13:40.823 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 164.35420000000002ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.644 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:13:42.647 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:13:42.649 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:13:42.651 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:13:42.653 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:13:42.654 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:13:42.659 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.661 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.662 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.664 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.666 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.668 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.673 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.675 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.676 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.678 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.679 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.681 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.687 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.689 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.691 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.693 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.695 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.696 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.700 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.702 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.704 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.706 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.708 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.710 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.715 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.719 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.721 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 43.0094ms
2019-10-21 10:13:42.723 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.726 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.728 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.731 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.732 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 80.3912ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.735 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 51.5064ms
2019-10-21 10:13:42.738 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 54.4219ms
2019-10-21 10:13:42.740 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.742 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:13:42.744 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 92.95580000000001ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.746 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.749 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.751 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.753 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 102.1718ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.755 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:13:42.757 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 73.04480000000001ms
2019-10-21 10:13:42.759 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.760 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:13:42.762 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 112.6952ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.765 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:42.769 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.770 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.774 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:13:42.776 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 18.9268ms
2019-10-21 10:13:42.779 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.781 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 40.882200000000005ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.797 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 120.85170000000001ms
2019-10-21 10:13:42.800 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 121.95870000000001ms
2019-10-21 10:13:42.802 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.804 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:13:42.805 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 160.27360000000002ms 200 text/html; charset=utf-8
2019-10-21 10:13:42.807 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 160.1369ms 200 text/html; charset=utf-8
2019-10-21 10:13:44.494 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:13:44.498 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:13:44.506 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:13:44.516 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:13:44.528 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:13:44.538 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:13:44.565 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:13:44.575 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:13:44.586 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 11.2247ms.
2019-10-21 10:13:45.749 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:13:45.752 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:13:45.760 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.206ms 404 
2019-10-21 10:13:45.767 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:13:45.769 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.484ms 200 text/css
2019-10-21 10:13:46.164 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1655.8067ms
2019-10-21 10:13:46.167 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:13:46.170 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1676.3457ms 200 application/pdf
2019-10-21 10:16:41.302 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:16:41.311 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:16:41.313 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:16:41.315 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:16:41.344 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:41.640 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:16:41.710 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:16:41.840 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:16:42.063 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:16:42.069 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:16:42.071 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:16:42.088 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:16:42.097 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:16:42.151 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:16:42.182 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:16:42.199 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:16:42.366 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 168.9769ms.
2019-10-21 10:16:42.373 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 186.69570000000002ms
2019-10-21 10:16:42.375 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:16:42.381 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 292.9244ms 200 text/html; charset=utf-8
2019-10-21 10:16:45.457 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:16:45.463 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:16:45.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:45.475 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:16:45.516 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:45.630 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.685 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.690 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.695 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.700 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.705 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.709 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:45.726 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 254.4225ms.
2019-10-21 10:16:45.732 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 259.0367ms
2019-10-21 10:16:45.734 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:16:45.738 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 281.0724ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.319 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:16:47.325 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:16:47.328 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:16:47.330 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:16:47.333 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:16:47.335 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:16:47.351 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.353 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.356 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.358 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.359 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.361 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.365 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.367 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.369 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.371 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.373 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.375 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.382 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.385 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.386 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.389 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.391 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.393 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.426 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.428 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.430 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.431 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.433 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.435 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.440 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.443 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.445 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 69.11710000000001ms
2019-10-21 10:16:47.448 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.450 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.453 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.455 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 85.0697ms
2019-10-21 10:16:47.457 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 124.683ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.460 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.462 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.464 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.466 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 86.3348ms
2019-10-21 10:16:47.467 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 138.3389ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.469 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.472 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:16:47.474 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 88.9728ms
2019-10-21 10:16:47.476 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 149.01000000000002ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.478 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.480 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 146.54340000000002ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.483 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.485 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:16:47.488 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.490 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:16:47.492 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.494 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:47.498 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:16:47.501 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 13.8345ms
2019-10-21 10:16:47.503 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.505 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.0262ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.518 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 151.5221ms
2019-10-21 10:16:47.520 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 146.9031ms
2019-10-21 10:16:47.522 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.524 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:16:47.526 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 201.5693ms 200 text/html; charset=utf-8
2019-10-21 10:16:47.528 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 209.96560000000002ms 200 text/html; charset=utf-8
2019-10-21 10:16:48.679 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:16:48.685 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:16:48.693 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:16:48.704 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:16:48.738 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:16:48.800 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:16:48.828 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:16:48.839 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:16:48.873 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 34.9887ms.
2019-10-21 10:16:50.042 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:16:50.045 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:16:50.049 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.4992ms 404 
2019-10-21 10:16:50.056 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:16:50.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.4454ms 200 text/css
2019-10-21 10:16:50.420 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1724.9114000000002ms
2019-10-21 10:16:50.423 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:16:50.430 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1751.3595ms 200 application/pdf
2019-10-21 10:19:12.441 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:19:12.452 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:19:12.453 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:19:12.455 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:19:12.486 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:12.843 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:19:12.910 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:19:13.041 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:19:13.259 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:19:13.262 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:19:13.268 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:19:13.285 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:19:13.293 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:19:13.333 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:19:13.362 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:19:13.390 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:19:13.536 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 147.7723ms.
2019-10-21 10:19:13.546 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 174.6005ms
2019-10-21 10:19:13.549 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:19:13.555 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 269.8072ms 200 text/html; charset=utf-8
2019-10-21 10:19:15.214 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 10:19:15.223 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:19:15.228 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:19:15.241 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 10:19:15.284 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 44.0869ms.
2019-10-21 10:19:15.286 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 55.6736ms
2019-10-21 10:19:15.288 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:19:15.290 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 76.89970000000001ms 200 text/html; charset=utf-8
2019-10-21 10:19:16.996 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 10:19:17.010 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:19:17.026 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:19:17.076 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 10:19:17.083 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:17.176 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 10:19:17.330 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:19:17.372 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:19:17.413 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 10:19:17.426 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 10:19:17.442 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 10:19:17.453 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 10:19:17.462 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 10:19:17.474 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 445.5731ms
2019-10-21 10:19:17.476 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:19:17.481 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 486.0976ms 200 application/json; charset=utf-8
2019-10-21 10:19:17.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:19:17.496 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:19:17.498 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:19:17.501 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:19:17.512 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.448400000000001ms.
2019-10-21 10:19:17.517 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 14.464500000000001ms
2019-10-21 10:19:17.520 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:19:17.522 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.1832ms 200 text/html; charset=utf-8
2019-10-21 10:19:19.115 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:19:19.120 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:19:19.128 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:19.134 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:19:19.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:19.224 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.237 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.241 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.244 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.247 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.251 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.254 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:19.267 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 129.20850000000002ms.
2019-10-21 10:19:19.269 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 139.032ms
2019-10-21 10:19:19.272 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:19:19.275 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 158.56ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.626 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:19:21.622 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:19:21.628 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:19:21.629 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:19:21.632 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:19:21.634 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:19:21.638 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.641 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.642 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.644 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.646 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.647 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.652 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.654 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.655 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.657 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.659 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.660 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.666 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.669 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.671 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.673 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.674 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.677 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.678 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.680 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.682 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.683 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.685 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.688 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.691 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.695 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.697 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 39.7226ms
2019-10-21 10:19:21.700 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.703 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.705 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.707 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 47.2124ms
2019-10-21 10:19:21.710 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 80.7483ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.713 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.714 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.716 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 52.148900000000005ms
2019-10-21 10:19:21.718 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 87.399ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.721 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:19:21.723 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.725 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 66.8095ms
2019-10-21 10:19:21.727 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 97.2467ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.729 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.731 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.733 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 106.71650000000001ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.736 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:19:21.738 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.740 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:19:21.743 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:21.745 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.746 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.750 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], MIN([a].[NormalizedUserName]) AS [UserName], @__daydate_1 AS [Date], COUNT(*) AS [DishesCount], SUM(CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price]) AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
GROUP BY [a].[Id]
2019-10-21 10:19:21.754 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 14.1379ms
2019-10-21 10:19:21.756 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.758 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.9227ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.772 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 116.0584ms
2019-10-21 10:19:21.774 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 111.3283ms
2019-10-21 10:19:21.776 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.778 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:19:21.780 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 157.50320000000002ms 200 text/html; charset=utf-8
2019-10-21 10:19:21.782 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 157.9079ms 200 text/html; charset=utf-8
2019-10-21 10:19:23.402 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:19:23.406 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:19:23.413 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:19:23.423 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:19:23.436 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:19:23.445 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:19:23.474 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:19:23.483 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:19:23.498 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 15.409500000000001ms.
2019-10-21 10:19:24.647 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:19:24.649 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:19:24.654 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1031ms 404 
2019-10-21 10:19:24.662 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:19:24.664 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.0482ms 200 text/css
2019-10-21 10:19:25.034 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1617.2895ms
2019-10-21 10:19:25.037 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:19:25.045 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1639.7243ms 200 application/pdf
2019-10-21 10:30:51.994 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:30:52.006 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:30:52.008 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:30:52.010 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:30:52.043 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:30:52.339 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:30:52.404 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:30:52.532 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:30:52.741 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:30:52.780 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:30:52.783 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:30:52.805 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:30:52.813 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:30:52.869 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:30:52.900 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:30:52.916 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:30:53.058 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 142.3119ms.
2019-10-21 10:30:53.068 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 158.36870000000002ms
2019-10-21 10:30:53.070 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:30:53.077 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 271.9238ms 200 text/html; charset=utf-8
2019-10-21 10:30:55.708 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:30:55.719 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:30:55.727 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:30:55.732 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:30:55.775 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:30:55.855 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:30:55.969 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 240.4272ms
2019-10-21 10:30:55.972 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:30:56.035 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The model item passed into the ViewDataDictionary is of type 'CateringPro.Models.CustomerOrdersViewModel', but this ViewDataDictionary instance requires a model item of type 'System.Collections.Generic.IEnumerable`1[CateringPro.Models.CustomerOrdersViewModel]'.
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.EnsureCompatible(Object value)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary..ctor(ViewDataDictionary source, Object model, Type declaredModelType)
   at lambda_method(Closure , ViewDataDictionary )
   at Microsoft.AspNetCore.Mvc.Razor.RazorPagePropertyActivator.CreateViewDataDictionary(ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorPagePropertyActivator.Activate(Object page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorPageActivator.Activate(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ExecuteAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.InvokeAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.InvokeCoreAsync(ViewComponentDescriptor descriptor, Object arguments)
   at AspNetCore.Views_CustomerOrders_Index.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\CustomerOrders\Index.cshtml:line 62
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-10-21 10:30:56.082 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 373.7015ms 500 text/html; charset=utf-8
2019-10-21 10:31:53.211 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:31:53.219 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:31:53.221 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:31:53.223 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:31:53.253 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:31:53.527 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:31:53.604 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:31:53.735 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:31:53.939 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:31:53.946 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:31:53.947 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:31:53.963 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:31:53.971 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:31:54.016 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:31:54.043 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:31:54.068 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:31:54.208 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 139.8741ms.
2019-10-21 10:31:54.212 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 165.80780000000001ms
2019-10-21 10:31:54.215 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:31:54.226 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 258.8141ms 200 text/html; charset=utf-8
2019-10-21 10:33:40.508 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 10:33:40.529 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:33:40.534 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:33:40.545 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 10:33:40.589 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 44.8423ms.
2019-10-21 10:33:40.591 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 54.6589ms
2019-10-21 10:33:40.593 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 10:33:40.596 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 88.72930000000001ms 200 text/html; charset=utf-8
2019-10-21 10:33:42.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 10:33:42.498 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:33:42.507 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 10:33:42.537 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 10:33:42.542 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:33:42.616 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 10:33:42.746 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:33:42.780 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 10:33:42.814 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 10:33:42.826 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 10:33:42.842 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 10:33:42.854 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 10:33:42.866 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 10:33:42.879 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 368.38140000000004ms
2019-10-21 10:33:42.883 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 10:33:42.888 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 398.99330000000003ms 200 application/json; charset=utf-8
2019-10-21 10:33:42.899 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:33:42.906 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:33:42.909 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:33:42.912 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:33:42.921 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.4344ms.
2019-10-21 10:33:42.926 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 12.119200000000001ms
2019-10-21 10:33:42.929 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:33:42.931 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.101600000000005ms 200 text/html; charset=utf-8
2019-10-21 10:33:44.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:33:44.495 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:33:44.503 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:33:44.507 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:33:44.557 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:33:44.584 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:33:44.664 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 159.54860000000002ms
2019-10-21 10:33:44.666 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:33:44.719 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The model item passed into the ViewDataDictionary is of type 'CateringPro.Models.CustomerOrdersViewModel', but this ViewDataDictionary instance requires a model item of type 'System.Collections.Generic.IEnumerable`1[CateringPro.Models.CustomerOrdersViewModel]'.
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.EnsureCompatible(Object value)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary..ctor(ViewDataDictionary source, Object model, Type declaredModelType)
   at lambda_method(Closure , ViewDataDictionary )
   at Microsoft.AspNetCore.Mvc.Razor.RazorPagePropertyActivator.CreateViewDataDictionary(ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorPagePropertyActivator.Activate(Object page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorPageActivator.Activate(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ExecuteAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.InvokeAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.InvokeCoreAsync(ViewComponentDescriptor descriptor, Object arguments)
   at AspNetCore.Views_CustomerOrders_Index.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\CustomerOrders\Index.cshtml:line 62
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-10-21 10:33:44.749 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 260.3784ms 500 text/html; charset=utf-8
2019-10-21 10:55:23.300 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:55:23.311 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:55:23.312 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:55:23.314 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:55:23.347 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:55:23.685 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:55:23.758 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:55:23.918 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:55:24.192 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:55:24.198 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:55:24.199 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:55:24.216 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:55:24.223 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:55:24.277 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:55:24.304 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:55:24.320 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:55:24.479 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 159.8707ms.
2019-10-21 10:55:24.487 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 175.21120000000002ms
2019-10-21 10:55:24.489 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:55:24.494 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 278.9628ms 200 text/html; charset=utf-8
2019-10-21 10:55:27.198 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:55:27.207 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:55:27.212 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:55:27.216 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:55:27.254 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:55:27.332 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:55:27.518 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 304.9203ms
2019-10-21 10:55:27.521 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:55:27.575 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Processing of the LINQ expression 'GroupByShaperExpression:
KeySelector: a.Id, 
ElementSelector:new CustomerOrdersDetailsViewModel{ 
    UserId = ProjectionBindingExpression: UserId, 
    UserName = ProjectionBindingExpression: UserName, 
    DishId = ProjectionBindingExpression: DishId, 
    CategoryId = ProjectionBindingExpression: CategoryId, 
    DishName = ProjectionBindingExpression: DishName, 
    Date = ProjectionBindingExpression: Date, 
    Quantity = ProjectionBindingExpression: Quantity, 
    Price = ProjectionBindingExpression: Price, 
    Amount = ProjectionBindingExpression: Amount 
}
' by 'RelationalProjectionBindingExpressionVisitor' failed. This may indicate either a bug or a limitation in EF Core. See https://go.microsoft.com/fwlink/?linkid=2101433 for more detailed information.
   at Microsoft.EntityFrameworkCore.Query.Internal.RelationalProjectionBindingExpressionVisitor.VisitExtension(Expression extensionExpression)
   at System.Linq.Expressions.Expression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.Internal.RelationalProjectionBindingExpressionVisitor.Visit(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.RelationalProjectionBindingExpressionVisitor.VisitMemberAssignment(MemberAssignment memberAssignment)
   at System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(MemberBinding node)
   at Microsoft.EntityFrameworkCore.Query.Internal.RelationalProjectionBindingExpressionVisitor.VisitMemberInit(MemberInitExpression memberInitExpression)
   at System.Linq.Expressions.MemberInitExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.Internal.RelationalProjectionBindingExpressionVisitor.Visit(Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.RelationalProjectionBindingExpressionVisitor.Translate(SelectExpression selectExpression, Expression expression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.TranslateSelect(ShapedQueryExpression source, LambdaExpression selector)
   at Microsoft.EntityFrameworkCore.Query.QueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at Microsoft.EntityFrameworkCore.Query.RelationalQueryableMethodTranslatingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryExecutor[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery[TResult](Expression query, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQueryCore[TResult](IDatabase database, Expression query, IModel model, Boolean async)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.<>c__DisplayClass9_0`1.<Execute>b__0()
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQueryCore[TFunc](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery[TResult](Object cacheKey, Func`1 compiler)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute[TResult](Expression query)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute[TResult](Expression expression)
   at Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.GetEnumerator()
   at System.Linq.Enumerable.Count[TSource](IEnumerable`1 source)
   at AspNetCore.Views_Shared_Components_CustomerOrdersComponent_Default.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\Shared\Components\CustomerOrdersComponent\Default.cshtml:line 16
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ExecuteAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.InvokeAsync(ViewComponentContext context)
   at Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.InvokeCoreAsync(ViewComponentDescriptor descriptor, Object arguments)
   at AspNetCore.Views_CustomerOrders_Index.ExecuteAsync() in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Views\CustomerOrders\Index.cshtml:line 62
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-10-21 10:55:27.633 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 437.1248ms 500 text/html; charset=utf-8
2019-10-21 10:57:03.516 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:57:03.545 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:57:03.547 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:57:03.548 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 10:57:03.578 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:03.855 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 10:57:03.935 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 10:57:04.065 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 10:57:04.273 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 10:57:04.280 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 10:57:04.282 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 10:57:04.299 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 10:57:04.307 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 10:57:04.359 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:57:04.393 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 10:57:04.411 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:57:04.549 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 140.2681ms.
2019-10-21 10:57:04.562 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 157.03390000000002ms
2019-10-21 10:57:04.563 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 10:57:04.570 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 271.673ms 200 text/html; charset=utf-8
2019-10-21 10:57:06.874 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 10:57:06.883 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:57:06.888 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:06.894 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 10:57:06.927 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:07.014 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.054 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.072 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.076 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.080 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.083 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.087 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.091 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.094 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.098 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.101 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.104 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.107 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.111 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:07.124 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 231.58010000000002ms.
2019-10-21 10:57:07.130 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 235.71620000000001ms
2019-10-21 10:57:07.132 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 10:57:07.136 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 263.5647ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.098 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:57:09.102 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:57:09.105 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:57:09.108 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:57:09.109 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:57:09.111 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:57:09.129 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.130 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.132 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.134 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.136 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.138 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.142 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.143 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.145 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.147 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.148 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.150 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.159 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.160 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.162 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.164 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.166 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.168 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.200 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.202 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.206 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.208 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.209 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.213 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.216 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.219 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.222 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.224 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.227 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.229 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.232 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.233 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 86.9521ms
2019-10-21 10:57:09.236 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 88.9916ms
2019-10-21 10:57:09.238 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.240 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.242 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 92.7835ms
2019-10-21 10:57:09.243 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.267 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 137.58880000000002ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.293 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 136.7731ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.301 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.313 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 198.5637ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.320 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:57:09.328 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.334 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.339 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.363 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 188.9204ms
2019-10-21 10:57:09.366 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.368 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 264.2137ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.371 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.374 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:09.377 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:09.381 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:09.384 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.390 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:09.393 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 16.572100000000002ms
2019-10-21 10:57:09.395 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.397 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 86.7796ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.427 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:09.429 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:09.501 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 351.04130000000004ms
2019-10-21 10:57:09.503 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 353.05080000000004ms
2019-10-21 10:57:09.505 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.506 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:09.508 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 409.99620000000004ms 200 text/html; charset=utf-8
2019-10-21 10:57:09.510 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 407.85970000000003ms 200 text/html; charset=utf-8
2019-10-21 10:57:11.180 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=01%2F01%2F0001%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:57:11.187 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:57:11.195 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:57:11.205 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:11.209 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:11.217 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:11.264 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:11.273 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:57:11.282 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 9.756300000000001ms.
2019-10-21 10:57:12.440 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:57:12.442 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:57:12.447 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.745500000000001ms 404 
2019-10-21 10:57:12.454 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:57:12.456 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.302ms 200 text/css
2019-10-21 10:57:12.806 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1608.5963000000002ms
2019-10-21 10:57:12.809 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:57:12.816 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1636.9492ms 200 application/pdf
2019-10-21 10:57:26.186 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=01%2F01%2F0001%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:57:26.191 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:57:26.193 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:57:26.197 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:26.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:26.211 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:26.216 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:26.219 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:57:26.222 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 3.4778000000000002ms.
2019-10-21 10:57:27.164 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:57:27.166 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:57:27.169 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.0975ms 404 
2019-10-21 10:57:27.171 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:57:27.173 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.5587ms 200 text/css
2019-10-21 10:57:27.505 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1305.0537000000002ms
2019-10-21 10:57:27.507 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:57:27.509 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1323.6476ms 200 application/pdf
2019-10-21 10:57:42.701 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2006%202019  
2019-10-21 10:57:42.704 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2007%202019  
2019-10-21 10:57:42.707 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2008%202019  
2019-10-21 10:57:42.710 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2009%202019  
2019-10-21 10:57:42.712 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2011%202019  
2019-10-21 10:57:42.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2010%202019  
2019-10-21 10:57:42.718 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.720 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.721 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.723 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.725 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.727 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.729 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.730 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.732 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.734 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.735 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.737 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.739 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.740 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.743 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.744 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.746 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.748 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.750 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.751 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.753 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.755 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.757 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.759 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.763 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.765 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.767 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.770 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.773 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.775 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.777 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.780 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.782 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.784 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.786 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.788 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.794 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 51.1799ms
2019-10-21 10:57:42.796 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 59.662600000000005ms
2019-10-21 10:57:42.798 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 61.3812ms
2019-10-21 10:57:42.801 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.803 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.805 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 103.3756ms 200 text/html; charset=utf-8
2019-10-21 10:57:42.807 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 96.9004ms 200 text/html; charset=utf-8
2019-10-21 10:57:42.809 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 60.3847ms
2019-10-21 10:57:42.811 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 55.6571ms
2019-10-21 10:57:42.813 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.815 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.817 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 106.7ms 200 text/html; charset=utf-8
2019-10-21 10:57:42.819 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 117.20110000000001ms 200 text/html; charset=utf-8
2019-10-21 10:57:42.821 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2012%202019  
2019-10-21 10:57:42.824 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.827 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:42.829 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.832 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 118.5643ms 200 text/html; charset=utf-8
2019-10-21 10:57:42.834 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:42.835 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:42.837 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:42.840 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.844 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:42.846 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 10.8572ms
2019-10-21 10:57:42.849 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 117.37280000000001ms
2019-10-21 10:57:42.851 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.852 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:42.854 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.999ms 200 text/html; charset=utf-8
2019-10-21 10:57:42.856 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 148.9101ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.008 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:57:44.013 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:57:44.017 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:57:44.021 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:57:44.023 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:57:44.025 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:57:44.031 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.033 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.034 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.037 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.038 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.040 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.043 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.045 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.047 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.049 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.050 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.053 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.055 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.058 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.061 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.062 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.064 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.066 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.070 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.072 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.073 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.076 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.077 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.079 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.087 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.089 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.091 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.094 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.096 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.102 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.103 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.106 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.108 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.111 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.113 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.116 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 60.1139ms
2019-10-21 10:57:44.118 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 66.9098ms
2019-10-21 10:57:44.121 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 64.1113ms
2019-10-21 10:57:44.123 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.125 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.128 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 115.35210000000001ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.132 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 110.2273ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.134 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.136 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 88.5254ms
2019-10-21 10:57:44.138 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:44.139 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.142 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:44.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 128.9947ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.146 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:57:44.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 119.89200000000001ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.151 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.154 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.157 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.159 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 112.25380000000001ms
2019-10-21 10:57:44.161 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 113.5334ms
2019-10-21 10:57:44.162 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.164 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.166 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 159.37720000000002ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.168 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 156.3982ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.169 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.172 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.176 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 23.1846ms
2019-10-21 10:57:44.181 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.182 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.9777ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.846 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2020%202019  
2019-10-21 10:57:44.849 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2022%202019  
2019-10-21 10:57:44.852 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2021%202019  
2019-10-21 10:57:44.853 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2024%202019  
2019-10-21 10:57:44.855 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2023%202019  
2019-10-21 10:57:44.857 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2025%202019  
2019-10-21 10:57:44.859 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.861 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.863 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.864 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.866 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.867 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.869 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.870 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.872 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.873 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.876 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.878 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.879 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.881 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.883 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.885 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.886 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:44.888 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.889 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.891 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.893 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.895 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.897 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:44.899 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:44.902 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.904 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.906 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.909 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.912 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.913 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.916 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.938 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.940 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.943 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.945 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.952 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:44.958 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 79.8694ms
2019-10-21 10:57:44.960 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 75.9103ms
2019-10-21 10:57:44.962 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.964 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.966 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 116.6545ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.968 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 98.58810000000001ms
2019-10-21 10:57:44.970 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 115.7916ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.972 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.975 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 76.7258ms
2019-10-21 10:57:44.977 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 130.6626ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.978 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.980 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 68.9314ms
2019-10-21 10:57:44.982 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 131.0738ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.983 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.985 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 61.0039ms
2019-10-21 10:57:44.990 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 136.1605ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.992 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:44.994 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2026%202019  
2019-10-21 10:57:44.996 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 142.88160000000002ms 200 text/html; charset=utf-8
2019-10-21 10:57:44.998 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:45.000 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:45.001 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:45.003 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:45.005 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:45.009 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:45.011 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 10.0759ms
2019-10-21 10:57:45.013 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:45.015 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.569700000000005ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.149 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 10:57:46.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 10:57:46.155 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 10:57:46.156 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 10:57:46.158 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 10:57:46.160 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 10:57:46.162 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.165 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.168 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.170 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.171 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.173 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.175 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.177 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.181 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.183 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.184 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.186 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.188 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.190 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.192 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.194 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.196 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.198 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.200 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.202 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.206 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.208 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.212 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.214 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.216 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.218 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.220 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.223 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.227 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.228 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.229 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.232 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.234 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.236 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.241 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 58.066500000000005ms
2019-10-21 10:57:46.243 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 59.943000000000005ms
2019-10-21 10:57:46.245 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 54.988600000000005ms
2019-10-21 10:57:46.247 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.249 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.251 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.253 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 97.43440000000001ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.259 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 98.402ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.261 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:46.264 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 101.39920000000001ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.266 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 60.5411ms
2019-10-21 10:57:46.269 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 10:57:46.271 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.274 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 119.4461ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.276 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:46.278 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.281 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 10:57:46.283 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 10:57:46.286 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:46.288 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.292 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:46.294 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 114.6175ms
2019-10-21 10:57:46.296 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.298 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 147.3014ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.300 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 17.4689ms
2019-10-21 10:57:46.302 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.304 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.692ms 200 text/html; charset=utf-8
2019-10-21 10:57:46.306 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 128.2722ms
2019-10-21 10:57:46.308 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 10:57:46.310 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 162.3963ms 200 text/html; charset=utf-8
2019-10-21 10:57:47.996 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=01%2F01%2F0001%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:57:47.998 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:57:48.000 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:57:48.003 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:57:48.006 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:48.010 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:57:48.013 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:57:48.016 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:57:48.019 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 3.22ms.
2019-10-21 10:57:48.969 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:57:48.970 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:57:48.973 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.8536ms 404 
2019-10-21 10:57:48.976 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:57:48.978 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.675500000000001ms 200 text/css
2019-10-21 10:57:49.299 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1296.2178000000001ms
2019-10-21 10:57:49.301 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:57:49.305 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1308.5555000000002ms 200 application/pdf
2019-10-21 10:58:14.519 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=01%2F01%2F0001%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 10:58:14.522 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:58:14.523 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 10:58:14.526 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 10:58:14.529 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:58:14.537 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 10:58:14.541 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 10:58:14.549 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 10:58:14.552 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 2.5132000000000003ms.
2019-10-21 10:58:15.549 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 10:58:15.550 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 10:58:15.553 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5494000000000003ms 404 
2019-10-21 10:58:15.559 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 10:58:15.562 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.9507ms 200 text/css
2019-10-21 10:58:15.884 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1358.2313000000001ms
2019-10-21 10:58:15.886 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 10:58:15.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1369.8413ms 200 application/pdf
2019-10-21 11:01:18.278 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:01:18.286 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:01:18.288 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:01:18.290 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:01:18.323 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:18.617 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 11:01:18.680 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 11:01:18.807 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 11:01:19.010 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 11:01:19.018 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 11:01:19.020 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 11:01:19.039 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 11:01:19.047 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 11:01:19.087 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:01:19.112 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 11:01:19.136 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:01:19.286 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 152.5701ms.
2019-10-21 11:01:19.297 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 174.82840000000002ms
2019-10-21 11:01:19.300 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:01:19.305 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 266.0245ms 200 text/html; charset=utf-8
2019-10-21 11:01:20.949 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 11:01:20.955 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 11:01:20.960 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 11:01:20.973 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 11:01:21.029 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 57.0686ms.
2019-10-21 11:01:21.031 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 69.0146ms
2019-10-21 11:01:21.033 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 11:01:21.035 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 87.19930000000001ms 200 text/html; charset=utf-8
2019-10-21 11:01:23.429 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 11:01:23.441 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 11:01:23.450 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 11:01:23.484 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 11:01:23.490 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:23.563 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 11:01:23.694 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 11:01:23.734 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 11:01:23.766 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 11:01:23.779 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 11:01:23.793 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 11:01:23.806 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 11:01:23.816 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 11:01:23.829 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 375.9426ms
2019-10-21 11:01:23.831 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 11:01:23.838 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 408.19190000000003ms 200 application/json; charset=utf-8
2019-10-21 11:01:23.846 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 11:01:23.856 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:01:23.858 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 11:01:23.861 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:01:23.874 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.089ms.
2019-10-21 11:01:23.879 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 15.5099ms
2019-10-21 11:01:23.882 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:01:23.885 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.7826ms 200 text/html; charset=utf-8
2019-10-21 11:01:26.238 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 11:01:26.250 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:01:26.256 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:26.262 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:01:26.311 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:26.338 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.354 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.371 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.374 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.379 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.382 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.387 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.390 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.394 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.398 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.402 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.405 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.408 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.411 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:26.419 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 159.0722ms.
2019-10-21 11:01:26.425 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 162.3608ms
2019-10-21 11:01:26.427 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:01:26.430 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 192.49790000000002ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.090 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 11:01:28.093 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 11:01:28.096 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 11:01:28.098 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 11:01:28.101 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 11:01:28.103 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 11:01:28.105 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.107 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.109 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.111 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.113 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.115 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.119 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.121 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.123 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.125 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.126 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.128 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.135 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.136 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.138 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.140 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.141 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.143 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.145 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.147 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.150 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.155 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.159 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.162 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.167 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.171 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.173 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.175 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.177 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.180 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.183 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 53.0555ms
2019-10-21 11:01:28.185 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.187 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.189 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 57.737300000000005ms
2019-10-21 11:01:28.190 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.192 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.194 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.4534ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.196 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 72.1537ms
2019-10-21 11:01:28.198 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 94.4503ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.201 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.203 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.208 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 11:01:28.210 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 111.8088ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.213 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.215 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:01:28.217 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.219 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:01:28.221 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 92.9405ms
2019-10-21 11:01:28.223 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.225 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:28.226 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 132.4994ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.230 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.233 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:28.236 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 18.2198ms
2019-10-21 11:01:28.238 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.6164ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.251 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:01:28.252 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:01:28.273 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 150.6146ms
2019-10-21 11:01:28.275 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 142.8745ms
2019-10-21 11:01:28.276 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.278 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:01:28.280 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 189.7708ms 200 text/html; charset=utf-8
2019-10-21 11:01:28.281 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 191.34720000000002ms 200 text/html; charset=utf-8
2019-10-21 11:01:29.890 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 11:01:29.893 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:01:29.899 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 11:01:38.453 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:01:38.462 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:01:38.475 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:01:38.501 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:01:38.511 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 11:01:38.528 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 18.000400000000003ms.
2019-10-21 11:01:39.793 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 11:01:39.795 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 11:01:39.800 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.6509ms 404 
2019-10-21 11:01:39.809 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 11:01:39.811 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.1797ms 200 text/css
2019-10-21 11:01:40.174 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 10272.3267ms
2019-10-21 11:01:40.177 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:01:40.181 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10290.810800000001ms 200 application/pdf
2019-10-21 11:03:41.118 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 11:03:41.122 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 11:03:41.127 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 11:03:41.132 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:41.174 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 11:03:41.228 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:03:41.236 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.0515ms.
2019-10-21 11:03:41.242 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 109.0532ms
2019-10-21 11:03:41.244 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 11:03:41.247 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 128.92260000000002ms 200 text/html; charset=utf-8
2019-10-21 11:03:41.401 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571645021274  
2019-10-21 11:03:41.404 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 11:03:41.412 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 11:03:41.420 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 11:03:41.422 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 11:03:41.424 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:41.429 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 11:03:41.456 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 11:03:41.465 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 11:03:41.559 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 94.0779ms.
2019-10-21 11:03:41.561 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 147.1952ms
2019-10-21 11:03:41.562 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 11:03:41.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 162.41070000000002ms 200 text/html; charset=utf-8
2019-10-21 11:03:41.569 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 11:03:41.570 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 11:03:41.573 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 11:03:41.574 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 11:03:41.579 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 11:03:41.581 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 11:03:41.601 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:41.602 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:41.609 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:03:41.625 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 11:03:41.629 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 47.3799ms
2019-10-21 11:03:41.631 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 11:03:41.633 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 64.05550000000001ms 200 image/jpeg
2019-10-21 11:03:41.905 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 11:03:41.907 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 324.9105ms
2019-10-21 11:03:41.909 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 11:03:41.910 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 341.6881ms 200 image/jpeg
2019-10-21 11:03:44.510 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/3?_=1571645021275  
2019-10-21 11:03:44.516 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 11:03:44.523 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 11:03:44.529 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:44.537 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:03:44.590 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:03:44.595 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 11:03:44.600 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 11:03:44.649 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 49.495400000000004ms.
2019-10-21 11:03:44.652 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 125.7913ms
2019-10-21 11:03:44.654 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 11:03:44.656 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 146.93380000000002ms 200 text/html; charset=utf-8
2019-10-21 11:03:44.662 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=450&height=300  
2019-10-21 11:03:44.667 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 11:03:44.669 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 11:03:44.672 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:44.676 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/3?_=1571645021276  
2019-10-21 11:03:44.680 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 11:03:44.686 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 11:03:44.694 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:44.711 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 11:03:44.754 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 11:03:44.762 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 11:03:44.777 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 15.1973ms.
2019-10-21 11:03:44.780 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 90.9131ms
2019-10-21 11:03:44.783 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 11:03:44.790 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 108.9996ms 200 text/html; charset=utf-8
2019-10-21 11:03:44.916 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 11:03:44.920 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 247.39970000000002ms
2019-10-21 11:03:44.923 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 11:03:44.926 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 263.6162ms 200 image/jpeg
2019-10-21 11:03:47.749 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Dishes/EditModal/3 multipart/form-data; boundary=---------------------------7e32e72f6a11b2 1208
2019-10-21 11:03:47.753 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 11:03:47.770 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(Int32, CateringPro.Models.Dish, System.Collections.Generic.List`1[System.String]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 11:03:47.793 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:47.871 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 10), @p2='?' (DbType = Int32), @p3='?' (Size = 255), @p4='?' (Size = 100), @p5='?' (DbType = Int32), @p6='?' (DbType = Decimal)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Dishes] SET [CategoriesId] = @p0, [Code] = @p1, [CompanyId] = @p2, [Description] = @p3, [Name] = @p4, [PictureId] = @p5, [Price] = @p6
WHERE [Id] = @p7;
SELECT @@ROWCOUNT;
2019-10-21 11:03:47.917 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__dish_Id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId]
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__dish_Id_0) AND @__dish_Id_0 IS NOT NULL
2019-10-21 11:03:47.924 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType5`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 11:03:47.927 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 154.8092ms
2019-10-21 11:03:47.929 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 11:03:47.932 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 183.1999ms 200 application/json; charset=utf-8
2019-10-21 11:03:47.939 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571645021277  
2019-10-21 11:03:47.942 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 11:03:47.944 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 11:03:47.946 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 11:03:47.949 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 11:03:47.952 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:47.955 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 11:03:47.958 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 11:03:47.962 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 11:03:47.972 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 9.5585ms.
2019-10-21 11:03:47.974 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 28.082900000000002ms
2019-10-21 11:03:47.976 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 11:03:47.978 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.2918ms 200 text/html; charset=utf-8
2019-10-21 11:03:56.781 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 11:03:56.784 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:03:56.786 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:56.789 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:03:56.793 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:56.802 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.813 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.825 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.829 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.833 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.836 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.840 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.843 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.846 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.850 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.854 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.857 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.861 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.864 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:56.872 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 79.9407ms.
2019-10-21 11:03:56.875 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 86.1311ms
2019-10-21 11:03:56.878 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:03:56.880 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 99.2694ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.697 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 11:03:58.703 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 11:03:58.705 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 11:03:58.712 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 11:03:58.718 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.722 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.724 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.726 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.728 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.729 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.731 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.733 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.735 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 11:03:58.736 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 11:03:58.738 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.740 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.741 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.743 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.745 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.746 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.748 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.750 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.752 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.753 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.755 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.757 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.759 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.761 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.762 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.765 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.768 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.770 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.772 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.775 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.778 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.782 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.784 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.786 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.788 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.791 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.793 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 30.1601ms
2019-10-21 11:03:58.796 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.802 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 69.8412ms
2019-10-21 11:03:58.804 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.806 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.809 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:03:58.815 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.817 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 109.50460000000001ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.820 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:03:58.822 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 106.59230000000001ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.825 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 48.0705ms
2019-10-21 11:03:58.827 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 89.8764ms
2019-10-21 11:03:58.830 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 11:03:58.832 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.834 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.837 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 131.03820000000002ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.839 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 133.0466ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.842 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.847 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 115.1984ms
2019-10-21 11:03:58.849 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 111.4889ms
2019-10-21 11:03:58.853 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:03:58.855 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.856 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.858 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:03:58.861 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 157.5585ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.863 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 162.043ms 200 text/html; charset=utf-8
2019-10-21 11:03:58.866 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:03:58.870 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.873 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:03:58.876 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 20.758100000000002ms
2019-10-21 11:03:58.878 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:03:58.880 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 52.627500000000005ms 200 text/html; charset=utf-8
2019-10-21 11:04:00.397 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 11:04:00.402 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:04:00.405 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 11:04:00.408 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:04:00.416 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:04:00.420 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:04:00.425 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:04:00.435 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 11:04:00.442 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 7.4825ms.
2019-10-21 11:04:01.438 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 11:04:01.440 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 11:04:01.443 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2679ms 404 
2019-10-21 11:04:01.446 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 11:04:01.448 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.7018ms 200 text/css
2019-10-21 11:04:01.792 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 1383.2826ms
2019-10-21 11:04:01.794 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:04:01.797 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1399.9438ms 200 application/pdf
2019-10-21 11:06:52.667 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:06:52.676 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:06:52.678 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:06:52.680 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:06:52.724 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:53.030 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 11:06:53.092 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 11:06:53.215 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 11:06:53.464 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 11:06:53.471 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 11:06:53.473 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 11:06:53.491 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 11:06:53.498 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 11:06:53.554 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:06:53.586 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 11:06:53.615 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:06:53.773 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 162.6131ms.
2019-10-21 11:06:53.787 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 192.0483ms
2019-10-21 11:06:53.789 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:06:53.797 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 305.0568ms 200 text/html; charset=utf-8
2019-10-21 11:06:57.174 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 11:06:57.181 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:06:57.186 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:57.190 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:06:57.226 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:57.316 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.361 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.381 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.385 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.391 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.394 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.399 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.402 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.406 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.410 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.414 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.417 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.422 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.425 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:57.439 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 244.7578ms.
2019-10-21 11:06:57.441 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 253.1013ms
2019-10-21 11:06:57.443 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:06:57.448 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 273.00890000000004ms 200 text/html; charset=utf-8
2019-10-21 11:06:58.924 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 11:06:58.931 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 11:06:58.935 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 11:06:58.936 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 11:06:58.938 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 11:06:58.940 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 11:06:58.951 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:58.954 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:58.956 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:58.958 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:58.960 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:58.962 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:58.965 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:58.967 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:58.970 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:58.973 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:58.974 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:58.976 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:58.984 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:58.986 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:58.989 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:58.991 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:58.993 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:58.995 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:59.026 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.027 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.029 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.031 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.035 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.039 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.042 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.047 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.051 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.054 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.056 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.059 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.081 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.085 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.091 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.094 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.097 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 120.8922ms
2019-10-21 11:06:59.099 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 113.1503ms
2019-10-21 11:06:59.102 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.105 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 125.23150000000001ms
2019-10-21 11:06:59.107 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.109 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.111 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 175.7408ms 200 text/html; charset=utf-8
2019-10-21 11:06:59.113 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.115 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 176.8535ms 200 text/html; charset=utf-8
2019-10-21 11:06:59.118 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 147.7023ms
2019-10-21 11:06:59.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 179.9805ms 200 text/html; charset=utf-8
2019-10-21 11:06:59.126 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.128 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 11:06:59.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 192.4837ms 200 text/html; charset=utf-8
2019-10-21 11:06:59.133 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.138 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:06:59.142 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:06:59.145 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:06:59.149 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:06:59.156 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 16.1493ms
2019-10-21 11:06:59.158 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.160 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.448ms 200 text/html; charset=utf-8
2019-10-21 11:06:59.192 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:06:59.193 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:06:59.273 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 303.4814ms
2019-10-21 11:06:59.274 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 297.4911ms
2019-10-21 11:06:59.276 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.278 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:06:59.279 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 347.9078ms 200 text/html; charset=utf-8
2019-10-21 11:06:59.281 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 356.59970000000004ms 200 text/html; charset=utf-8
2019-10-21 11:07:00.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 11:07:00.894 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:07:00.915 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 11:07:00.926 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:07:00.929 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:07:00.937 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:07:00.963 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:07:05.084 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 11:07:42.188 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 37107.3268ms.
2019-10-21 11:07:43.357 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 11:07:43.359 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 11:07:43.365 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.792400000000001ms 404 
2019-10-21 11:07:43.375 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 11:07:43.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.0597ms 200 text/css
2019-10-21 11:07:43.738 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 42820.2863ms
2019-10-21 11:07:43.742 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:07:43.750 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42858.821500000005ms 200 application/pdf
2019-10-21 11:09:32.058 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:09:32.066 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:09:32.069 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:09:32.071 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:09:32.105 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:32.447 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 11:09:32.513 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 11:09:32.642 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 11:09:32.872 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 11:09:32.876 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 11:09:32.881 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 11:09:32.899 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 11:09:32.908 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 11:09:32.966 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:09:32.994 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 11:09:33.011 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:09:33.157 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 147.1094ms.
2019-10-21 11:09:33.165 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 163.3012ms
2019-10-21 11:09:33.169 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:09:33.174 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 275.49830000000003ms 200 text/html; charset=utf-8
2019-10-21 11:09:35.961 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 11:09:35.973 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:09:35.988 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:35.991 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:09:36.025 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:36.100 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.139 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.159 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.162 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.167 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.170 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.174 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.177 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.181 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.184 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.188 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.191 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.195 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.198 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:36.206 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 215.4813ms.
2019-10-21 11:09:36.213 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 220.8631ms
2019-10-21 11:09:36.216 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 11:09:36.219 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 257.6421ms 200 text/html; charset=utf-8
2019-10-21 11:09:37.675 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sun%20Oct%2013%202019  
2019-10-21 11:09:37.680 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Mon%20Oct%2014%202019  
2019-10-21 11:09:37.683 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Tue%20Oct%2015%202019  
2019-10-21 11:09:37.686 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Wed%20Oct%2016%202019  
2019-10-21 11:09:37.688 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Fri%20Oct%2018%202019  
2019-10-21 11:09:37.690 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Thu%20Oct%2017%202019  
2019-10-21 11:09:37.703 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.705 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.707 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.709 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.711 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.712 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.718 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.720 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.721 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.723 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.724 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.726 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.735 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.737 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.739 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.741 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.742 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.744 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.775 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.777 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.779 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.781 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.783 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.785 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.790 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.793 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.795 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.797 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.801 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.804 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.805 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.807 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.810 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 85.93130000000001ms
2019-10-21 11:09:37.812 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 83.7222ms
2019-10-21 11:09:37.814 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 87.9467ms
2019-10-21 11:09:37.816 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.818 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.821 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.822 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 135.964ms 200 text/html; charset=utf-8
2019-10-21 11:09:37.824 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 137.1199ms 200 text/html; charset=utf-8
2019-10-21 11:09:37.826 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.828 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.830 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 106.3203ms
2019-10-21 11:09:37.832 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders/CustomerOrderDayComponent?daydate=Sat%20Oct%2019%202019  
2019-10-21 11:09:37.855 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.859 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 145.7408ms 200 text/html; charset=utf-8
2019-10-21 11:09:37.863 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 173.2499ms 200 text/html; charset=utf-8
2019-10-21 11:09:37.867 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.870 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.873 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.876 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CustomerOrderDayComponent", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CustomerOrderDayComponent(System.DateTime) on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 11:09:37.879 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running CustomerOrdersComponent.
2019-10-21 11:09:37.881 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:37.885 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.887 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:37.890 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 12.2119ms
2019-10-21 11:09:37.892 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:37.894 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 63.273300000000006ms 200 text/html; charset=utf-8
2019-10-21 11:09:37.928 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:09:37.929 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:09:38.007 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 286.1334ms
2019-10-21 11:09:38.008 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro) in 278.7599ms
2019-10-21 11:09:38.010 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:38.012 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.CustomerOrderDayComponent (CateringPro)'
2019-10-21 11:09:38.014 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 337.98310000000004ms 200 text/html; charset=utf-8
2019-10-21 11:09:38.016 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 335.42810000000003ms 200 text/html; charset=utf-8
2019-10-21 11:09:39.287 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Invoice/Invoice?daydate=10%2F13%2F2019%2000%3A00%3A00&userid=27fb457f-8b4f-4a66-96ce-5e98ae2f1d91  
2019-10-21 11:09:39.292 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:09:39.297 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Invoice", controller = "Invoice"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Invoice(System.DateTime, System.String) on controller CateringPro.Controllers.InvoiceController (CateringPro).
2019-10-21 11:09:39.308 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:09:39.312 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:09:39.321 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Address1], [c].[Address2], [c].[City], [c].[Code], [c].[Country], [c].[Email], [c].[Name], [c].[Phone], [c].[ZipCode]
FROM [Companies] AS [c]
WHERE ([c].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:09:39.350 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Code], [t].[Name], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 11:09:43.555 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Invoice.
2019-10-21 11:09:43.568 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Invoice executed in 13.7888ms.
2019-10-21 11:09:44.827 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/invoice.css  
2019-10-21 11:09:44.829 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/img/logo.png  
2019-10-21 11:09:44.834 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.2369ms 404 
2019-10-21 11:09:44.841 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/invoice.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\invoice.css'
2019-10-21 11:09:44.843 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.9734ms 200 text/css
2019-10-21 11:09:45.205 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.InvoiceController.Invoice (CateringPro) in 5905.311500000001ms
2019-10-21 11:09:45.208 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.InvoiceController.Invoice (CateringPro)'
2019-10-21 11:09:45.215 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5927.2569ms 200 application/pdf
2019-10-21 11:51:25.168 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:51:25.181 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:51:25.184 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:51:25.187 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 11:51:25.226 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:51:25.736 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 11:51:25.870 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 11:51:26.082 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 11:51:26.325 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 11:51:26.333 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 11:51:26.334 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 11:51:26.354 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 11:51:26.363 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 11:51:26.440 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 11:51:26.533 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 11:51:26.699 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 11:51:26.747 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 11:51:26.759 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 11:51:26.775 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 11:51:26.788 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:51:26.817 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 11:51:26.836 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 11:51:26.984 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 148.246ms.
2019-10-21 11:51:26.988 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 168.0401ms
2019-10-21 11:51:26.996 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 11:51:27.003 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 650.0873ms 200 text/html; charset=utf-8
2019-10-21 13:01:31.383 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:01:31.399 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:01:31.402 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:01:31.426 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:01:31.500 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:31.855 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:01:31.938 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:01:32.093 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:01:32.321 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:01:32.329 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:01:32.331 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:01:32.350 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:01:32.360 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:01:32.405 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:01:32.434 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:01:32.458 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:01:32.609 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 152.59140000000002ms.
2019-10-21 13:01:32.622 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 180.4384ms
2019-10-21 13:01:32.624 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:01:32.630 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 279.3277ms 200 text/html; charset=utf-8
2019-10-21 13:01:34.379 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 13:01:34.386 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:01:34.393 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:01:34.412 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 13:01:34.476 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 65.1847ms.
2019-10-21 13:01:34.479 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 83.2346ms
2019-10-21 13:01:34.482 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:01:34.485 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.3461ms 200 text/html; charset=utf-8
2019-10-21 13:01:36.818 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 13:01:36.830 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:01:36.843 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:01:36.882 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 13:01:36.889 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:36.995 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 13:01:37.197 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:01:37.246 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:01:37.288 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 13:01:37.301 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 13:01:37.317 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 13:01:37.329 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 13:01:37.340 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 13:01:37.350 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 505.22470000000004ms
2019-10-21 13:01:37.353 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:01:37.358 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 540.5311ms 200 application/json; charset=utf-8
2019-10-21 13:01:37.367 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:01:37.376 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:01:37.378 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:01:37.381 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:01:37.392 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.2649ms.
2019-10-21 13:01:37.400 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 14.0526ms
2019-10-21 13:01:37.404 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:01:37.407 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.8798ms 200 text/html; charset=utf-8
2019-10-21 13:01:38.308 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:01:38.318 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:01:38.323 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:01:38.329 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:01:38.334 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:01:38.389 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:38.465 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.496 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.503 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.508 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.514 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.517 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.521 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.524 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.529 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.533 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.537 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.541 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.546 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.550 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:01:38.562 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 226.5951ms.
2019-10-21 13:01:38.567 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 233.3221ms
2019-10-21 13:01:38.571 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:01:38.574 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 265.8467ms 200 text/html; charset=utf-8
2019-10-21 13:01:53.002 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/DayDishes/EditDay  
2019-10-21 13:01:53.010 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:01:53.013 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.EditDay (CateringPro)'
2019-10-21 13:01:53.019 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditDay", controller = "DayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.ViewResult EditDay(System.DateTime) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:01:53.024 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view EditDay.
2019-10-21 13:01:53.038 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:53.055 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.085 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.093 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.101 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.110 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.118 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.127 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t0].[c], [t0].[Id], [t0].[Name], [t0].[PictureId], [t0].[c0]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT @__daydate_1 AS [c], [d].[Id], [d].[Name], [d].[PictureId], CASE
        WHEN (([t].[Date] = @__daydate_1) AND ([t].[Date] IS NOT NULL AND @__daydate_1 IS NOT NULL)) OR ([t].[Date] IS NULL AND @__daydate_1 IS NULL) THEN CAST(1 AS bit)
        ELSE CAST(0 AS bit)
    END AS [c0], [d].[CategoriesId]
    FROM [Dishes] AS [d]
    LEFT JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t0] ON [c].[Id] = [t0].[CategoriesId]
ORDER BY [c].[Id], [t0].[Id]
2019-10-21 13:01:53.142 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view EditDay executed in 116.1096ms.
2019-10-21 13:01:53.145 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.EditDay (CateringPro) in 123.51920000000001ms
2019-10-21 13:01:53.148 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.EditDay (CateringPro)'
2019-10-21 13:01:53.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 148.2541ms 200 text/html; charset=utf-8
2019-10-21 13:01:53.156 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/dishdayedit.js  
2019-10-21 13:01:53.175 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/dishdayedit.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\dishdayedit.js'
2019-10-21 13:01:53.178 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.4968ms 200 application/javascript
2019-10-21 13:01:56.687 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:01:56.693 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:01:56.695 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:56.705 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:01:56.713 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:56.721 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:01:56.849 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:01:56.879 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:01:56.884 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 177.75140000000002ms
2019-10-21 13:01:56.886 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:56.888 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 201.8625ms 200 application/json; charset=utf-8
2019-10-21 13:01:57.171 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:01:57.175 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:01:57.178 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:57.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:01:57.185 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:57.189 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:01:57.193 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:01:57.199 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:01:57.201 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 19.0422ms
2019-10-21 13:01:57.203 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:57.204 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.1811ms 200 application/json; charset=utf-8
2019-10-21 13:01:57.785 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:01:57.789 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:01:57.792 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:57.794 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:01:57.798 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:57.801 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:01:57.805 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:01:57.812 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:01:57.814 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 18.3976ms
2019-10-21 13:01:57.816 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:57.818 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.2539ms 200 application/json; charset=utf-8
2019-10-21 13:01:58.568 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:01:58.572 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:01:58.575 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:58.578 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:01:58.583 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:01:58.588 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:01:58.612 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:01:58.619 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:01:58.623 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 41.7137ms
2019-10-21 13:01:58.625 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:01:58.629 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 59.5324ms 200 application/json; charset=utf-8
2019-10-21 13:02:00.871 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:02:00.875 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:00.877 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:00.880 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:02:00.884 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:00.887 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:02:00.892 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:02:00.900 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:02:00.902 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 20.3975ms
2019-10-21 13:02:00.904 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:00.906 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.454100000000004ms 200 application/json; charset=utf-8
2019-10-21 13:02:01.320 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 53
2019-10-21 13:02:01.325 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:01.328 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:01.330 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:02:01.336 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:01.340 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:02:01.358 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [DayDish]
WHERE [Date] = @p0 AND [DishId] = @p1 AND [CompanyId] = @p2;
SELECT @@ROWCOUNT;
2019-10-21 13:02:01.506 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:02:01.509 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 176.1302ms
2019-10-21 13:02:01.511 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:01.515 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 193.2749ms 200 application/json; charset=utf-8
2019-10-21 13:02:02.363 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:02:02.367 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:02.369 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:02.372 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:02:02.377 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:02.382 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:02:02.387 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:02:02.396 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:02:02.398 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 24.6733ms
2019-10-21 13:02:02.400 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:02.403 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.6597ms 200 application/json; charset=utf-8
2019-10-21 13:02:05.368 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:02:05.371 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:05.374 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:05.377 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:02:05.381 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:05.385 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:02:05.392 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:02:05.400 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:02:05.403 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 24.0725ms
2019-10-21 13:02:05.405 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:05.407 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.313500000000005ms 200 application/json; charset=utf-8
2019-10-21 13:02:06.225 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:02:06.228 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:06.230 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:06.233 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:02:06.237 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:06.241 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:02:06.246 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:02:06.258 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:02:06.261 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 26.1313ms
2019-10-21 13:02:06.264 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:06.266 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.1841ms 200 application/json; charset=utf-8
2019-10-21 13:02:06.779 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/DayDishes/SaveDayDish application/x-www-form-urlencoded; charset=UTF-8 52
2019-10-21 13:02:06.782 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:06.783 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:06.786 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "SaveDayDish", controller = "DayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] SaveDayDish(Int32, System.DateTime, Boolean) on controller CateringPro.Controllers.DayDishesController (CateringPro).
2019-10-21 13:02:06.789 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:06.793 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__src_DishId_0='?' (DbType = Int32), @__src_Date_1='?' (DbType = Date), @__src_CompanyId_2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(2) [d].[Date], [d].[DishId], [d].[CompanyId]
FROM [DayDish] AS [d]
WHERE ((([d].[DishId] = @__src_DishId_0) AND @__src_DishId_0 IS NOT NULL) AND (([d].[Date] = @__src_Date_1) AND @__src_Date_1 IS NOT NULL)) AND (([d].[CompanyId] = @__src_CompanyId_2) AND @__src_CompanyId_2 IS NOT NULL)
2019-10-21 13:02:06.800 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Date), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [DayDish] ([Date], [DishId], [CompanyId])
VALUES (@p0, @p1, @p2);
2019-10-21 13:02:06.815 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type 'System.Int32'.
2019-10-21 13:02:06.817 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro) in 29.6341ms
2019-10-21 13:02:06.819 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DayDishesController.SaveDayDish (CateringPro)'
2019-10-21 13:02:06.821 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.9563ms 200 application/json; charset=utf-8
2019-10-21 13:02:07.633 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:02:07.636 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:02:07.638 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:02:07.641 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:02:07.643 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:02:07.648 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:07.655 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.699 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.704 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.709 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.713 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.723 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.727 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.731 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.735 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.738 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.742 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.746 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.750 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.753 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:02:07.762 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 114.2493ms.
2019-10-21 13:02:07.764 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 121.1541ms
2019-10-21 13:02:07.767 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:02:07.770 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:02:07.771 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:02:07.774 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 140.0865ms 200 text/html; charset=utf-8
2019-10-21 13:02:07.778 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:02:07.781 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:02:07.788 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:02:07.790 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:02:07.814 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:07.816 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:02:07.833 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:02:07.855 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:02:07.860 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 66.8691ms
2019-10-21 13:02:07.862 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:02:07.864 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.28490000000001ms 200 image/jpeg
2019-10-21 13:02:08.130 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:02:08.133 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 341.77410000000003ms
2019-10-21 13:02:08.135 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:02:08.137 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 368.5573ms 200 image/jpeg
2019-10-21 13:03:07.370 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Sun%20Oct%2027%202019  
2019-10-21 13:03:07.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Tue%20Oct%2029%202019  
2019-10-21 13:03:07.380 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Mon%20Oct%2028%202019  
2019-10-21 13:03:07.405 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Wed%20Oct%2030%202019  
2019-10-21 13:03:07.407 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Thu%20Oct%2031%202019  
2019-10-21 13:03:07.410 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Fri%20Nov%2001%202019  
2019-10-21 13:03:07.412 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.414 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.416 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.418 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.420 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.421 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.424 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.426 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.428 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.430 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.432 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.433 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.436 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.438 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.440 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.443 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.445 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.447 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.451 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.452 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.454 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.456 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.458 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.460 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.463 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.465 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.467 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.468 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.470 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.472 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.477 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.504 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.507 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.511 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.513 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.515 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.517 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.519 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.521 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.524 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.527 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.529 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 88.8673ms
2019-10-21 13:03:07.531 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 87.2393ms
2019-10-21 13:03:07.533 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.535 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.537 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.539 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 88.1738ms
2019-10-21 13:03:07.541 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 99.2673ms
2019-10-21 13:03:07.543 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 166.6327ms 200 text/html; charset=utf-8
2019-10-21 13:03:07.545 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.547 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 170.7744ms 200 text/html; charset=utf-8
2019-10-21 13:03:07.550 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 175.4384ms 200 text/html; charset=utf-8
2019-10-21 13:03:07.551 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.554 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 85.1388ms
2019-10-21 13:03:07.556 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 171.8805ms 200 text/html; charset=utf-8
2019-10-21 13:03:07.559 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.561 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Sat%20Nov%2002%202019  
2019-10-21 13:03:07.563 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 155.49280000000002ms 200 text/html; charset=utf-8
2019-10-21 13:03:07.566 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 81.2679ms
2019-10-21 13:03:07.568 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.570 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 163.6731ms 200 text/html; charset=utf-8
2019-10-21 13:03:07.575 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:07.577 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.579 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:07.581 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:07.583 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:07.588 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.627 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:07.663 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 81.933ms
2019-10-21 13:03:07.666 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:07.668 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 112.3858ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.441 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Sun%20Oct%2020%202019  
2019-10-21 13:03:08.444 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Mon%20Oct%2021%202019  
2019-10-21 13:03:08.447 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Tue%20Oct%2022%202019  
2019-10-21 13:03:08.449 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Thu%20Oct%2024%202019  
2019-10-21 13:03:08.452 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.453 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Fri%20Oct%2025%202019  
2019-10-21 13:03:08.455 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.457 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.459 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.461 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.462 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.464 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.466 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.468 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.469 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.471 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.473 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.476 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.478 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.480 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.481 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.483 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.485 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.486 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.488 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.490 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.493 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.494 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Wed%20Oct%2023%202019  
2019-10-21 13:03:08.497 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.499 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.502 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.504 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.506 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.509 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.511 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.513 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.515 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.518 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.520 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.523 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.528 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.532 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.552 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.555 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 89.1123ms
2019-10-21 13:03:08.559 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.561 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 117.3052ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Sat%20Oct%2026%202019  
2019-10-21 13:03:08.567 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:08.569 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.571 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:08.574 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:03:08.576 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:08.580 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.583 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.586 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.588 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 106.1577ms
2019-10-21 13:03:08.590 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.593 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 145.2304ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.595 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 22.1415ms
2019-10-21 13:03:08.597 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.599 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.3537ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.621 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.625 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 156.2153ms
2019-10-21 13:03:08.627 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.629 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 187.73680000000002ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.647 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.650 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 171.4031ms
2019-10-21 13:03:08.654 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.658 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 212.74120000000002ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.676 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.680 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 180.2701ms
2019-10-21 13:03:08.682 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.684 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 237.6438ms 200 text/html; charset=utf-8
2019-10-21 13:03:08.705 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:08.736 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 215.95600000000002ms
2019-10-21 13:03:08.738 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:03:08.740 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 294.7144ms 200 text/html; charset=utf-8
2019-10-21 13:03:22.102 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:03:22.108 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:03:22.108 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:03:22.108 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:03:22.135 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:22.330 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:03:22.377 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:03:22.490 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:03:22.609 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:03:22.610 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:03:22.610 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:03:22.621 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:03:22.628 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:03:22.664 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:03:22.686 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:03:22.700 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:03:22.798 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 100.3803ms.
2019-10-21 13:03:22.799 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 112.6631ms
2019-10-21 13:03:22.799 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:03:22.806 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 185.9092ms 200 text/html; charset=utf-8
2019-10-21 13:03:24.608 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 13:03:24.613 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:03:24.617 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:03:24.627 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 13:03:24.655 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 28.630300000000002ms.
2019-10-21 13:03:24.655 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 37.8016ms
2019-10-21 13:03:24.655 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:03:24.655 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.4874ms 200 text/html; charset=utf-8
2019-10-21 13:03:26.821 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 13:03:26.828 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:03:26.844 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:03:26.890 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 13:03:26.897 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:26.995 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 13:03:27.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:03:27.173 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:03:27.197 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 13:03:27.204 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 13:03:27.215 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 13:03:27.221 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 13:03:27.226 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 13:03:27.231 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 386.9873ms
2019-10-21 13:03:27.232 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:03:27.234 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 413.85630000000003ms 200 application/json; charset=utf-8
2019-10-21 13:03:27.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:03:27.243 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:03:27.243 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:03:27.244 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:03:27.249 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 4.742900000000001ms.
2019-10-21 13:03:27.249 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 5.4652ms
2019-10-21 13:03:27.249 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:03:27.249 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.1126ms 200 text/html; charset=utf-8
2019-10-21 13:03:28.272 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:03:28.278 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:03:28.279 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:03:28.283 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:03:28.285 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:03:28.333 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:28.400 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.445 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.450 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.454 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.456 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.464 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.466 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.468 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.469 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.470 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.472 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.473 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.475 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.476 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:03:28.482 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 197.383ms.
2019-10-21 13:03:28.482 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 198.7552ms
2019-10-21 13:03:28.482 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:03:28.482 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 209.6878ms 200 text/html; charset=utf-8
2019-10-21 13:03:28.488 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:03:28.488 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:03:28.491 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:03:28.491 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:03:28.495 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:03:28.495 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:03:28.503 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:28.503 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:03:28.516 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:03:28.541 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:03:28.544 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 48.678200000000004ms
2019-10-21 13:03:28.544 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:03:28.544 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.4711ms 200 image/jpeg
2019-10-21 13:03:28.785 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:03:28.786 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 290.70480000000003ms
2019-10-21 13:03:28.786 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:03:28.786 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 298.3508ms 200 image/jpeg
2019-10-21 13:05:18.411 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:05:18.414 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:05:18.414 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:05:18.415 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:05:18.415 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:05:18.418 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:05:18.423 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.460 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.491 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.522 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.554 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.586 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.588 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.589 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.591 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.593 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.595 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.597 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.598 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.599 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:05:18.601 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 185.8548ms.
2019-10-21 13:05:18.601 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 186.3402ms
2019-10-21 13:05:18.601 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:05:18.601 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 190.45520000000002ms 200 text/html; charset=utf-8
2019-10-21 13:05:18.606 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:05:18.606 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:05:18.606 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 13:05:18.606 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:05:18.607 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 13:05:18.607 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 13:05:18.610 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:05:18.610 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:05:18.610 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:05:18.610 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:05:18.611 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-10-21 13:05:18.611 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-10-21 13:05:18.611 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-10-21 13:05:18.611 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:05:18.611 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:05:18.613 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.6224ms 304 application/javascript
2019-10-21 13:05:18.613 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.890000000000001ms 304 text/css
2019-10-21 13:05:18.613 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4428ms 304 text/css
2019-10-21 13:05:18.613 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:05:18.614 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 13:05:18.614 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 13:05:18.614 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 13:05:18.614 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-10-21 13:05:18.614 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-10-21 13:05:18.614 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 13:05:18.615 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4354ms 304 text/css
2019-10-21 13:05:18.615 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5595ms 304 application/javascript
2019-10-21 13:05:18.615 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.39680000000000004ms 304 application/javascript
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2031ms 304 text/css
2019-10-21 13:05:18.616 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.34990000000000004ms 304 application/javascript
2019-10-21 13:05:18.617 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9715ms 304 text/css
2019-10-21 13:05:18.617 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 13:05:18.617 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-10-21 13:05:18.617 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2985ms 304 application/javascript
2019-10-21 13:05:18.618 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:05:18.618 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 8.3009ms
2019-10-21 13:05:18.619 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:05:18.619 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.4928ms 200 image/jpeg
2019-10-21 13:05:18.629 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 13:05:18.629 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.0331ms 200 text/css
2019-10-21 13:05:18.680 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 13:05:18.680 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-10-21 13:05:18.681 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4797ms 304 font/woff2
2019-10-21 13:05:18.770 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:05:18.770 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 159.86520000000002ms
2019-10-21 13:05:18.770 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:05:18.770 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 164.0258ms 200 image/jpeg
2019-10-21 13:10:35.174 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:10:35.180 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:10:35.180 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:10:35.180 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:10:35.205 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:10:35.393 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:10:35.451 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:10:35.575 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:10:35.712 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:10:35.713 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:10:35.713 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:10:35.725 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:10:35.732 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:10:35.775 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:10:35.802 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:10:35.818 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:10:35.938 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 122.1717ms.
2019-10-21 13:10:35.939 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 137.2391ms
2019-10-21 13:10:35.939 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:10:35.949 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 224.45950000000002ms 200 text/html; charset=utf-8
2019-10-21 13:10:35.953 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:10:35.959 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:10:35.961 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.2542ms 304 text/css
2019-10-21 13:10:38.934 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 13:10:38.937 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:10:38.940 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:10:38.948 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 13:10:38.978 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 30.5513ms.
2019-10-21 13:10:38.978 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 37.987500000000004ms
2019-10-21 13:10:38.978 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:10:38.978 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.1659ms 200 text/html; charset=utf-8
2019-10-21 13:10:41.629 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 13:10:41.638 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:10:41.646 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:10:41.668 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 13:10:41.671 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:10:41.732 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 13:10:41.849 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:10:41.872 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:10:41.898 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 13:10:41.909 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 13:10:41.923 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 13:10:41.931 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 13:10:41.941 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 13:10:41.948 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 301.96000000000004ms
2019-10-21 13:10:41.948 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:10:41.952 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 322.83430000000004ms 200 application/json; charset=utf-8
2019-10-21 13:10:41.962 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:10:41.966 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:10:41.966 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:10:41.967 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:10:41.976 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.814300000000001ms.
2019-10-21 13:10:41.976 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 9.870800000000001ms
2019-10-21 13:10:41.976 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:10:41.976 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.6319ms 200 text/html; charset=utf-8
2019-10-21 13:10:43.297 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:10:43.303 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:10:43.304 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:10:43.307 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:10:43.309 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:10:43.354 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:10:43.421 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.483 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.487 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.491 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.494 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.502 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.505 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.506 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.508 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.510 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.513 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.514 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.516 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.518 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:10:43.524 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 215.4495ms.
2019-10-21 13:10:43.524 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 216.8555ms
2019-10-21 13:10:43.524 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:10:43.524 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 227.0976ms 200 text/html; charset=utf-8
2019-10-21 13:10:43.531 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:10:43.531 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:10:43.534 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:10:43.534 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:10:43.541 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:10:43.541 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:10:43.546 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:10:43.546 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:10:43.560 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:10:43.586 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:10:43.588 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 47.182700000000004ms
2019-10-21 13:10:43.588 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:10:43.589 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 57.142700000000005ms 200 image/jpeg
2019-10-21 13:10:43.817 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:10:43.817 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 275.90000000000003ms
2019-10-21 13:10:43.817 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:10:43.817 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 286.5256ms 200 image/jpeg
2019-10-21 13:13:56.429 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:13:56.435 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:13:56.435 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:13:56.435 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:13:56.460 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:13:56.661 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:13:56.715 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:13:56.854 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:13:57.060 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:13:57.061 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:13:57.061 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:13:57.074 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:13:57.079 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:13:57.118 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:13:57.143 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:13:57.158 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:13:57.278 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 121.29960000000001ms.
2019-10-21 13:13:57.279 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 135.8692ms
2019-10-21 13:13:57.279 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:13:57.286 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 212.87830000000002ms 200 text/html; charset=utf-8
2019-10-21 13:13:57.286 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:13:57.290 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:13:57.292 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.880800000000001ms 304 text/css
2019-10-21 13:14:04.303 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:14:04.310 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:14:04.310 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:14:04.315 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:14:04.318 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:14:04.349 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:04.465 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.544 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.546 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.552 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.557 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.558 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.561 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.569 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.571 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.573 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.574 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.575 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.578 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.579 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.580 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.582 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.584 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.585 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.587 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.588 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.589 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:04.596 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 279.7293ms.
2019-10-21 13:14:04.597 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 281.9005ms
2019-10-21 13:14:04.597 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:14:04.598 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 295.1556ms 200 text/html; charset=utf-8
2019-10-21 13:14:04.604 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:14:04.604 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:14:04.621 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:04.621 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:04.626 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:14:04.626 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:14:04.684 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:04.684 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:04.744 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:14:04.824 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:14:04.827 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 200.46210000000002ms
2019-10-21 13:14:04.827 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:04.829 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 224.9961ms 200 image/jpeg
2019-10-21 13:14:04.996 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:14:04.996 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 369.92830000000004ms
2019-10-21 13:14:04.996 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:04.996 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 392.64390000000003ms 200 image/jpeg
2019-10-21 13:14:29.128 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:14:29.133 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:14:29.133 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:14:29.134 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:14:29.158 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:29.344 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:14:29.392 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:14:29.501 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:14:29.619 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:14:29.620 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:14:29.620 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:14:29.631 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:14:29.637 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:14:29.683 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:14:29.685 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:14:29.710 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:14:29.721 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:14:29.778 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:29.913 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.020 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.022 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.028 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.034 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.037 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.047 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.048 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.051 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.052 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.054 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.056 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.057 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.058 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.060 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.062 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.063 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.064 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.066 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.067 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:14:30.139 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 417.52270000000004ms.
2019-10-21 13:14:30.141 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 431.21360000000004ms
2019-10-21 13:14:30.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 13:14:30.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 13:14:30.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 13:14:30.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 13:14:30.142 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 13:14:30.142 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:14:30.147 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-10-21 13:14:30.147 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-10-21 13:14:30.147 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-10-21 13:14:30.147 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-10-21 13:14:30.147 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-10-21 13:14:30.147 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 516.9234ms 200 text/html; charset=utf-8
2019-10-21 13:14:30.149 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.6926000000000005ms 304 text/css
2019-10-21 13:14:30.150 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.6878ms 304 text/css
2019-10-21 13:14:30.150 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.274000000000001ms 304 text/css
2019-10-21 13:14:30.150 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.0212ms 304 text/css
2019-10-21 13:14:30.150 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.4176ms 304 text/css
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3902ms 304 text/css
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 13:14:30.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 13:14:30.152 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 13:14:30.152 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-10-21 13:14:30.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3302ms 304 application/javascript
2019-10-21 13:14:30.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7756000000000001ms 304 application/javascript
2019-10-21 13:14:30.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 13:14:30.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4721ms 304 application/javascript
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4120000000000001ms 304 application/javascript
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-10-21 13:14:30.154 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1249ms 304 application/javascript
2019-10-21 13:14:30.157 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:30.157 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:30.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:14:30.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:14:30.222 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 13:14:30.222 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-10-21 13:14:30.222 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.444ms 304 font/woff2
2019-10-21 13:14:30.225 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:30.225 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:14:30.280 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:14:30.343 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:14:30.347 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 174.9956ms
2019-10-21 13:14:30.348 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:30.350 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 199.05550000000002ms 200 image/jpeg
2019-10-21 13:14:30.550 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:14:30.551 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 378.4271ms
2019-10-21 13:14:30.551 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:14:30.551 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 399.85020000000003ms 200 image/jpeg
2019-10-21 13:16:33.010 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:16:33.016 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:16:33.016 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:16:33.016 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:16:33.043 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:16:33.236 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:16:33.281 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:16:33.385 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:16:33.499 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:16:33.499 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:16:33.499 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:16:33.510 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:16:33.516 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:16:33.565 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:16:33.567 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:16:33.589 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:16:33.602 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:16:33.656 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:16:33.784 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.886 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.889 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.895 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.899 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.900 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.904 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.914 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.916 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.919 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.920 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.922 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.924 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.925 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.927 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.930 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.931 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.933 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.935 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.937 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:33.939 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:16:34.016 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 416.20520000000005ms.
2019-10-21 13:16:34.018 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 428.2945ms
2019-10-21 13:16:34.019 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 13:16:34.019 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:16:34.019 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 13:16:34.019 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 13:16:34.019 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:16:34.019 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:16:34.023 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 513.2828000000001ms 200 text/html; charset=utf-8
2019-10-21 13:16:34.023 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:16:34.023 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-10-21 13:16:34.023 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-10-21 13:16:34.023 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-10-21 13:16:34.025 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4539ms 304 text/css
2019-10-21 13:16:34.025 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:16:34.025 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.791600000000001ms 304 text/css
2019-10-21 13:16:34.026 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.6021ms 304 text/css
2019-10-21 13:16:34.026 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.6273ms 304 text/css
2019-10-21 13:16:34.028 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 13:16:34.028 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-10-21 13:16:34.028 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 13:16:34.028 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5221ms 304 text/css
2019-10-21 13:16:34.028 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-10-21 13:16:34.028 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3529ms 304 application/javascript
2019-10-21 13:16:34.030 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 13:16:34.030 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:16:34.030 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-10-21 13:16:34.030 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.34440000000000004ms 304 application/javascript
2019-10-21 13:16:34.032 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 13:16:34.033 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 13:16:34.033 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4219ms 304 application/javascript
2019-10-21 13:16:34.033 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 13:16:34.034 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 13:16:34.034 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-10-21 13:16:34.034 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-10-21 13:16:34.034 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2488000000000001ms 304 application/javascript
2019-10-21 13:16:34.034 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.40750000000000003ms 304 text/css
2019-10-21 13:16:34.036 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 13:16:34.036 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-10-21 13:16:34.036 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3924ms 304 application/javascript
2019-10-21 13:16:34.041 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:16:34.047 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:16:34.048 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:16:34.094 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 13:16:34.094 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-10-21 13:16:34.095 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.747ms 304 font/woff2
2019-10-21 13:16:34.096 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:16:34.096 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:16:34.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:16:34.216 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:16:34.219 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 171.46470000000002ms
2019-10-21 13:16:34.220 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:16:34.222 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 192.27200000000002ms 200 image/jpeg
2019-10-21 13:16:34.393 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:16:34.394 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 352.87600000000003ms
2019-10-21 13:16:34.394 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:16:34.394 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 375.0772ms 200 image/jpeg
2019-10-21 13:26:50.529 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:26:50.540 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:26:50.544 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:26:50.547 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:26:50.584 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:26:50.890 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:26:50.954 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:26:51.081 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:26:51.295 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:26:51.304 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:26:51.306 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:26:51.334 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:26:51.347 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:26:51.416 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:26:51.450 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:26:51.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:26:51.643 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:26:51.640 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 161.883ms.
2019-10-21 13:26:51.647 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 193.5526ms
2019-10-21 13:26:51.651 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:26:51.659 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 325.10830000000004ms 200 text/html; charset=utf-8
2019-10-21 13:26:51.662 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:26:51.672 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.9603ms 304 text/css
2019-10-21 13:26:56.045 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:26:56.059 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:26:56.061 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:26:56.069 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:26:56.074 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:26:56.110 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:26:56.238 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.328 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.333 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.341 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.348 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.352 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.357 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.368 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.373 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.377 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.381 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.386 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.391 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.395 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.399 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.404 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.409 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.413 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.418 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.422 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.428 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:26:56.444 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 364.4886ms.
2019-10-21 13:26:56.448 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 375.19050000000004ms
2019-10-21 13:26:56.450 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:26:56.452 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:26:56.455 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:26:56.459 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 415.7321ms 200 text/html; charset=utf-8
2019-10-21 13:26:56.476 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:26:56.479 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:26:56.488 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:26:56.490 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:26:56.550 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:26:56.552 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:26:56.602 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:26:56.674 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:26:56.679 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 187.21620000000001ms
2019-10-21 13:26:56.682 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:26:56.686 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 234.7623ms 200 image/jpeg
2019-10-21 13:26:56.852 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:26:56.855 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 364.1264ms
2019-10-21 13:26:56.857 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:26:56.859 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 408.5797ms 200 image/jpeg
2019-10-21 13:30:36.609 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:30:36.617 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:30:36.618 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:30:36.618 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:30:36.650 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:30:36.894 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:30:36.946 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:30:37.076 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:30:37.222 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:30:37.223 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:30:37.223 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:30:37.234 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:30:37.240 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:30:37.299 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:30:37.332 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:30:37.347 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:30:37.489 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 142.63230000000001ms.
2019-10-21 13:30:37.498 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 166.44240000000002ms
2019-10-21 13:30:37.498 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:30:37.504 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:30:37.504 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 269.7669ms 200 text/html; charset=utf-8
2019-10-21 13:30:37.511 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:30:37.512 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.8802ms 304 text/css
2019-10-21 13:30:39.680 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:30:39.689 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:30:39.690 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:30:39.694 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:30:39.697 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:30:39.726 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:30:39.841 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.915 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.918 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.923 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.926 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.928 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.930 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.937 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.938 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.940 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.942 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.943 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.945 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.946 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.947 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.949 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.950 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.952 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.954 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.955 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.956 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:30:39.964 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 267.3113ms.
2019-10-21 13:30:39.964 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 269.2629ms
2019-10-21 13:30:39.964 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:30:39.970 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 289.9963ms 200 text/html; charset=utf-8
2019-10-21 13:30:39.971 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:30:39.971 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:30:39.989 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:30:39.989 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:30:39.993 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:30:39.993 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:30:40.042 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:30:40.042 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:30:40.100 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:30:40.176 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:30:40.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 185.75310000000002ms
2019-10-21 13:30:40.179 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:30:40.181 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 210.06310000000002ms 200 image/jpeg
2019-10-21 13:30:40.338 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:30:40.338 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 345.7326ms
2019-10-21 13:30:40.338 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:30:40.339 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 367.52770000000004ms 200 image/jpeg
2019-10-21 13:31:14.092 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:31:14.102 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:31:14.104 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:31:14.105 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:31:14.138 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:31:14.518 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:31:14.585 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:31:14.722 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:31:14.945 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:31:14.953 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:31:14.977 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:31:15.031 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:31:15.047 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:31:15.091 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:31:15.126 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:31:15.151 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:31:15.307 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 157.4952ms.
2019-10-21 13:31:15.318 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 181.9973ms
2019-10-21 13:31:15.321 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:31:15.329 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 300.4053ms 200 text/html; charset=utf-8
2019-10-21 13:31:27.159 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 13:31:27.166 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:31:27.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:31:27.184 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 13:31:27.219 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 35.9202ms.
2019-10-21 13:31:27.222 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 46.9743ms
2019-10-21 13:31:27.224 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:31:27.226 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 67.9731ms 200 text/html; charset=utf-8
2019-10-21 13:31:29.289 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 13:31:29.298 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:31:29.308 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:31:29.338 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 13:31:29.346 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:31:29.423 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 13:31:29.595 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:31:29.637 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:31:29.670 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 13:31:29.685 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 13:31:29.703 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 13:31:29.715 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 13:31:29.725 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 13:31:29.736 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 426ms
2019-10-21 13:31:29.739 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:31:29.745 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 455.1335ms 200 application/json; charset=utf-8
2019-10-21 13:31:29.753 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:31:29.759 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:31:29.761 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:31:29.764 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:31:29.771 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 7.1206000000000005ms.
2019-10-21 13:31:29.776 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 11.2873ms
2019-10-21 13:31:29.779 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:31:29.782 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.939300000000003ms 200 text/html; charset=utf-8
2019-10-21 13:32:39.308 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:32:39.317 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:32:39.319 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:32:39.321 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:32:39.356 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:32:39.680 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:32:39.771 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:32:39.909 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:32:40.120 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:32:40.127 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:32:40.129 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:32:40.147 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:32:40.157 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:32:40.220 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:32:40.252 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:32:40.269 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:32:40.425 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 152.5112ms.
2019-10-21 13:32:40.429 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 174.2824ms
2019-10-21 13:32:40.431 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:32:40.436 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 289.8213ms 200 text/html; charset=utf-8
2019-10-21 13:32:42.102 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:32:42.113 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:32:42.116 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:32:42.123 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:32:42.128 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:32:42.165 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:43:09.697 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:43:09.707 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:43:09.709 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:43:09.710 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:43:09.744 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:43:10.097 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:43:10.178 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:43:10.319 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:43:10.562 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:43:10.565 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:43:10.572 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:43:10.590 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:43:10.600 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:43:10.652 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:43:10.680 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:43:10.703 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:43:10.844 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 143.847ms.
2019-10-21 13:43:10.853 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 165.734ms
2019-10-21 13:43:10.855 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:43:10.857 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:43:10.863 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 274.2403ms 200 text/html; charset=utf-8
2019-10-21 13:43:10.874 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:43:10.878 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.710800000000003ms 304 text/css
2019-10-21 13:45:12.402 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:45:12.410 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:45:12.412 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:45:12.414 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:45:12.452 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:45:12.840 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:45:12.916 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:45:13.052 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:45:13.271 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:45:13.278 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:45:13.280 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:45:13.298 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:45:13.308 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:45:13.351 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:45:13.379 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:45:13.402 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:45:13.549 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 147.8109ms.
2019-10-21 13:45:13.559 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 174.1312ms
2019-10-21 13:45:13.561 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:45:13.568 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 269.1857ms 200 text/html; charset=utf-8
2019-10-21 13:45:16.495 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 13:45:16.502 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:45:16.508 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:45:16.521 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 13:45:16.573 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 52.5245ms.
2019-10-21 13:45:16.574 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 64.8315ms
2019-10-21 13:45:16.576 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 13:45:16.577 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 84.2929ms 200 text/html; charset=utf-8
2019-10-21 13:45:18.777 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 13:45:18.788 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:45:18.797 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 13:45:18.837 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 13:45:18.842 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:45:18.925 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 13:45:19.088 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:45:19.122 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 13:45:19.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 13:45:19.164 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 13:45:19.178 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 13:45:19.187 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 13:45:19.196 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 13:45:19.205 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 405.2797ms
2019-10-21 13:45:19.207 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 13:45:19.212 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 435.38ms 200 application/json; charset=utf-8
2019-10-21 13:45:19.221 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:45:19.228 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:45:19.230 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:45:19.234 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:45:19.241 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 7.937200000000001ms.
2019-10-21 13:45:19.250 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 11.2561ms
2019-10-21 13:45:19.254 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:45:19.256 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.1505ms 200 text/html; charset=utf-8
2019-10-21 13:46:57.597 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:46:57.607 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:46:57.609 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:46:57.612 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:46:57.652 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:46:58.045 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:46:58.116 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:46:58.255 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:46:58.454 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:46:58.462 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:46:58.463 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:46:58.481 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:46:58.490 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:46:58.554 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:46:58.594 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:46:58.613 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:46:58.765 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 152.03050000000002ms.
2019-10-21 13:46:58.769 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 172.4822ms
2019-10-21 13:46:58.776 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:46:58.782 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 301.29560000000004ms 200 text/html; charset=utf-8
2019-10-21 13:47:00.733 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:47:00.743 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:47:00.745 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:47:00.755 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:47:00.760 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:47:00.804 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:47:00.954 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.046 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.052 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.060 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.067 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.071 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.078 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.092 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.097 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.102 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.107 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.110 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.116 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.121 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.126 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.132 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.137 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.141 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.147 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.155 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:47:01.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 406.54720000000003ms.
2019-10-21 13:47:01.174 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 416.85900000000004ms
2019-10-21 13:47:01.177 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:47:01.181 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:47:01.188 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:47:01.189 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:47:01.193 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 452.4318ms 200 text/html; charset=utf-8
2019-10-21 13:47:01.201 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:47:01.207 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.5166ms 304 text/css
2019-10-21 13:47:01.216 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:47:01.218 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:47:01.225 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:47:01.228 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:47:01.288 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:47:01.289 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:47:01.345 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:47:01.427 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:47:01.433 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 204.8673ms
2019-10-21 13:47:01.435 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:47:01.440 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 262.4469ms 200 image/jpeg
2019-10-21 13:47:01.626 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:47:01.630 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 396.58270000000005ms
2019-10-21 13:47:01.633 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:47:01.635 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 457.55850000000004ms 200 image/jpeg
2019-10-21 13:49:06.650 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:49:06.660 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:49:06.662 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:49:06.665 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:49:06.701 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:49:07.053 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:49:07.122 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:49:07.256 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:49:07.464 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:49:07.472 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:49:07.474 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:49:07.492 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:49:07.500 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:49:07.557 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:49:07.588 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:49:07.604 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:49:07.752 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 150.34480000000002ms.
2019-10-21 13:49:07.759 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 164.9767ms
2019-10-21 13:49:07.765 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:49:07.772 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 279.0384ms 200 text/html; charset=utf-8
2019-10-21 13:49:11.445 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:49:11.458 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:49:11.462 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:49:11.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:49:11.473 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:49:11.511 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:49:11.638 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.725 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.731 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.739 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.745 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.748 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.753 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.763 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.767 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.771 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.775 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.778 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.782 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.786 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.789 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.793 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.797 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.800 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.804 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.808 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.812 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:49:11.826 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 348.3421ms.
2019-10-21 13:49:11.828 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 357.2875ms
2019-10-21 13:49:11.830 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:49:11.832 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:49:11.834 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:49:11.838 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 393.0061ms 200 text/html; charset=utf-8
2019-10-21 13:49:11.855 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:49:11.858 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:49:11.866 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:49:11.868 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:49:11.926 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:49:11.928 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:49:11.976 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:49:12.049 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:49:12.076 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 185.3595ms
2019-10-21 13:49:12.085 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:49:12.094 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 261.8715ms 200 image/jpeg
2019-10-21 13:49:12.283 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:49:12.285 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 415.31080000000003ms
2019-10-21 13:49:12.287 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:49:12.289 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 455.254ms 200 image/jpeg
2019-10-21 13:49:15.601 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 13:49:15.602 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 13:49:15.605 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 13:49:15.618 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 13:49:15.623 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.7664ms 404 
2019-10-21 13:49:15.625 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.6678ms 404 
2019-10-21 13:49:15.627 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.7239ms 404 
2019-10-21 13:49:15.630 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.442700000000002ms 404 
2019-10-21 13:50:01.365 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:01.373 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:01.373 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:01.373 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:01.408 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:01.638 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:50:01.689 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:50:01.801 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:50:01.986 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:50:01.986 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:50:01.986 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:50:01.998 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 13:50:02.003 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:50:02.042 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:50:02.066 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 13:50:02.078 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:50:02.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 102.5145ms.
2019-10-21 13:50:02.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 113.7074ms
2019-10-21 13:50:02.181 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 13:50:02.186 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 187.6149ms 200 text/html; charset=utf-8
2019-10-21 13:50:04.346 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:50:04.352 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:50:04.352 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:50:04.357 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:50:04.359 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:50:04.388 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:04.504 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.581 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.584 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.588 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.592 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.594 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.597 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.604 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.606 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.608 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.610 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.611 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.613 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.614 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.615 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.618 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.619 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.621 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.623 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.624 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.625 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:04.632 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 273.44460000000004ms.
2019-10-21 13:50:04.632 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 275.2226ms
2019-10-21 13:50:04.632 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:50:04.635 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 289.7825ms 200 text/html; charset=utf-8
2019-10-21 13:50:04.639 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:50:04.640 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:50:04.656 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:04.656 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:04.660 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:50:04.660 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:50:04.709 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:04.709 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:04.764 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:50:04.837 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:50:04.840 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 179.42270000000002ms
2019-10-21 13:50:04.841 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:04.843 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 203.6663ms 200 image/jpeg
2019-10-21 13:50:04.994 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:50:04.995 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 334.1589ms
2019-10-21 13:50:04.995 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:04.995 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 355.23420000000004ms 200 image/jpeg
2019-10-21 13:50:41.670 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:41.676 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:41.676 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:41.676 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:50:41.705 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:41.900 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:50:41.949 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:50:42.068 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:50:42.193 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:50:42.193 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:50:42.193 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:50:42.206 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:50:42.212 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:50:42.258 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:50:42.259 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:50:42.281 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:50:42.292 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:50:42.346 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:42.483 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.587 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.589 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.593 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.597 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.598 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.601 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.610 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.613 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.615 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.617 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.618 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.620 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.622 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.624 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.627 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.629 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.630 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.632 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.633 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.633 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:50:42.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 13:50:42.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:50:42.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:50:42.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 13:50:42.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 13:50:42.715 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 418.7473ms.
2019-10-21 13:50:42.717 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 435.362ms
2019-10-21 13:50:42.717 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:50:42.720 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-10-21 13:50:42.720 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-10-21 13:50:42.720 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-10-21 13:50:42.722 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.342700000000001ms 304 application/javascript
2019-10-21 13:50:42.722 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.3883ms 304 text/css
2019-10-21 13:50:42.722 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 516.3716000000001ms 200 text/html; charset=utf-8
2019-10-21 13:50:42.723 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.6871ms 304 application/javascript
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.41250000000000003ms 304 application/javascript
2019-10-21 13:50:42.724 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3104ms 304 text/css
2019-10-21 13:50:42.725 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 13:50:42.725 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-10-21 13:50:42.726 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3758ms 304 text/css
2019-10-21 13:50:42.726 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 13:50:42.726 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 13:50:42.727 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4269ms 304 application/javascript
2019-10-21 13:50:42.727 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 13:50:42.727 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5621ms 304 text/css
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.364ms 304 text/css
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3917ms 304 application/javascript
2019-10-21 13:50:42.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.29810000000000003ms 304 text/css
2019-10-21 13:50:42.739 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:50:42.740 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:50:42.792 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:42.792 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:50:42.796 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 13:50:42.797 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-10-21 13:50:42.797 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4489ms 304 font/woff2
2019-10-21 13:50:42.841 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:50:42.904 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:50:42.908 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 168.0722ms
2019-10-21 13:50:42.908 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:42.910 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 194.9624ms 200 image/jpeg
2019-10-21 13:50:43.093 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:50:43.093 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 353.8976ms
2019-10-21 13:50:43.093 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:50:43.094 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 378.33090000000004ms 200 image/jpeg
2019-10-21 13:57:24.163 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:57:24.169 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:57:24.169 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:57:24.169 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 13:57:24.194 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:24.380 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 13:57:24.426 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 13:57:24.535 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 13:57:24.650 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 13:57:24.651 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 13:57:24.651 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 13:57:24.662 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:57:24.668 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 13:57:24.725 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:24.726 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:57:24.742 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:24.751 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:57:24.802 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:24.919 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.009 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.011 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.017 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.020 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.021 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.032 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.036 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.037 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.039 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.041 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.042 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.043 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.045 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.047 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.048 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.050 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.051 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.053 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:25.119 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 368.0464ms.
2019-10-21 13:57:25.122 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 379.3055ms
2019-10-21 13:57:25.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 13:57:25.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:57:25.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 13:57:25.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 13:57:25.122 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 13:57:25.123 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:57:25.127 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap.min.css was not modified
2019-10-21 13:57:25.127 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 465.2706ms 200 text/html; charset=utf-8
2019-10-21 13:57:25.127 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.bootstrap-duallistbox.js was not modified
2019-10-21 13:57:25.127 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap.min.js was not modified
2019-10-21 13:57:25.127 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css was not modified
2019-10-21 13:57:25.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.8414ms 304 application/javascript
2019-10-21 13:57:25.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1696ms 304 application/javascript
2019-10-21 13:57:25.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.813000000000001ms 304 text/css
2019-10-21 13:57:25.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1725ms 304 text/css
2019-10-21 13:57:25.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 13:57:25.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 13:57:25.130 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/jquery.min.js was not modified
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.40390000000000004ms 304 text/css
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=2fVlcFVK5tGqXUF0dZ_rNAyqNwebwsSEszTeLk6F7qk  
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.49360000000000004ms 304 application/javascript
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.2421ms 304 application/javascript
2019-10-21 13:57:25.131 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 13:57:25.132 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/bootstrap-duallistbox.css was not modified
2019-10-21 13:57:25.132 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.42850000000000005ms 304 text/css
2019-10-21 13:57:25.132 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:57:25.132 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/carousel.css was not modified
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3417000000000001ms 304 text/css
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap-input-spinner.js  
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/css/font-awesome.css was not modified
2019-10-21 13:57:25.133 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/bootstrap-input-spinner.js was not modified
2019-10-21 13:57:25.134 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8093ms 304 application/javascript
2019-10-21 13:57:25.134 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.728ms 304 text/css
2019-10-21 13:57:25.146 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:25.147 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:25.150 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:25.194 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 13:57:25.194 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /lib/font-awesome/fonts/fontawesome-webfont.woff2 was not modified
2019-10-21 13:57:25.194 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.42850000000000005ms 304 font/woff2
2019-10-21 13:57:25.198 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:25.198 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:25.240 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:57:25.304 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:25.307 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 156.3647ms
2019-10-21 13:57:25.308 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:25.309 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 177.4733ms 200 image/jpeg
2019-10-21 13:57:25.476 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:25.476 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 328.6739ms
2019-10-21 13:57:25.476 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:25.476 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 354.27250000000004ms 200 image/jpeg
2019-10-21 13:57:37.002 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Sun%20Oct%2027%202019  
2019-10-21 13:57:37.009 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Mon%20Oct%2028%202019  
2019-10-21 13:57:37.009 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.010 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.010 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Tue%20Oct%2029%202019  
2019-10-21 13:57:37.011 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Wed%20Oct%2030%202019  
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.016 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Thu%20Oct%2031%202019  
2019-10-21 13:57:37.017 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.017 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.018 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.018 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.018 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.018 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.018 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Fri%20Nov%2001%202019  
2019-10-21 13:57:37.019 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.019 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.019 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.019 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.022 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.022 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.022 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.022 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.023 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.023 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.024 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.029 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.030 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.031 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.032 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.034 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.034 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.035 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.035 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.035 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 18.3142ms
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 18.463ms
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.036 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.037 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 18.3492ms
2019-10-21 13:57:37.037 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.037 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.5529ms 200 text/html; charset=utf-8
2019-10-21 13:57:37.037 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.578900000000004ms 200 text/html; charset=utf-8
2019-10-21 13:57:37.037 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.454900000000002ms 200 text/html; charset=utf-8
2019-10-21 13:57:37.038 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/UserDayDishes/EditUserDayComponent?daydate=Sat%20Nov%2002%202019  
2019-10-21 13:57:37.038 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 18.914ms
2019-10-21 13:57:37.038 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.038 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.038 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.7441ms 200 text/html; charset=utf-8
2019-10-21 13:57:37.039 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:37.039 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.039 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditUserDayComponent", controller = "UserDayDishes"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult EditUserDayComponent(System.DateTime) on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:37.039 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewComponentResult: Executing ViewComponentResult, running UserDayDishComponent.
2019-10-21 13:57:37.039 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 22.162200000000002ms
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 21.5587ms
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.1098ms 200 text/html; charset=utf-8
2019-10-21 13:57:37.040 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.1921ms 200 text/html; charset=utf-8
2019-10-21 13:57:37.042 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.043 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.045 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:37.045 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro) in 6.4782ms
2019-10-21 13:57:37.045 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.EditUserDayComponent (CateringPro)'
2019-10-21 13:57:37.045 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.799300000000001ms 200 text/html; charset=utf-8
2019-10-21 13:57:45.091 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 13:57:45.096 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 13:57:45.096 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:57:45.097 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 13:57:45.099 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:57:45.103 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:45.106 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.118 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.120 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.122 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.125 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.127 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.143 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.151 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.155 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.157 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.157 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.160 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.161 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.162 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.163 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.164 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.165 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.166 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.167 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.169 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 13:57:45.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 73.91ms.
2019-10-21 13:57:45.172 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 74.81230000000001ms
2019-10-21 13:57:45.172 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 13:57:45.173 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 81.2594ms 200 text/html; charset=utf-8
2019-10-21 13:57:45.179 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 13:57:45.179 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 13:57:45.180 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:45.180 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:45.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:45.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:45.181 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:45.181 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:45.183 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:57:45.185 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:45.185 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 4.941800000000001ms
2019-10-21 13:57:45.185 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:45.186 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.963ms 200 image/jpeg
2019-10-21 13:57:45.338 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:45.339 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 158.3303ms
2019-10-21 13:57:45.339 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:45.339 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 160.6082ms 200 image/jpeg
2019-10-21 13:57:47.791 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 13:57:47.793 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 13:57:47.797 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 13:57:47.800 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:47.827 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 13:57:47.877 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 13:57:47.882 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 6.2961ms.
2019-10-21 13:57:47.882 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 84.9783ms
2019-10-21 13:57:47.882 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 13:57:47.883 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 91.8752ms 200 text/html; charset=utf-8
2019-10-21 13:57:48.138 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571655467917  
2019-10-21 13:57:48.140 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 13:57:48.149 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 13:57:48.155 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 13:57:48.156 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 13:57:48.156 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:48.161 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 13:57:48.186 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 13:57:48.196 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 13:57:48.274 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 78.522ms.
2019-10-21 13:57:48.274 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 125.0896ms
2019-10-21 13:57:48.274 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 13:57:48.274 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 136.4797ms 200 text/html; charset=utf-8
2019-10-21 13:57:48.278 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 13:57:48.278 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 13:57:48.279 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:48.279 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:48.279 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:48.279 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:48.280 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:48.280 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:48.281 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:57:48.282 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:48.283 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 3.2474000000000003ms
2019-10-21 13:57:48.283 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:48.283 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.981800000000001ms 200 image/jpeg
2019-10-21 13:57:48.310 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:48.310 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 31.007900000000003ms
2019-10-21 13:57:48.310 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:48.310 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.784600000000005ms 200 image/jpeg
2019-10-21 13:57:51.461 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/1?_=1571655467918  
2019-10-21 13:57:51.464 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 13:57:51.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 13:57:51.470 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:51.476 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:57:51.499 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:57:51.502 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 13:57:51.504 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 13:57:51.549 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 45.461000000000006ms.
2019-10-21 13:57:51.549 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 81.84400000000001ms
2019-10-21 13:57:51.549 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 13:57:51.550 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 89.2555ms 200 text/html; charset=utf-8
2019-10-21 13:57:51.554 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=450&height=300  
2019-10-21 13:57:51.554 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:51.554 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 13:57:51.555 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:51.556 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 13:57:51.557 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 13:57:51.557 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 2.6313ms
2019-10-21 13:57:51.557 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 13:57:51.557 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.4076ms 200 image/jpeg
2019-10-21 13:57:51.582 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/1?_=1571655467919  
2019-10-21 13:57:51.583 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 13:57:51.588 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 13:57:51.591 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 13:57:51.605 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 13:57:51.616 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 13:57:51.618 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 13:57:51.623 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 5.6016ms.
2019-10-21 13:57:51.624 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 35.4874ms
2019-10-21 13:57:51.624 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 13:57:51.624 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.632400000000004ms 200 text/html; charset=utf-8
2019-10-21 15:10:33.426 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:10:33.436 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:10:33.437 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:10:33.438 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:10:33.473 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:10:33.789 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:10:33.857 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:10:33.976 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:10:34.173 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:10:34.181 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:10:34.182 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:10:34.200 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:10:34.208 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:10:34.249 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:10:34.278 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:10:34.302 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:10:34.454 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 153.012ms.
2019-10-21 15:10:34.465 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 176.5744ms
2019-10-21 15:10:34.468 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:10:34.471 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:10:34.472 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=9h-lED1fWV44LrjzcBOBQADLBvQ7elnBiDCe3FKV9Hw  
2019-10-21 15:10:34.479 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 278.2558ms 200 text/html; charset=utf-8
2019-10-21 15:10:34.489 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 15:10:34.492 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.2453ms 304 text/css
2019-10-21 15:10:34.496 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 15:10:34.498 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.7163ms 200 application/javascript
2019-10-21 15:10:35.978 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 15:10:35.984 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:10:35.990 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:10:36.002 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 15:10:36.045 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 43.944900000000004ms.
2019-10-21 15:10:36.047 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 55.5153ms
2019-10-21 15:10:36.049 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:10:36.051 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 74.1774ms 200 text/html; charset=utf-8
2019-10-21 15:10:37.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 15:10:37.901 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:10:37.913 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:10:37.955 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 15:10:37.963 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:10:38.063 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 15:10:38.261 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:10:38.310 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:10:38.358 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 15:10:38.372 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 15:10:38.390 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 15:10:38.402 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 15:10:38.416 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 15:10:38.430 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 513.9054ms
2019-10-21 15:10:38.433 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:10:38.440 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 551.6853ms 200 application/json; charset=utf-8
2019-10-21 15:10:38.452 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:10:38.462 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:10:38.466 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:10:38.469 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:10:38.487 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 12.185400000000001ms.
2019-10-21 15:10:38.492 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 22.4948ms
2019-10-21 15:10:38.495 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:10:38.497 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.179700000000004ms 200 text/html; charset=utf-8
2019-10-21 15:10:40.191 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:10:40.204 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:10:40.206 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:10:40.213 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:10:40.246 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:10:40.253 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:10:40.274 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:10:40.281 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 66.04780000000001ms
2019-10-21 15:10:40.283 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:10:40.318 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The model item passed into the ViewDataDictionary is of type 'System.Collections.Generic.List`1[CateringPro.Models.Ingredients]', but this ViewDataDictionary instance requires a model item of type 'System.Collections.Generic.IEnumerable`1[CateringPro.Models.Categories]'.
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.EnsureCompatible(Object value)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary..ctor(ViewDataDictionary source, Object model, Type declaredModelType)
   at lambda_method(Closure , ViewDataDictionary )
   at Microsoft.AspNetCore.Mvc.Razor.RazorPagePropertyActivator.CreateViewDataDictionary(ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorPagePropertyActivator.Activate(Object page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorPageActivator.Activate(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageCoreAsync(IRazorPage page, ViewContext context)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderPageAsync(IRazorPage page, ViewContext context, Boolean invokeViewStarts)
   at Microsoft.AspNetCore.Mvc.Razor.RazorView.RenderAsync(ViewContext context)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ViewContext viewContext, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(ActionContext actionContext, IView view, ViewDataDictionary viewData, ITempDataDictionary tempData, String contentType, Nullable`1 statusCode)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)
   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|29_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeResultFilters()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-10-21 15:10:40.345 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 154.5837ms 500 text/html; charset=utf-8
2019-10-21 15:14:40.122 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:14:40.131 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:14:40.133 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:14:40.135 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:14:40.177 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:14:40.497 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:14:40.562 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:14:40.694 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:14:40.903 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:14:40.910 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:14:40.911 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:14:40.929 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:14:40.937 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:14:40.979 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:14:41.009 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:14:41.037 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:14:41.202 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 157.5915ms.
2019-10-21 15:14:41.207 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 194.6391ms
2019-10-21 15:14:41.209 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:14:41.217 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 287.86420000000004ms 200 text/html; charset=utf-8
2019-10-21 15:14:42.689 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 15:14:42.694 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:14:42.699 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:14:42.709 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 15:14:42.748 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 39.52ms.
2019-10-21 15:14:42.749 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 49.0245ms
2019-10-21 15:14:42.751 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:14:42.753 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 64.6369ms 200 text/html; charset=utf-8
2019-10-21 15:14:44.764 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 15:14:44.772 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:14:44.786 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:14:44.819 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 15:14:44.825 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:14:44.916 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 15:14:45.067 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:14:45.118 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:14:45.159 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 15:14:45.169 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 15:14:45.183 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 15:14:45.193 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 15:14:45.202 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 15:14:45.211 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 422.9977ms
2019-10-21 15:14:45.213 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:14:45.218 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 455.0144ms 200 application/json; charset=utf-8
2019-10-21 15:14:45.227 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:14:45.233 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:14:45.235 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:14:45.238 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:14:45.251 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.4053ms.
2019-10-21 15:14:45.259 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 16.729300000000002ms
2019-10-21 15:14:45.262 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:14:45.267 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.0611ms 200 text/html; charset=utf-8
2019-10-21 15:14:46.694 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:14:46.705 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:14:46.707 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:14:46.715 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:14:46.746 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:14:46.755 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:14:46.778 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:14:46.788 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.4199ms.
2019-10-21 15:14:46.794 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 73.9015ms
2019-10-21 15:14:46.797 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:14:46.801 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.0318ms 200 text/html; charset=utf-8
2019-10-21 15:15:42.881 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:15:42.892 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:15:42.893 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:15:42.895 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:15:42.927 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:15:43.276 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:15:43.340 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:15:43.462 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:15:43.665 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:15:43.672 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:15:43.674 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:15:43.696 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:15:43.704 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:15:43.749 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:15:43.777 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:15:43.800 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:15:43.952 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 152.90540000000001ms.
2019-10-21 15:15:43.964 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 177.7741ms
2019-10-21 15:15:43.966 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:15:43.973 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 276.9356ms 200 text/html; charset=utf-8
2019-10-21 15:15:45.538 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 15:15:45.543 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:15:45.548 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:15:45.560 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 15:15:45.602 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 43.4221ms.
2019-10-21 15:15:45.604 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 54.2036ms
2019-10-21 15:15:45.606 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:15:45.608 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 71.4551ms 200 text/html; charset=utf-8
2019-10-21 15:15:48.919 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 15:15:48.932 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:15:48.943 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:15:48.973 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 15:15:48.980 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:15:49.057 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 15:15:49.190 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:15:49.227 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:15:49.262 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 15:15:49.273 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 15:15:49.291 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 15:15:49.302 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 15:15:49.315 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 15:15:49.328 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 381.7278ms
2019-10-21 15:15:49.331 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:15:49.335 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 416.8453ms 200 application/json; charset=utf-8
2019-10-21 15:15:49.344 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:15:49.351 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:15:49.354 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:15:49.357 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:15:49.368 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.191ms.
2019-10-21 15:15:49.373 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 14.702200000000001ms
2019-10-21 15:15:49.376 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:15:49.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.922000000000004ms 200 text/html; charset=utf-8
2019-10-21 15:15:50.439 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/MyOrders  
2019-10-21 15:15:50.447 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:15:50.450 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 15:15:50.456 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "UserDayDishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.UserDayDishesController (CateringPro).
2019-10-21 15:15:50.460 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:15:50.511 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:15:50.592 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.678 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.683 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.692 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.699 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.703 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.709 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.719 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.723 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.728 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.732 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.737 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.742 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.746 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.749 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.754 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.758 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.763 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.769 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.774 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.779 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_3='?' (DbType = Date), @__companyid_0='?' (DbType = Int32), @__daydate_1='?' (DbType = Date), @__userId_2='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Code], [c].[Name], [c].[Id], [t3].[Id], [t3].[Name], [t3].[Price], [t3].[c], [t3].[PictureId], [t3].[CategoriesId], [t3].[Description], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[Name0], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[Name1], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
FROM [Categories] AS [c]
LEFT JOIN (
    SELECT [d].[Id], [d].[Name], [d].[Price], CASE
        WHEN (([t0].[Date] = @__daydate_3) AND ([t0].[Date] IS NOT NULL AND @__daydate_3 IS NOT NULL)) OR ([t0].[Date] IS NULL AND @__daydate_3 IS NULL) THEN [t0].[Quantity]
        ELSE 0
    END AS [c], [d].[PictureId], [d].[CategoriesId], [d].[Description], [t].[Date], [t].[DishId], [t].[CompanyId], [t1].[Name] AS [Name0], [t1].[DishId] AS [DishId0], [t1].[IngredientId], [t1].[Id] AS [Id0], [t2].[Name] AS [Name1], [t2].[DishId] AS [DishId1], [t2].[IngredientId] AS [IngredientId0], [t2].[Id] AS [Id1]
    FROM [Dishes] AS [d]
    INNER JOIN (
        SELECT [d0].[Date], [d0].[DishId], [d0].[CompanyId]
        FROM [DayDish] AS [d0]
        WHERE (([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d0].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t] ON [d].[Id] = [t].[DishId]
    LEFT JOIN (
        SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
        FROM [UserDayDish] AS [u]
        WHERE ((([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[UserId] = @__userId_2) AND @__userId_2 IS NOT NULL)) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
    ) AS [t0] ON [d].[Id] = [t0].[DishId]
    LEFT JOIN (
        SELECT [i].[Name], [d1].[DishId], [d1].[IngredientId], [i].[Id]
        FROM [DishIngredients] AS [d1]
        INNER JOIN [Ingredients] AS [i] ON [d1].[IngredientId] = [i].[Id]
    ) AS [t1] ON [d].[Id] = [t1].[DishId]
    LEFT JOIN (
        SELECT [i0].[Name], [d2].[DishId], [d2].[IngredientId], [i0].[Id]
        FROM [DishIngredients] AS [d2]
        INNER JOIN [Ingredients] AS [i0] ON [d2].[IngredientId] = [i0].[Id]
    ) AS [t2] ON [d].[Id] = [t2].[DishId]
    WHERE ([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t3] ON [c].[Id] = [t3].[CategoriesId]
ORDER BY [c].[Id], [t3].[Id], [t3].[Date], [t3].[DishId], [t3].[CompanyId], [t3].[DishId0], [t3].[IngredientId], [t3].[Id0], [t3].[DishId1], [t3].[IngredientId0], [t3].[Id1]
2019-10-21 15:15:50.794 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 328.7737ms.
2019-10-21 15:15:50.800 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.UserDayDishesController.Index (CateringPro) in 338.497ms
2019-10-21 15:15:50.801 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=30&height=30  
2019-10-21 15:15:50.804 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=30&height=30  
2019-10-21 15:15:50.806 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.UserDayDishesController.Index (CateringPro)'
2019-10-21 15:15:50.809 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 370.6755ms 200 text/html; charset=utf-8
2019-10-21 15:15:50.813 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:15:50.815 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:15:50.823 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 15:15:50.825 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 15:15:50.850 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:15:50.851 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:15:50.863 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 15:15:50.884 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 15:15:50.890 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 64.2317ms
2019-10-21 15:15:50.891 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:15:50.893 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 96.78630000000001ms 200 image/jpeg
2019-10-21 15:15:51.154 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 15:15:51.157 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 329.4309ms
2019-10-21 15:15:51.159 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:15:51.161 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 364.08910000000003ms 200 image/jpeg
2019-10-21 15:15:53.252 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:15:53.257 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:15:53.259 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:15:53.265 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:15:53.268 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:15:53.278 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:15:53.297 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:15:53.308 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.8392ms.
2019-10-21 15:15:53.313 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 45.0116ms
2019-10-21 15:15:53.315 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:15:53.317 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 65.7753ms 200 text/html; charset=utf-8
2019-10-21 15:15:57.760 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:15:57.764 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:15:57.762 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:15:57.767 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:15:57.771 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:15:57.777 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:15:57.786 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:15:57.788 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:15:57.790 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:15:57.792 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.0133ms 200 text/css
2019-10-21 15:15:57.795 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.174400000000002ms 200 text/css
2019-10-21 15:15:57.798 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.4943ms 200 text/css
2019-10-21 15:15:57.804 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:15:57.810 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:15:57.815 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:15:57.823 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:15:57.829 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.997300000000003ms 200 text/css
2019-10-21 15:15:57.832 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:15:57.837 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.4701ms 200 text/css
2019-10-21 15:15:57.841 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:15:57.844 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:15:57.846 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:15:57.850 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:15:57.852 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 81.0997ms 200 text/css
2019-10-21 15:15:57.866 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 90.8681ms 200 text/css
2019-10-21 15:15:57.878 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:15:57.880 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:15:57.883 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 121.32690000000001ms 200 text/css
2019-10-21 15:15:57.885 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.9311ms 200 text/css
2019-10-21 15:15:57.888 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:15:57.891 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:15:57.893 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 86.9145ms 200 text/css
2019-10-21 15:15:57.896 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:15:57.898 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.121700000000004ms 200 text/css
2019-10-21 15:15:57.902 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:15:57.905 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.9479ms 404 
2019-10-21 15:15:57.908 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:15:57.910 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.1194ms 200 text/css
2019-10-21 15:15:57.922 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:15:57.925 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9770000000000003ms 404 
2019-10-21 15:15:57.954 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:15:57.957 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7269ms 404 
2019-10-21 15:15:57.959 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:15:57.961 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5767ms 404 
2019-10-21 15:16:43.983 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:16:43.993 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:16:43.996 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:16:43.997 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:16:44.028 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:16:44.346 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:16:44.409 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:16:44.547 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:16:44.749 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:16:44.756 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:16:44.758 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:16:44.775 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:16:44.783 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:16:44.822 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:16:44.851 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:16:44.874 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:16:45.041 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 168.5671ms.
2019-10-21 15:16:45.052 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 190.9289ms
2019-10-21 15:16:45.055 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:16:45.061 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 286.0676ms 200 text/html; charset=utf-8
2019-10-21 15:16:46.427 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 15:16:46.433 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:16:46.439 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:16:46.451 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 15:16:46.495 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 44.7043ms.
2019-10-21 15:16:46.497 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 55.9773ms
2019-10-21 15:16:46.499 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:16:46.501 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 75.7001ms 200 text/html; charset=utf-8
2019-10-21 15:16:48.563 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 15:16:48.575 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:16:48.587 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:16:48.626 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 15:16:48.632 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:16:48.721 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 15:16:48.946 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:16:49.000 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:16:49.043 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 15:16:49.059 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 15:16:49.079 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 15:16:49.093 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 15:16:49.105 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 15:16:49.119 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 529.5412ms
2019-10-21 15:16:49.123 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:16:49.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 566.3306ms 200 application/json; charset=utf-8
2019-10-21 15:16:49.140 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:16:49.150 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:16:49.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:16:49.157 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:16:49.173 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.305ms.
2019-10-21 15:16:49.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 19.2989ms
2019-10-21 15:16:49.182 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:16:49.186 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.788000000000004ms 200 text/html; charset=utf-8
2019-10-21 15:16:50.733 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:16:50.742 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:16:50.744 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:16:50.750 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:16:50.782 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:16:50.789 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:16:50.809 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:16:50.818 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.488ms.
2019-10-21 15:16:50.824 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 68.4813ms
2019-10-21 15:16:50.837 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:16:50.841 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.3477ms 200 text/html; charset=utf-8
2019-10-21 15:16:50.883 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingedients/ListItems?searchcriteria=&_=1571660210853  
2019-10-21 15:16:50.890 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1086ms 404 
2019-10-21 15:16:54.282 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:16:54.284 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:16:54.287 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:16:54.289 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:16:54.292 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:16:54.295 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:16:54.313 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:16:54.320 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:16:54.322 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:16:54.324 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.6372ms 200 text/css
2019-10-21 15:16:54.326 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.414300000000004ms 200 text/css
2019-10-21 15:16:54.329 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.0801ms 200 text/css
2019-10-21 15:16:54.333 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:16:54.335 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.6991ms 200 text/css
2019-10-21 15:16:54.338 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:16:54.340 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:16:54.342 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:16:54.344 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:16:54.347 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:16:54.349 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:16:54.351 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 59.1248ms 200 text/css
2019-10-21 15:16:54.354 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 62.643ms 200 text/css
2019-10-21 15:16:54.359 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:16:54.360 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:16:54.362 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.5359ms 200 text/css
2019-10-21 15:16:54.365 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:16:54.367 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:16:54.369 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.829500000000003ms 200 text/css
2019-10-21 15:16:54.371 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.8415ms 200 text/css
2019-10-21 15:16:54.375 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:16:54.376 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:16:54.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.438200000000002ms 200 text/css
2019-10-21 15:16:54.380 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:16:54.383 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:16:54.386 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.6066ms 200 text/css
2019-10-21 15:16:54.388 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.695300000000001ms 200 text/css
2019-10-21 15:16:54.448 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:16:54.451 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:16:54.453 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:16:54.455 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.206300000000001ms 404 
2019-10-21 15:16:54.457 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.2034ms 404 
2019-10-21 15:16:54.459 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.010800000000001ms 404 
2019-10-21 15:16:54.462 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:16:54.465 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.2222ms 404 
2019-10-21 15:17:24.637 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:17:24.649 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:17:24.653 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:17:24.656 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:17:24.704 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:17:25.138 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:17:25.233 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:17:25.384 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:17:25.614 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:17:25.623 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:17:25.624 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:17:25.648 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:17:25.657 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:17:25.715 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:17:25.750 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:17:25.774 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:17:25.939 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 167.5258ms.
2019-10-21 15:17:25.948 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 191.6223ms
2019-10-21 15:17:25.951 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:17:25.953 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=9h-lED1fWV44LrjzcBOBQADLBvQ7elnBiDCe3FKV9Hw  
2019-10-21 15:17:25.963 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 312.95980000000003ms 200 text/html; charset=utf-8
2019-10-21 15:17:25.976 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 15:17:25.980 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.0488ms 304 application/javascript
2019-10-21 15:17:28.253 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:17:28.269 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:17:28.271 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:17:28.284 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:17:28.296 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:17:28.344 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:17:28.436 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:17:28.447 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 12.7209ms.
2019-10-21 15:17:28.457 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 168.61690000000002ms
2019-10-21 15:17:28.460 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:17:28.467 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 214.2914ms 200 text/html; charset=utf-8
2019-10-21 15:17:28.532 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660248494  
2019-10-21 15:17:28.554 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:17:28.558 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:17:28.570 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:17:28.640 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:17:28.734 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 161.149ms
2019-10-21 15:17:28.737 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:17:28.814 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidCastException: Unable to cast object of type 'Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[CateringPro.Models.Ingredients]' to type 'System.Linq.IQueryable`1[CateringPro.Models.Categories]'.
   at CateringPro.Controllers.IngredientsController.ListItems(QueryModel querymodel) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Controllers\IngredientsController.cs:line 47
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-10-21 15:17:28.877 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 345.9185ms 500 text/html; charset=utf-8
2019-10-21 15:17:31.546 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:17:31.548 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:17:31.551 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:17:31.555 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:17:31.575 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:17:31.577 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:17:31.586 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:17:31.590 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:17:31.593 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:17:31.596 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.789ms 200 text/css
2019-10-21 15:17:31.598 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:17:31.600 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.7725ms 200 text/css
2019-10-21 15:17:31.605 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 54.5811ms 200 text/css
2019-10-21 15:17:31.607 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.1983ms 200 text/css
2019-10-21 15:17:31.616 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:17:31.619 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:17:31.621 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 74.0985ms 200 text/css
2019-10-21 15:17:31.624 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 75.3818ms 200 text/css
2019-10-21 15:17:31.689 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:17:31.691 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:17:31.693 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:17:31.695 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:17:31.698 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:17:31.699 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:17:31.717 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:17:31.719 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:17:31.722 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:17:31.724 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.5984ms 200 text/css
2019-10-21 15:17:31.726 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.4581ms 200 text/css
2019-10-21 15:17:31.728 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.4129ms 200 text/css
2019-10-21 15:17:31.731 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:17:31.733 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:17:31.735 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.8941ms 200 text/css
2019-10-21 15:17:31.738 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.6298ms 200 text/css
2019-10-21 15:17:31.740 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:17:31.745 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 53.4728ms 200 text/css
2019-10-21 15:17:31.749 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:17:31.754 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.695600000000001ms 404 
2019-10-21 15:17:31.776 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:17:31.780 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.323ms 404 
2019-10-21 15:17:31.785 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:17:31.789 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.4366ms 404 
2019-10-21 15:17:31.809 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:17:31.812 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5525ms 404 
2019-10-21 15:17:45.601 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:17:45.609 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:17:45.613 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:17:45.616 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:17:45.621 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:17:45.640 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:17:45.653 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:17:45.681 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.6414ms.
2019-10-21 15:17:45.685 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:17:45.687 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:17:45.689 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 68.45230000000001ms
2019-10-21 15:17:45.691 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:17:45.693 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:17:45.699 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 15:17:45.702 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.3451ms 200 text/html; charset=utf-8
2019-10-21 15:17:45.705 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:17:45.711 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:17:45.716 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.6075ms 200 text/css
2019-10-21 15:17:45.717 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:17:45.720 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 15:17:45.724 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:17:45.726 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.5375ms 200 text/css
2019-10-21 15:17:45.728 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:17:45.732 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 15:17:45.734 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 15:17:45.736 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:17:45.738 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 52.6081ms 200 text/css
2019-10-21 15:17:45.740 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 49.146100000000004ms 200 application/javascript
2019-10-21 15:17:45.744 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.3491ms 200 application/javascript
2019-10-21 15:17:45.752 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 15:17:45.754 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:17:45.757 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:17:45.759 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.045ms 200 text/css
2019-10-21 15:17:45.761 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.682000000000002ms 200 text/css
2019-10-21 15:17:45.764 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:17:45.768 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 15:17:45.770 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.079600000000003ms 200 text/css
2019-10-21 15:17:45.772 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.130900000000004ms 200 application/javascript
2019-10-21 15:17:45.774 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=9h-lED1fWV44LrjzcBOBQADLBvQ7elnBiDCe3FKV9Hw  
2019-10-21 15:17:45.777 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 15:17:45.780 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.1204ms 200 application/javascript
2019-10-21 15:17:45.814 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:17:45.817 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:17:45.819 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:17:45.827 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:17:45.835 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:17:45.840 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:17:45.865 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:17:45.868 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:17:45.870 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 53.035900000000005ms 200 text/css
2019-10-21 15:17:45.873 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:17:45.876 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 49.9561ms 200 text/css
2019-10-21 15:17:45.879 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 61.3618ms 200 text/css
2019-10-21 15:17:45.883 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:17:45.885 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:17:45.888 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:17:45.892 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 71.9418ms 200 text/css
2019-10-21 15:17:45.899 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:17:45.903 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:17:45.908 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:17:45.911 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:17:45.917 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.4065ms 200 text/css
2019-10-21 15:17:45.919 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.8954ms 200 text/css
2019-10-21 15:17:45.922 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:17:45.926 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:17:45.928 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.686ms 200 text/css
2019-10-21 15:17:45.932 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660265802  
2019-10-21 15:17:45.934 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.6149ms 200 text/css
2019-10-21 15:17:45.939 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 15:17:45.942 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:17:45.952 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:17:45.954 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:17:45.956 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 15:17:45.958 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:17:45.960 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:17:45.962 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.2909ms 200 font/woff2
2019-10-21 15:17:45.965 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:17:45.967 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.6201ms 404 
2019-10-21 15:17:45.969 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 8.095500000000001ms 404 
2019-10-21 15:17:45.973 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 129.7795ms 200 text/css
2019-10-21 15:17:45.976 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:18:52.044 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:18:52.053 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:18:52.055 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:18:52.056 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:18:52.093 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:18:52.461 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:18:52.554 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:18:52.685 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:18:52.888 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:18:52.896 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:18:52.898 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:18:52.916 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:18:52.924 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:18:52.980 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:18:53.013 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:18:53.031 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:18:53.168 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 139.9615ms.
2019-10-21 15:18:53.178 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 156.2158ms
2019-10-21 15:18:53.180 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:18:53.186 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 269.7634ms 200 text/html; charset=utf-8
2019-10-21 15:18:55.677 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:18:55.689 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:18:55.692 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:18:55.700 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:18:55.711 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:18:55.766 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:18:55.857 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:18:55.869 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 12.8405ms.
2019-10-21 15:18:55.877 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 171.7253ms
2019-10-21 15:18:55.880 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:18:55.886 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 209.08950000000002ms 200 text/html; charset=utf-8
2019-10-21 15:18:55.947 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660335919  
2019-10-21 15:18:55.968 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:18:55.971 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:18:55.982 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:19:02.444 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:19:48.329 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 6557.8198ms
2019-10-21 15:19:48.344 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:19:48.387 +03:00 [Error] Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware: An unhandled exception has occurred while executing the request.
System.InvalidCastException: Unable to cast object of type 'Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[CateringPro.Models.Ingredients]' to type 'System.Linq.IQueryable`1[CateringPro.Models.Categories]'.
   at CateringPro.Controllers.IngredientsController.ListItems(QueryModel querymodel) in C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\Controllers\IngredientsController.cs:line 47
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-10-21 15:19:48.419 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 52469.1633ms 500 text/html; charset=utf-8
2019-10-21 15:20:45.058 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:20:45.069 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:20:45.071 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:20:45.073 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:20:45.116 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:20:45.435 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:20:45.500 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:20:45.644 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:20:45.865 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:20:45.872 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:20:45.873 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:20:45.892 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:20:45.900 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:20:45.961 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:20:46.001 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:20:46.017 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:20:46.168 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 147.51420000000002ms.
2019-10-21 15:20:46.176 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 168.25140000000002ms
2019-10-21 15:20:46.179 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:20:46.188 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 294.92670000000004ms 200 text/html; charset=utf-8
2019-10-21 15:20:48.805 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:20:48.825 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:20:48.830 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:20:48.843 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:20:48.861 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:20:48.917 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:20:48.986 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:20:49.000 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 14.4426ms.
2019-10-21 15:20:49.007 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 160.2938ms
2019-10-21 15:20:49.010 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:20:49.016 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 214.0549ms 200 text/html; charset=utf-8
2019-10-21 15:20:49.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660449035  
2019-10-21 15:20:49.077 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:20:49.079 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:20:49.087 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:20:49.138 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:20:49.171 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:20:49.206 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:20:49.255 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 49.3915ms.
2019-10-21 15:20:49.257 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 168.12800000000001ms
2019-10-21 15:20:49.258 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:20:49.260 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 202.84310000000002ms 200 text/html; charset=utf-8
2019-10-21 15:20:53.414 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/EditModal/1?_=1571660449036  
2019-10-21 15:20:53.421 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1996ms 404 
2019-10-21 15:25:38.091 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:25:38.100 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:25:38.102 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:25:38.103 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:25:38.137 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:25:38.506 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:25:38.591 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:25:38.715 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:25:38.933 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:25:38.942 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:25:38.944 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:25:38.962 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:25:38.970 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:25:39.031 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:25:39.060 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:25:39.077 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:25:39.225 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 148.8574ms.
2019-10-21 15:25:39.235 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 166.63150000000002ms
2019-10-21 15:25:39.237 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:25:39.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=9h-lED1fWV44LrjzcBOBQADLBvQ7elnBiDCe3FKV9Hw  
2019-10-21 15:25:39.246 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 284.69390000000004ms 200 text/html; charset=utf-8
2019-10-21 15:25:39.257 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 15:25:39.261 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.8929ms 304 application/javascript
2019-10-21 15:25:42.022 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:25:42.040 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:25:42.044 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:25:42.051 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:25:42.061 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:25:42.099 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:25:42.167 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:25:42.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 14.8727ms.
2019-10-21 15:25:42.190 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 131.2841ms
2019-10-21 15:25:42.193 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:25:42.199 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 178.4947ms 200 text/html; charset=utf-8
2019-10-21 15:25:42.243 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660742219  
2019-10-21 15:25:42.262 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:25:42.265 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:25:42.275 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:25:42.323 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:25:42.355 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:25:42.389 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:25:42.437 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 48.269200000000005ms.
2019-10-21 15:25:42.439 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 161.93380000000002ms
2019-10-21 15:25:42.442 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:25:42.445 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 200.6868ms 200 text/html; charset=utf-8
2019-10-21 15:25:44.515 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/EditModal/1?_=1571660742220  
2019-10-21 15:25:44.520 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:25:44.523 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.EditModal (CateringPro)'
2019-10-21 15:25:44.529 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:25:44.533 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:25:44.551 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 15:25:44.558 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 15:25:44.580 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 22.642300000000002ms.
2019-10-21 15:25:44.582 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.EditModal (CateringPro) in 51.459900000000005ms
2019-10-21 15:25:44.584 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.EditModal (CateringPro)'
2019-10-21 15:25:44.586 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 72.107ms 200 text/html; charset=utf-8
2019-10-21 15:25:59.923 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Categories  
2019-10-21 15:25:59.928 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:25:59.930 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CategoriesController.Index (CateringPro)'
2019-10-21 15:25:59.941 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.CategoriesController (CateringPro).
2019-10-21 15:25:59.945 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:25:59.955 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 15:25:59.977 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:25:59.991 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 13.988800000000001ms.
2019-10-21 15:25:59.995 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CategoriesController.Index (CateringPro) in 50.947300000000006ms
2019-10-21 15:25:59.997 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CategoriesController.Index (CateringPro)'
2019-10-21 15:25:59.999 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 76.2467ms 200 text/html; charset=utf-8
2019-10-21 15:26:00.050 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Categories/ListItems?searchcriteria=&_=1571660760026  
2019-10-21 15:26:00.055 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:26:00.057 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CategoriesController.ListItems (CateringPro)'
2019-10-21 15:26:00.064 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Categories"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.CategoriesController (CateringPro).
2019-10-21 15:26:00.069 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:26:00.077 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE ([c].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:26:00.084 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:26:00.100 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 17.5362ms.
2019-10-21 15:26:00.102 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CategoriesController.ListItems (CateringPro) in 36.5631ms
2019-10-21 15:26:00.104 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CategoriesController.ListItems (CateringPro)'
2019-10-21 15:26:00.106 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.814600000000006ms 200 text/html; charset=utf-8
2019-10-21 15:26:02.243 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Categories/CreateModal?_=1571660760027  
2019-10-21 15:26:02.249 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:26:02.252 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CategoriesController.CreateModal (CateringPro)'
2019-10-21 15:26:02.255 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CreateModal", controller = "Categories"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateModal() on controller CateringPro.Controllers.CategoriesController (CateringPro).
2019-10-21 15:26:02.259 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 15:26:02.280 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view EditModal executed in 21.7345ms.
2019-10-21 15:26:02.282 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CategoriesController.CreateModal (CateringPro) in 24.8397ms
2019-10-21 15:26:02.284 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CategoriesController.CreateModal (CateringPro)'
2019-10-21 15:26:02.286 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.735800000000005ms 200 text/html; charset=utf-8
2019-10-21 15:26:12.451 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:26:12.452 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:26:12.455 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:26:12.457 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:26:12.463 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:26:12.469 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:26:12.488 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:26:12.492 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:26:12.495 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:26:12.498 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.237500000000004ms 200 text/css
2019-10-21 15:26:12.500 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.3245ms 200 text/css
2019-10-21 15:26:12.504 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 39.524300000000004ms 200 text/css
2019-10-21 15:26:12.513 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:26:12.515 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 61.745900000000006ms 200 text/css
2019-10-21 15:26:12.522 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:26:12.524 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:26:12.527 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:26:12.533 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:26:12.534 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:26:12.535 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.0198ms 200 text/css
2019-10-21 15:26:12.538 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:26:12.540 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:26:12.543 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.7194ms 200 text/css
2019-10-21 15:26:12.545 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:26:12.547 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.0884ms 200 text/css
2019-10-21 15:26:12.549 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:26:12.551 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:26:12.553 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.0355ms 200 text/css
2019-10-21 15:26:12.555 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:26:12.556 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:26:12.558 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.6773ms 200 text/css
2019-10-21 15:26:12.560 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.4839ms 200 text/css
2019-10-21 15:26:12.563 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:26:12.567 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:26:12.569 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 120.0353ms 200 text/css
2019-10-21 15:26:12.571 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.852ms 200 text/css
2019-10-21 15:26:12.632 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:26:12.633 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:26:12.637 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9654ms 404 
2019-10-21 15:26:12.639 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.532900000000001ms 404 
2019-10-21 15:26:12.640 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:26:12.643 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.5825ms 404 
2019-10-21 15:26:12.645 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:26:12.647 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.0561000000000003ms 404 
2019-10-21 15:27:18.377 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:27:18.381 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:27:18.383 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:27:18.385 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:27:18.388 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:27:18.393 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:27:18.401 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:27:18.412 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 9.1327ms.
2019-10-21 15:27:18.415 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 26.802400000000002ms
2019-10-21 15:27:18.425 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:27:18.438 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:27:18.442 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:27:18.444 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:27:18.446 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 15:27:18.448 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 68.057ms 200 text/html; charset=utf-8
2019-10-21 15:27:18.451 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:27:18.461 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 15:27:18.479 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:27:18.481 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:27:18.491 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:27:18.497 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 61.076800000000006ms 200 text/css
2019-10-21 15:27:18.499 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 67.72540000000001ms 200 text/css
2019-10-21 15:27:18.502 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 58.675000000000004ms 200 text/css
2019-10-21 15:27:18.511 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:27:18.529 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 15:27:18.539 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:27:18.557 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:27:18.559 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.1485ms 200 text/css
2019-10-21 15:27:18.563 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 133.78730000000002ms 200 text/css
2019-10-21 15:27:18.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 78.1298ms 200 application/javascript
2019-10-21 15:27:18.567 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:27:18.572 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 15:27:18.574 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 15:27:18.582 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 151.68550000000002ms 200 application/javascript
2019-10-21 15:27:18.593 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:27:18.600 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=9h-lED1fWV44LrjzcBOBQADLBvQ7elnBiDCe3FKV9Hw  
2019-10-21 15:27:18.605 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 62.1942ms 200 text/css
2019-10-21 15:27:18.607 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 15:27:18.610 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 15:27:18.613 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.0751ms 200 application/javascript
2019-10-21 15:27:18.615 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 80.76310000000001ms 200 application/javascript
2019-10-21 15:27:18.640 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:27:18.643 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:27:18.645 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:27:18.647 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:27:18.652 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:27:18.662 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:27:18.671 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:27:18.681 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:27:18.693 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.2524ms 200 text/css
2019-10-21 15:27:18.695 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 48.647400000000005ms 200 text/css
2019-10-21 15:27:18.699 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:27:18.701 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:27:18.704 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 60.8278ms 200 text/css
2019-10-21 15:27:18.711 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:27:18.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 62.532300000000006ms 200 text/css
2019-10-21 15:27:18.723 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:27:18.724 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:27:18.726 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:27:18.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 84.9918ms 200 text/css
2019-10-21 15:27:18.731 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:27:18.739 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:27:18.744 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:27:18.746 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:27:18.748 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.1893ms 200 text/css
2019-10-21 15:27:18.756 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:27:18.759 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:27:18.763 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.3525ms 200 text/css
2019-10-21 15:27:18.764 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.073900000000002ms 200 text/css
2019-10-21 15:27:18.773 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 15:27:18.776 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.7923ms 200 text/css
2019-10-21 15:27:18.786 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:27:18.793 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:27:18.798 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 101.3669ms 200 text/css
2019-10-21 15:27:18.803 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 15:27:18.805 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.037000000000003ms 404 
2019-10-21 15:27:18.809 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.669900000000002ms 404 
2019-10-21 15:27:18.813 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.6263ms 200 font/woff2
2019-10-21 15:27:18.816 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:27:18.827 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:27:18.840 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:27:18.844 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.5351ms 200 text/css
2019-10-21 15:27:18.846 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660838631  
2019-10-21 15:27:18.851 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:27:18.854 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 139.5722ms 200 text/css
2019-10-21 15:27:18.858 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:27:18.866 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:27:18.871 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:27:18.876 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:27:18.886 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:27:18.896 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:27:18.911 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 15.375ms.
2019-10-21 15:27:18.915 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 39.9373ms
2019-10-21 15:27:18.921 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:27:18.923 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:27:18.925 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 78.2193ms 200 text/html; charset=utf-8
2019-10-21 15:27:18.928 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:27:18.930 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 10.3518ms 404 
2019-10-21 15:27:18.933 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.0528ms 404 
2019-10-21 15:28:52.790 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:28:52.794 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:28:52.796 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:28:52.799 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:28:52.802 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:28:52.806 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:28:52.814 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:28:52.845 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 29.0267ms.
2019-10-21 15:28:52.850 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 46.471000000000004ms
2019-10-21 15:28:52.862 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:28:52.868 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 15:28:52.882 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 77.9812ms 200 text/html; charset=utf-8
2019-10-21 15:28:52.883 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:28:52.887 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:28:52.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:28:52.890 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 15:28:52.893 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:28:52.906 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:28:52.908 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.243100000000005ms 200 text/css
2019-10-21 15:28:52.916 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:28:52.922 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.6214ms 200 text/css
2019-10-21 15:28:52.928 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 15:28:52.931 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 15:28:52.962 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 65.394ms 200 application/javascript
2019-10-21 15:28:52.971 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 51.2323ms 200 application/javascript
2019-10-21 15:28:52.981 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:28:52.987 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:28:52.989 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 117.0921ms 200 text/css
2019-10-21 15:28:52.991 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:28:52.993 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 15:28:52.995 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 103.9848ms 200 text/css
2019-10-21 15:28:52.999 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:28:53.003 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:28:53.004 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.370700000000003ms 200 text/css
2019-10-21 15:28:53.007 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 15:28:53.009 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:28:53.011 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.8561ms 200 application/javascript
2019-10-21 15:28:53.017 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:28:53.023 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:28:53.026 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:28:53.031 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 100.79230000000001ms 200 text/css
2019-10-21 15:28:53.036 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:28:53.039 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:28:53.041 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.4986ms 200 text/css
2019-10-21 15:28:53.043 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.453200000000002ms 200 text/css
2019-10-21 15:28:53.045 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:28:53.047 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:28:53.049 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=WiZDz2nSC5_JseHUe6OYRVTvH_VU8H9JR7luEfJWjMk  
2019-10-21 15:28:53.053 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 52.8761ms 200 text/css
2019-10-21 15:28:53.055 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:28:53.060 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.5899ms 200 text/css
2019-10-21 15:28:53.064 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 15:28:53.067 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.3999ms 200 application/javascript
2019-10-21 15:28:53.078 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:28:53.079 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:28:53.082 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:28:53.085 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:28:53.095 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:28:53.100 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:28:53.106 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:28:53.125 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.516200000000005ms 200 text/css
2019-10-21 15:28:53.129 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:28:53.131 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:28:53.133 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 55.474900000000005ms 200 text/css
2019-10-21 15:28:53.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 56.338300000000004ms 200 text/css
2019-10-21 15:28:53.139 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:28:53.136 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:28:53.142 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:28:53.254 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:28:53.261 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 175.1672ms 200 text/css
2019-10-21 15:28:53.269 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 15:28:53.273 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:28:53.276 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:28:53.278 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 200.035ms 200 text/css
2019-10-21 15:28:53.282 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 139.4128ms 200 text/css
2019-10-21 15:28:53.284 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 15:28:53.287 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 175.0643ms 200 text/css
2019-10-21 15:28:53.290 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.4492ms 200 font/woff2
2019-10-21 15:28:53.294 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571660933065  
2019-10-21 15:28:53.296 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:28:53.298 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:28:53.300 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.088100000000004ms 200 text/css
2019-10-21 15:28:53.303 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:28:53.305 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 32.1105ms 404 
2019-10-21 15:28:53.308 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:28:53.311 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:28:53.313 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:28:53.316 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.766900000000001ms 404 
2019-10-21 15:28:53.319 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:28:53.323 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:28:53.329 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:28:53.332 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:28:53.334 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.8767000000000005ms 404 
2019-10-21 15:28:53.342 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:28:53.345 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3579000000000003ms 404 
2019-10-21 15:28:53.348 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 16.4131ms.
2019-10-21 15:28:53.350 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 34.8044ms
2019-10-21 15:28:53.352 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:28:53.354 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 64.327ms 200 text/html; charset=utf-8
2019-10-21 15:28:55.877 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/CreateModal")?_=1571660933066  
2019-10-21 15:28:55.882 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.330900000000001ms 404 
2019-10-21 15:30:28.203 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:30:28.207 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:30:28.209 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:30:28.214 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:30:28.219 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:30:28.223 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:30:28.235 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:30:28.281 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 34.9135ms.
2019-10-21 15:30:28.284 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 15:30:28.287 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 69.5068ms
2019-10-21 15:30:28.289 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:30:28.293 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:30:28.295 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:30:28.307 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 15:30:28.310 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 93.2351ms 200 text/html; charset=utf-8
2019-10-21 15:30:28.313 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:30:28.316 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:30:28.320 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:30:28.326 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.0339ms 200 text/css
2019-10-21 15:30:28.329 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 15:30:28.331 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 15:30:28.333 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.934400000000004ms 200 text/css
2019-10-21 15:30:28.335 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.6291ms 200 application/javascript
2019-10-21 15:30:28.339 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:30:28.343 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 15:30:28.345 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:30:28.347 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:30:28.348 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 15:30:28.350 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 15:30:28.381 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.948600000000003ms 200 application/javascript
2019-10-21 15:30:28.385 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:30:28.390 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 15:30:28.416 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.540400000000005ms 200 text/css
2019-10-21 15:30:28.418 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 54.620400000000004ms 200 application/javascript
2019-10-21 15:30:28.422 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 72.937ms 200 application/javascript
2019-10-21 15:30:28.427 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:30:28.432 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:30:28.435 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:30:28.441 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:30:28.444 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 15:30:28.447 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 97.6245ms 200 text/css
2019-10-21 15:30:28.451 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:30:28.459 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:30:28.461 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.6994ms 200 text/css
2019-10-21 15:30:28.463 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.8617ms 200 text/css
2019-10-21 15:30:28.466 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 15:30:28.469 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:30:28.473 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 38.5598ms 200 text/css
2019-10-21 15:30:28.478 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 51.7875ms 200 text/css
2019-10-21 15:30:28.483 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:30:28.485 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 15:30:28.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 15:30:28.491 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.682500000000005ms 200 text/css
2019-10-21 15:30:28.495 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:30:28.496 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 15:30:28.500 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 15:30:28.504 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:30:28.505 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.7235ms 200 text/css
2019-10-21 15:30:28.508 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.4803ms 200 text/css
2019-10-21 15:30:28.510 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 15:30:28.512 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:30:28.513 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 26.075200000000002ms 200 text/css
2019-10-21 15:30:28.515 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:30:28.518 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 15:30:28.521 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.4953ms 200 text/css
2019-10-21 15:30:28.528 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 15:30:28.533 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:30:28.536 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 56.880900000000004ms 200 text/css
2019-10-21 15:30:28.540 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 36.803200000000004ms 200 text/css
2019-10-21 15:30:28.543 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 15:30:28.547 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.8841ms 200 text/css
2019-10-21 15:30:28.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:30:28.568 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 15:30:28.578 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:30:28.582 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.9646ms 200 text/css
2019-10-21 15:30:28.595 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 15:30:28.598 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.4405ms 200 text/css
2019-10-21 15:30:28.602 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:30:28.619 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 15:30:28.624 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 15:30:28.628 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.2212ms 404 
2019-10-21 15:30:28.631 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571661028551  
2019-10-21 15:30:28.638 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.5103ms 404 
2019-10-21 15:30:28.644 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 15:30:28.647 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:30:28.658 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.3311ms 200 font/woff2
2019-10-21 15:30:28.669 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:30:28.673 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:30:28.680 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:30:28.691 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:30:28.701 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:30:28.713 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 12.052800000000001ms.
2019-10-21 15:30:28.715 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 39.722100000000005ms
2019-10-21 15:30:28.717 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:30:28.719 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 91.7415ms 200 text/html; charset=utf-8
2019-10-21 15:30:28.784 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:30:28.788 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0967000000000002ms 404 
2019-10-21 15:30:28.794 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 15:30:28.798 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.214300000000001ms 404 
2019-10-21 15:30:30.191 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/CreateModal?_=1571661028552  
2019-10-21 15:30:30.198 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:30:30.201 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.CreateModal (CateringPro)'
2019-10-21 15:30:30.205 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CreateModal", controller = "Ingredients"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateModal() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:30:30.207 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 15:30:30.212 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view EditModal executed in 4.5271ms.
2019-10-21 15:30:30.215 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.CreateModal (CateringPro) in 7.423ms
2019-10-21 15:30:30.217 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.CreateModal (CateringPro)'
2019-10-21 15:30:30.219 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.847900000000003ms 200 text/html; charset=utf-8
2019-10-21 15:30:37.892 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Ingredients/EditModal application/x-www-form-urlencoded; charset=UTF-8 267
2019-10-21 15:30:37.895 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:30:37.897 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.EditModal (CateringPro)'
2019-10-21 15:30:37.917 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(Int32, CateringPro.Models.Ingredients) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:30:37.942 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 15:30:37.946 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 5.258100000000001ms.
2019-10-21 15:30:37.948 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.EditModal (CateringPro) in 28.9994ms
2019-10-21 15:30:37.951 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.EditModal (CateringPro)'
2019-10-21 15:30:37.953 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 61.892900000000004ms 200 text/html; charset=utf-8
2019-10-21 15:31:17.303 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:31:17.322 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:31:17.324 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:31:17.326 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 15:31:17.359 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:17.697 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 15:31:17.765 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 15:31:17.886 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 15:31:18.090 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 15:31:18.097 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 15:31:18.098 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 15:31:18.116 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:31:18.124 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 15:31:18.165 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:31:18.194 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:31:18.217 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:31:18.366 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 150.6559ms.
2019-10-21 15:31:18.376 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 172.8144ms
2019-10-21 15:31:18.378 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:31:18.380 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 15:31:18.386 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 269.7208ms 200 text/html; charset=utf-8
2019-10-21 15:31:18.397 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 15:31:18.401 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 20.525000000000002ms 304 application/javascript
2019-10-21 15:31:21.118 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Account/LoginModal  
2019-10-21 15:31:21.125 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:31:21.129 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "LoginModal", controller = "Account"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult LoginModal(System.String) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:31:21.140 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view LoginModal.
2019-10-21 15:31:21.177 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view LoginModal executed in 37.4306ms.
2019-10-21 15:31:21.179 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.LoginModal (CateringPro) in 48.0178ms
2019-10-21 15:31:21.181 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.LoginModal (CateringPro)'
2019-10-21 15:31:21.183 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 64.9871ms 200 text/html; charset=utf-8
2019-10-21 15:31:23.786 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Account/Login application/x-www-form-urlencoded; charset=UTF-8 242
2019-10-21 15:31:23.795 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:31:23.805 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Login", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(CateringPro.ViewModels.LoginViewModel) on controller CateringPro.Controllers.AccountController (CateringPro).
2019-10-21 15:31:23.835 +03:00 [Information] CateringPro.Models.CompanyUser: User admin is going to login 
2019-10-21 15:31:23.843 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:23.931 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedUserName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE (([a].[NormalizedUserName] = @__normalizedUserName_0) AND ([a].[NormalizedUserName] IS NOT NULL AND @__normalizedUserName_0 IS NOT NULL)) OR ([a].[NormalizedUserName] IS NULL AND @__normalizedUserName_0 IS NULL)
2019-10-21 15:31:24.079 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:31:24.118 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 15:31:24.152 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 15:31:24.166 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 15:31:24.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 15:31:24.191 +03:00 [Information] Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler: AuthenticationScheme: Identity.Application signed in.
2019-10-21 15:31:24.200 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor: Executing ObjectResult, writing value of type '<>f__AnonymousType0`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 15:31:24.210 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.AccountController.Login (CateringPro) in 403.11310000000003ms
2019-10-21 15:31:24.212 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.AccountController.Login (CateringPro)'
2019-10-21 15:31:24.217 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 431.7961ms 200 application/json; charset=utf-8
2019-10-21 15:31:24.227 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 15:31:24.235 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:31:24.238 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 15:31:24.242 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:31:24.261 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 11.7216ms.
2019-10-21 15:31:24.269 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 23.433300000000003ms
2019-10-21 15:31:24.272 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 15:31:24.274 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 15:31:24.277 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 48.103ms 200 text/html; charset=utf-8
2019-10-21 15:31:24.280 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 15:31:24.283 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 11.6294ms 304 application/javascript
2019-10-21 15:31:26.149 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients  
2019-10-21 15:31:26.163 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:26.165 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:31:26.171 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:26.200 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:26.207 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
2019-10-21 15:31:26.227 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:31:26.234 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 8.5077ms.
2019-10-21 15:31:26.239 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.Index (CateringPro) in 63.634ms
2019-10-21 15:31:26.241 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.Index (CateringPro)'
2019-10-21 15:31:26.244 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.6999ms 200 text/html; charset=utf-8
2019-10-21 15:31:26.291 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571661086268  
2019-10-21 15:31:26.296 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:26.299 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:26.310 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:26.316 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:26.322 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:31:26.328 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:31:26.384 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 57.0028ms.
2019-10-21 15:31:26.386 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 74.22840000000001ms
2019-10-21 15:31:26.388 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:26.391 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 99.34920000000001ms 200 text/html; charset=utf-8
2019-10-21 15:31:29.570 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/CreateModal?_=1571661086269  
2019-10-21 15:31:29.577 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:29.579 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.CreateModal (CateringPro)'
2019-10-21 15:31:29.583 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "CreateModal", controller = "Ingredients"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult CreateModal() on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:29.587 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 15:31:29.598 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view EditModal executed in 11.6685ms.
2019-10-21 15:31:29.600 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.CreateModal (CateringPro) in 14.3499ms
2019-10-21 15:31:29.602 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.CreateModal (CateringPro)'
2019-10-21 15:31:29.603 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.7588ms 200 text/html; charset=utf-8
2019-10-21 15:31:34.219 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 POST http://localhost:51321/Ingredients/EditModal application/x-www-form-urlencoded; charset=UTF-8 267
2019-10-21 15:31:34.225 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:34.227 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.EditModal (CateringPro)'
2019-10-21 15:31:34.251 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(Int32, CateringPro.Models.Ingredients) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:34.261 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:34.367 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 100)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Ingredients] ([CompanyId], [Name])
VALUES (@p0, @p1);
SELECT [Id]
FROM [Ingredients]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2019-10-21 15:31:34.417 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.SystemTextJsonResultExecutor: Executing JsonResult, writing value of type '<>f__AnonymousType5`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2019-10-21 15:31:34.420 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.EditModal (CateringPro) in 167.2236ms
2019-10-21 15:31:34.423 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.EditModal (CateringPro)'
2019-10-21 15:31:34.425 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 206.39960000000002ms 200 application/json; charset=utf-8
2019-10-21 15:31:34.435 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?searchcriteria=&_=1571661086270  
2019-10-21 15:31:34.439 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:34.441 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:34.444 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:34.447 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:34.453 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
2019-10-21 15:31:34.461 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:31:34.473 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 12.8324ms.
2019-10-21 15:31:34.476 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 29.095000000000002ms
2019-10-21 15:31:34.479 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:34.482 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.254000000000005ms 200 text/html; charset=utf-8
2019-10-21 15:31:40.644 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?sortfield=Name&sortorder=asc&searchcriteria=&_=1571661086271  
2019-10-21 15:31:40.651 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:40.654 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:40.657 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:40.662 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:40.672 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [i].[Name]
2019-10-21 15:31:40.678 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:31:40.686 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 8.3362ms.
2019-10-21 15:31:40.689 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 29.215300000000003ms
2019-10-21 15:31:40.691 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:40.692 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 50.0277ms 200 text/html; charset=utf-8
2019-10-21 15:31:41.092 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Ingredients/ListItems?sortfield=Name&sortorder=desc&searchcriteria=&_=1571661086272  
2019-10-21 15:31:41.096 +03:00 [Information] Microsoft.AspNetCore.Authorization.DefaultAuthorizationService: Authorization was successful.
2019-10-21 15:31:41.099 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:41.102 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Ingredients"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.IngredientsController (CateringPro).
2019-10-21 15:31:41.106 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:41.114 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id], [i].[CompanyId], [i].[Name]
FROM [Ingredients] AS [i]
WHERE ([i].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
ORDER BY [i].[Name] DESC
2019-10-21 15:31:41.120 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:31:41.129 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 8.6354ms.
2019-10-21 15:31:41.131 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.IngredientsController.ListItems (CateringPro) in 26.8545ms
2019-10-21 15:31:41.133 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.IngredientsController.ListItems (CateringPro)'
2019-10-21 15:31:41.135 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.0643ms 200 text/html; charset=utf-8
2019-10-21 15:31:59.875 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 15:31:59.881 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 15:31:59.888 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 15:31:59.892 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:31:59.937 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 15:31:59.977 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 15:31:59.990 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 10.5883ms.
2019-10-21 15:31:59.996 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 102.7919ms
2019-10-21 15:31:59.998 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 15:32:00.000 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 15:32:00.003 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 15:32:00.009 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 131.3271ms 200 text/html; charset=utf-8
2019-10-21 15:32:00.012 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 9.3058ms 304 application/javascript
2019-10-21 15:32:00.089 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571661120038  
2019-10-21 15:32:00.094 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 15:32:00.102 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 15:32:00.109 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 15:32:00.112 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 15:32:00.116 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:32:00.127 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 15:32:00.166 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 15:32:00.177 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 15:32:00.248 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 71.5836ms.
2019-10-21 15:32:00.250 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 146.4146ms
2019-10-21 15:32:00.252 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 15:32:00.254 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 165.1942ms 200 text/html; charset=utf-8
2019-10-21 15:32:00.259 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 15:32:00.261 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 15:32:00.263 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:32:00.265 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:32:00.270 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 15:32:00.272 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 15:32:00.294 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:32:00.296 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:32:00.308 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 15:32:00.323 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 15:32:00.327 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 54.737500000000004ms
2019-10-21 15:32:00.329 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:32:00.331 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 72.7375ms 200 image/jpeg
2019-10-21 15:32:00.588 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 15:32:00.590 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 315.8655ms
2019-10-21 15:32:00.592 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:32:00.594 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 335.7615ms 200 image/jpeg
2019-10-21 15:32:02.281 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/2?_=1571661120039  
2019-10-21 15:32:02.286 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 15:32:02.293 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 15:32:02.297 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:32:02.309 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 15:32:02.331 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 15:32:02.335 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 15:32:02.339 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 15:32:02.406 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 67.6974ms.
2019-10-21 15:32:02.409 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 113.80640000000001ms
2019-10-21 15:32:02.411 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 15:32:02.413 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 131.9035ms 200 text/html; charset=utf-8
2019-10-21 15:32:02.419 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=450&height=300  
2019-10-21 15:32:02.424 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:32:02.426 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 15:32:02.429 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:32:02.439 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/2?_=1571661120040  
2019-10-21 15:32:02.442 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 15:32:02.471 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 15:32:02.484 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 15:32:02.495 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 15:32:02.504 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 15:32:02.509 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 15:32:02.518 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 10.225100000000001ms.
2019-10-21 15:32:02.520 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 47.1862ms
2019-10-21 15:32:02.522 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 15:32:02.525 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 86.8447ms 200 text/html; charset=utf-8
2019-10-21 15:32:02.624 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 15:32:02.628 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 199.1593ms
2019-10-21 15:32:02.631 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 15:32:02.633 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 214.1019ms 200 image/jpeg
2019-10-21 16:01:09.502 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:01:09.515 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:01:09.517 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:01:09.520 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:01:09.560 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:01:09.897 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:01:09.966 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:01:10.092 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:01:10.300 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:01:10.304 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:01:10.311 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:01:10.331 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 16:01:10.352 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:01:10.417 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:01:10.452 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 16:01:10.470 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:01:10.622 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 153.32070000000002ms.
2019-10-21 16:01:10.632 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 173.7846ms
2019-10-21 16:01:10.635 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:01:10.637 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 16:01:10.641 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:01:10.647 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 316.5339ms 200 text/html; charset=utf-8
2019-10-21 16:01:10.662 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /css/site.css was not modified
2019-10-21 16:01:10.664 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 16:01:10.672 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.752ms 304 text/css
2019-10-21 16:01:10.674 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 35.7381ms 304 application/javascript
2019-10-21 16:01:14.171 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/CustomerOrders  
2019-10-21 16:01:14.180 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 16:01:14.197 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "CustomerOrders"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CateringPro.Controllers.CustomerOrdersController (CateringPro).
2019-10-21 16:01:14.202 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:01:14.246 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:01:14.333 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.375 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.396 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.405 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.413 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.420 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.427 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.436 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.444 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.449 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.454 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.458 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.463 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.467 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__daydate_1='?' (DbType = DateTime2), @__companyid_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id] AS [UserId], [a].[NormalizedUserName] AS [UserName], [t].[Id] AS [DishId], [t].[CategoriesId] AS [CategoryId], [t].[Name] AS [DishName], @__daydate_1 AS [Date], [t0].[Quantity], [t].[Price], CAST([t0].[Quantity] AS decimal(18,2)) * [t].[Price] AS [Amount]
FROM [DayDish] AS [d]
INNER JOIN (
    SELECT [d0].[Id], [d0].[CategoriesId], [d0].[Code], [d0].[CompanyId], [d0].[Description], [d0].[Name], [d0].[PictureId], [d0].[Price]
    FROM [Dishes] AS [d0]
    WHERE ([d0].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL
) AS [t] ON [d].[DishId] = [t].[Id]
INNER JOIN (
    SELECT [u].[UserId], [u].[Date], [u].[DishId], [u].[CompanyId], [u].[Quantity]
    FROM [UserDayDish] AS [u]
    WHERE (([u].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([u].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
) AS [t0] ON [d].[DishId] = [t0].[DishId]
INNER JOIN [AspNetUsers] AS [a] ON [t0].[UserId] = [a].[Id]
WHERE (([d].[CompanyId] = @__companyid_0) AND @__companyid_0 IS NOT NULL) AND (([d].[Date] = @__daydate_1) AND @__daydate_1 IS NOT NULL)
2019-10-21 16:01:14.477 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 275.6585ms.
2019-10-21 16:01:14.483 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.CustomerOrdersController.Index (CateringPro) in 280.2705ms
2019-10-21 16:01:14.485 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.CustomerOrdersController.Index (CateringPro)'
2019-10-21 16:01:14.489 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 318.3312ms 200 text/html; charset=utf-8
2019-10-21 16:01:21.946 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:01:21.963 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:01:21.969 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:01:22.003 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:01:22.078 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:01:22.210 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:01:22.225 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 16.3114ms.
2019-10-21 16:01:22.234 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 259.56260000000003ms
2019-10-21 16:01:22.237 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:01:22.243 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 299.39500000000004ms 200 text/html; charset=utf-8
2019-10-21 16:01:27.751 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:01:27.747 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:01:27.754 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:01:27.755 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:01:27.767 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:01:27.770 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:01:27.779 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:01:27.780 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:01:27.782 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:01:27.788 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.435000000000002ms 200 text/css
2019-10-21 16:01:27.792 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 37.0219ms 200 text/css
2019-10-21 16:01:27.799 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:01:27.807 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.0912ms 200 text/css
2019-10-21 16:01:27.810 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 53.577400000000004ms 200 text/css
2019-10-21 16:01:27.814 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:01:27.816 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:01:27.820 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:01:27.830 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:01:27.835 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:01:27.842 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.275100000000002ms 200 text/css
2019-10-21 16:01:27.848 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:01:27.852 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:01:27.854 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:01:27.857 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:01:27.859 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:01:27.861 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 49.497600000000006ms 200 text/css
2019-10-21 16:01:27.863 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 47.8883ms 200 text/css
2019-10-21 16:01:27.865 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 101.4646ms 200 text/css
2019-10-21 16:01:27.869 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:01:27.871 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:01:27.873 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.2663ms 200 text/css
2019-10-21 16:01:27.875 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 43.1905ms 200 text/css
2019-10-21 16:01:27.877 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 107.56020000000001ms 200 text/css
2019-10-21 16:01:27.880 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:01:27.883 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:01:27.886 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.6887ms 200 text/css
2019-10-21 16:01:27.938 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:01:27.940 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:01:27.944 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.1035ms 404 
2019-10-21 16:01:27.946 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.0327ms 404 
2019-10-21 16:01:27.949 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:01:27.952 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:01:27.955 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4199ms 404 
2019-10-21 16:01:27.957 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.1453ms 404 
2019-10-21 16:02:45.854 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:02:45.866 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:02:45.868 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:02:45.869 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:02:45.903 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:02:46.388 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:02:46.473 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:02:46.598 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:02:46.807 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:02:46.815 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:02:46.817 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:02:46.837 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 16:02:46.845 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:02:46.913 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:02:46.990 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[Address1], [a].[Address2], [a].[City], [a].[CompanyId], [a].[ConcurrencyStamp], [a].[Country], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName], [a].[ZipCode]
FROM [AspNetUsers] AS [a]
WHERE ([a].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:02:47.134 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__user_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[Id], [a].[ClaimType], [a].[ClaimValue], [a].[UserId]
FROM [AspNetUserClaims] AS [a]
WHERE ([a].[UserId] = @__user_Id_0) AND @__user_Id_0 IS NOT NULL
2019-10-21 16:02:47.171 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__userId_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE ([a].[UserId] = @__userId_0) AND @__userId_0 IS NOT NULL
2019-10-21 16:02:47.181 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__normalizedName_0='?' (Size = 256)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[ConcurrencyStamp], [a].[Name], [a].[NormalizedName]
FROM [AspNetRoles] AS [a]
WHERE (([a].[NormalizedName] = @__normalizedName_0) AND ([a].[NormalizedName] IS NOT NULL AND @__normalizedName_0 IS NOT NULL)) OR ([a].[NormalizedName] IS NULL AND @__normalizedName_0 IS NULL)
2019-10-21 16:02:47.194 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__role_Id_0='?' (Size = 450)], CommandType='Text', CommandTimeout='30']
SELECT [a].[ClaimType], [a].[ClaimValue]
FROM [AspNetRoleClaims] AS [a]
WHERE ([a].[RoleId] = @__role_Id_0) AND @__role_Id_0 IS NOT NULL
2019-10-21 16:02:47.205 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:02:47.230 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 16:02:47.260 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:02:47.403 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 148.83270000000002ms.
2019-10-21 16:02:47.411 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 173.03140000000002ms
2019-10-21 16:02:47.414 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:02:47.421 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 584.6148000000001ms 200 text/html; charset=utf-8
2019-10-21 16:02:49.492 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:02:49.500 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:02:49.509 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:02:49.558 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:02:49.621 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:02:49.693 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:02:49.704 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 12.239ms.
2019-10-21 16:02:49.712 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 197.6981ms
2019-10-21 16:02:49.715 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:02:49.718 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 226.6817ms 200 text/html; charset=utf-8
2019-10-21 16:02:52.879 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:02:52.881 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:02:52.884 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:02:52.879 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:02:52.887 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:02:52.889 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:02:52.903 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:02:52.908 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:02:52.910 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 28.0772ms 200 text/css
2019-10-21 16:02:52.915 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:02:52.920 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:02:52.924 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.257000000000005ms 200 text/css
2019-10-21 16:02:52.932 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.202000000000005ms 200 text/css
2019-10-21 16:02:52.934 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:02:52.937 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 45.5482ms 200 text/css
2019-10-21 16:02:52.943 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:02:52.946 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:02:52.947 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:02:52.950 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:02:52.952 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.2438ms 200 text/css
2019-10-21 16:02:52.953 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:02:52.958 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.2085ms 200 text/css
2019-10-21 16:02:52.960 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:02:52.963 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:02:52.964 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:02:52.966 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:02:52.969 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:02:52.971 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 93.3775ms 200 text/css
2019-10-21 16:02:52.973 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 31.268700000000003ms 200 text/css
2019-10-21 16:02:52.975 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:02:52.978 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.0594ms 200 text/css
2019-10-21 16:02:52.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 18.7937ms 200 text/css
2019-10-21 16:02:52.983 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 92.0313ms 200 text/css
2019-10-21 16:02:52.985 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:02:52.990 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:02:52.992 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.017100000000003ms 200 text/css
2019-10-21 16:02:53.061 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:02:53.063 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:02:53.068 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:02:53.074 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 15.278ms 404 
2019-10-21 16:02:53.076 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 13.736500000000001ms 404 
2019-10-21 16:02:53.077 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.447100000000001ms 404 
2019-10-21 16:02:53.080 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:02:53.083 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.2302ms 404 
2019-10-21 16:04:00.934 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:04:00.946 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:04:00.948 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:04:00.951 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:04:00.991 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:01.310 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:04:01.374 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:04:01.501 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:04:01.708 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:04:01.715 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:04:01.717 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:04:01.735 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 16:04:01.743 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:04:01.800 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:04:01.833 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 16:04:01.852 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:04:02.001 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 151.762ms.
2019-10-21 16:04:02.009 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 169.07590000000002ms
2019-10-21 16:04:02.012 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:04:02.017 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 283.25550000000004ms 200 text/html; charset=utf-8
2019-10-21 16:04:03.549 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:04:03.557 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:04:03.565 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:04:03.572 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:03.724 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:04:03.877 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:04:03.893 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 16.7ms.
2019-10-21 16:04:03.903 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 331.75870000000003ms
2019-10-21 16:04:03.907 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:04:03.913 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 364.1188ms 200 text/html; charset=utf-8
2019-10-21 16:04:04.025 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571663043937  
2019-10-21 16:04:04.043 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:04:04.052 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:04:04.068 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 16:04:04.071 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 16:04:04.107 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:04.117 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:04:04.177 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 16:04:04.220 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 16:04:04.347 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 127.6234ms.
2019-10-21 16:04:04.349 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 295.01ms
2019-10-21 16:04:04.351 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:04:04.353 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 329.0554ms 200 text/html; charset=utf-8
2019-10-21 16:04:04.359 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 16:04:04.361 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 16:04:04.363 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:04:04.365 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:04:04.370 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:04:04.372 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:04:04.399 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:04.400 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:04.420 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:04:04.436 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:04:04.440 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 66.27080000000001ms
2019-10-21 16:04:04.442 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:04:04.444 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 84.75540000000001ms 200 image/jpeg
2019-10-21 16:04:04.793 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:04:04.795 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 420.937ms
2019-10-21 16:04:04.797 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:04:04.799 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 439.5154ms 200 image/jpeg
2019-10-21 16:04:05.709 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/1?_=1571663043938  
2019-10-21 16:04:05.714 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:04:05.720 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:04:05.724 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:05.733 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:04:05.762 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:04:05.767 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:04:05.771 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 16:04:05.830 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 60.194500000000005ms.
2019-10-21 16:04:05.833 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 110.9611ms
2019-10-21 16:04:05.834 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:04:05.837 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 128.20860000000002ms 200 text/html; charset=utf-8
2019-10-21 16:04:05.842 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=450&height=300  
2019-10-21 16:04:05.846 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:04:05.848 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:04:05.851 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:05.857 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:04:05.862 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:04:05.866 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 14.092500000000001ms
2019-10-21 16:04:05.868 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/1?_=1571663043939  
2019-10-21 16:04:05.870 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:04:05.872 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:04:05.874 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 29.666700000000002ms 200 image/jpeg
2019-10-21 16:04:05.880 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:04:05.884 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:04:05.901 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 16:04:05.921 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 16:04:05.925 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 16:04:05.932 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.4238ms.
2019-10-21 16:04:05.934 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 52.2669ms
2019-10-21 16:04:05.937 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:04:05.940 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 72.65740000000001ms 200 text/html; charset=utf-8
2019-10-21 16:06:04.508 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:06:04.519 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:06:04.520 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:06:04.522 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:06:04.559 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:04.905 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:06:04.978 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:06:05.120 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:06:05.349 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:06:05.351 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:06:05.359 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:06:05.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 16:06:05.386 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:06:05.440 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:06:05.468 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 16:06:05.485 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:06:05.660 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 170.3357ms.
2019-10-21 16:06:05.670 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 194.1348ms
2019-10-21 16:06:05.675 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:06:05.679 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 16:06:05.686 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 306.5536ms 200 text/html; charset=utf-8
2019-10-21 16:06:05.707 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 16:06:05.712 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 33.8925ms 304 application/javascript
2019-10-21 16:06:07.715 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:06:07.724 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:06:07.731 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:06:07.738 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:07.872 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:06:08.014 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:06:08.032 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 17.192800000000002ms.
2019-10-21 16:06:08.041 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 304.8739ms
2019-10-21 16:06:08.045 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:06:08.052 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 336.5904ms 200 text/html; charset=utf-8
2019-10-21 16:06:08.119 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571663168080  
2019-10-21 16:06:08.138 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:06:08.149 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:06:08.162 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 16:06:08.164 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 16:06:08.201 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:08.211 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:06:08.261 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 16:06:08.303 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 16:06:08.461 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 158.7564ms.
2019-10-21 16:06:08.463 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 312.0768ms
2019-10-21 16:06:08.465 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:06:08.467 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 348.2927ms 200 text/html; charset=utf-8
2019-10-21 16:06:08.473 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 16:06:08.475 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 16:06:08.477 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:06:08.479 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:06:08.485 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:06:08.488 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:06:08.513 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:08.515 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:08.535 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:06:08.555 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:06:08.560 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 71.9847ms
2019-10-21 16:06:08.562 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:06:08.564 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 91.0526ms 200 image/jpeg
2019-10-21 16:06:08.878 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:06:08.885 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 391.8253ms
2019-10-21 16:06:08.887 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:06:08.890 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 416.7597ms 200 image/jpeg
2019-10-21 16:06:09.482 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/1?_=1571663168081  
2019-10-21 16:06:09.488 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:06:09.494 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:06:09.498 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:09.506 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:06:09.536 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:06:09.541 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:06:09.545 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 16:06:09.596 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 51.1961ms.
2019-10-21 16:06:09.598 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 101.9439ms
2019-10-21 16:06:09.600 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:06:09.602 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 120.4645ms 200 text/html; charset=utf-8
2019-10-21 16:06:09.607 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=450&height=300  
2019-10-21 16:06:09.610 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:06:09.613 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:06:09.615 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:09.620 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:06:09.625 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/1?_=1571663168082  
2019-10-21 16:06:09.627 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:06:09.630 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:06:09.632 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 17.5376ms
2019-10-21 16:06:09.635 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:06:09.637 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 30.0484ms 200 image/jpeg
2019-10-21 16:06:09.642 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:06:09.646 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:06:09.662 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 16:06:09.679 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 16:06:09.684 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 16:06:09.692 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.1867ms.
2019-10-21 16:06:09.694 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 49.8836ms
2019-10-21 16:06:09.696 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:06:09.698 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 73.41460000000001ms 200 text/html; charset=utf-8
2019-10-21 16:06:21.130 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:06:21.133 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:06:21.136 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:06:21.138 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:06:21.141 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:06:21.144 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:06:21.152 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:06:21.161 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:06:21.164 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.5978ms 200 text/css
2019-10-21 16:06:21.166 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 34.8014ms 200 text/css
2019-10-21 16:06:21.169 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:06:21.172 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:06:21.174 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 41.889ms 200 text/css
2019-10-21 16:06:21.177 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.024300000000004ms 200 text/css
2019-10-21 16:06:21.181 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:06:21.184 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:06:21.186 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:06:21.189 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:06:21.195 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:06:21.198 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:06:21.201 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 17.7347ms 200 text/css
2019-10-21 16:06:21.203 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:06:21.206 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.2758ms 200 text/css
2019-10-21 16:06:21.209 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.224600000000002ms 200 text/css
2019-10-21 16:06:21.211 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:06:21.213 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:06:21.215 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:06:21.217 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 84.2746ms 200 text/css
2019-10-21 16:06:21.220 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:06:21.223 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 86.2201ms 200 text/css
2019-10-21 16:06:21.226 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:06:21.229 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.4215ms 200 text/css
2019-10-21 16:06:21.231 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:06:21.234 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 19.8585ms 200 text/css
2019-10-21 16:06:21.238 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:06:21.241 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.253500000000003ms 200 text/css
2019-10-21 16:06:21.375 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:06:21.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:06:21.382 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.4241ms 404 
2019-10-21 16:06:21.384 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.3218000000000005ms 404 
2019-10-21 16:06:21.386 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:06:21.391 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.6188ms 404 
2019-10-21 16:06:21.470 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:06:21.473 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7956000000000003ms 404 
2019-10-21 16:08:55.958 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:08:55.969 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:08:55.971 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:08:55.972 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:08:56.004 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:08:56.326 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:08:56.393 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:08:56.546 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:08:56.852 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:08:56.857 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:08:56.872 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:08:56.897 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 16:08:56.908 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:08:56.989 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:08:57.022 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 16:08:57.044 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:08:57.208 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 166.184ms.
2019-10-21 16:08:57.216 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 186.47480000000002ms
2019-10-21 16:08:57.219 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:08:57.223 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 327.4751ms 200 text/html; charset=utf-8
2019-10-21 16:08:59.099 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:08:59.107 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:08:59.117 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:08:59.125 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:08:59.291 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:08:59.491 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:08:59.510 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 18.009800000000002ms.
2019-10-21 16:08:59.521 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 395.6898ms
2019-10-21 16:08:59.525 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:08:59.532 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 431.98330000000004ms 200 text/html; charset=utf-8
2019-10-21 16:08:59.601 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571663339560  
2019-10-21 16:08:59.626 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:08:59.637 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:08:59.655 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 16:08:59.657 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 16:08:59.696 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:08:59.706 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:08:59.770 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 16:08:59.820 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 16:08:59.956 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 136.84730000000002ms.
2019-10-21 16:08:59.957 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 318.68260000000004ms
2019-10-21 16:08:59.959 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:08:59.961 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 361.79400000000004ms 200 text/html; charset=utf-8
2019-10-21 16:08:59.968 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 16:08:59.970 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 16:08:59.972 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:08:59.977 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:08:59.983 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:08:59.987 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:09:00.013 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:09:00.015 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:09:00.033 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:09:00.053 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:09:00.059 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 74.3565ms
2019-10-21 16:09:00.061 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:09:00.063 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 95.38300000000001ms 200 image/jpeg
2019-10-21 16:09:00.451 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:09:00.453 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 464.3218ms
2019-10-21 16:09:00.455 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:09:00.458 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 489.6394ms 200 image/jpeg
2019-10-21 16:09:00.996 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/1?_=1571663339561  
2019-10-21 16:09:01.003 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:09:01.008 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:09:01.013 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:09:01.021 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:09:01.047 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:09:01.051 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:09:01.056 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 16:09:01.104 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 49.1053ms.
2019-10-21 16:09:01.106 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 95.7424ms
2019-10-21 16:09:01.107 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:09:01.110 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 113.70710000000001ms 200 text/html; charset=utf-8
2019-10-21 16:09:01.115 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=450&height=300  
2019-10-21 16:09:01.118 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:09:01.120 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:09:01.122 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:09:01.127 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:09:01.132 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:09:01.134 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/1?_=1571663339562  
2019-10-21 16:09:01.136 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 14.5708ms
2019-10-21 16:09:01.139 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:09:01.141 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:09:01.143 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 27.2998ms 200 image/jpeg
2019-10-21 16:09:01.148 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:09:01.152 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:09:01.169 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 16:09:01.188 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 16:09:01.192 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 16:09:01.200 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.1766000000000005ms.
2019-10-21 16:09:01.205 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 53.9885ms
2019-10-21 16:09:01.207 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:09:01.209 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 74.8404ms 200 text/html; charset=utf-8
2019-10-21 16:10:12.813 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:10:12.821 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:10:12.830 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:10:12.832 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:10:12.834 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:10:12.837 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:10:12.856 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:10:12.861 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:10:12.870 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 64.0673ms 200 text/css
2019-10-21 16:10:12.872 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 70.56150000000001ms 200 text/css
2019-10-21 16:10:12.880 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:10:12.888 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 67.50450000000001ms 200 text/css
2019-10-21 16:10:12.890 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:10:12.892 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:10:12.900 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:10:12.905 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:10:12.911 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.1733ms 200 text/css
2019-10-21 16:10:12.913 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:10:12.915 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:10:12.917 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:10:12.919 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:10:12.921 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 98.2565ms 200 text/css
2019-10-21 16:10:12.923 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:10:12.926 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 123.84830000000001ms 200 text/css
2019-10-21 16:10:12.929 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 125.7389ms 200 text/css
2019-10-21 16:10:12.934 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.2972ms 200 text/css
2019-10-21 16:10:12.936 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:10:12.938 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:10:12.941 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:10:12.943 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:10:12.946 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.4087ms 200 text/css
2019-10-21 16:10:12.948 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:10:12.950 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:10:12.952 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 23.1143ms 200 text/css
2019-10-21 16:10:12.954 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:10:12.957 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 71.76950000000001ms 200 text/css
2019-10-21 16:10:12.960 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:10:12.962 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.1098ms 404 
2019-10-21 16:10:12.964 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.5618ms 200 text/css
2019-10-21 16:10:12.966 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 25.342200000000002ms 404 
2019-10-21 16:10:13.120 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:10:13.123 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.621ms 404 
2019-10-21 16:10:13.126 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:10:13.129 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.6128ms 404 
2019-10-21 16:12:06.564 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:06.574 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:06.574 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:06.575 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:06.608 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:06.897 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:12:06.974 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:12:07.159 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:12:07.314 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:12:07.314 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:12:07.314 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:12:07.329 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/  
2019-10-21 16:12:07.337 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:12:07.388 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:12:07.414 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index(System.String) on controller CateringPro.Controllers.HomeController (CateringPro).
2019-10-21 16:12:07.427 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:12:07.538 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 112.30600000000001ms.
2019-10-21 16:12:07.539 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.HomeController.Index (CateringPro) in 124.21180000000001ms
2019-10-21 16:12:07.539 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.HomeController.Index (CateringPro)'
2019-10-21 16:12:07.542 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 213.97560000000001ms 200 text/html; charset=utf-8
2019-10-21 16:12:07.548 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 16:12:07.553 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: The file /js/site.js was not modified
2019-10-21 16:12:07.554 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.022ms 304 application/javascript
2019-10-21 16:12:48.803 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:48.808 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'OrderTotal' on entity type 'Order'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:48.809 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'OrderDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:48.809 +03:00 [Warning] Microsoft.EntityFrameworkCore.Model.Validation: No type was specified for the decimal column 'Price' on entity type 'Pizzas'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values using 'HasColumnType()'.
2019-10-21 16:12:48.833 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:49.022 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2019-10-21 16:12:49.067 +03:00 [Information] Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager: User profile is available. Using 'C:\Users\yurik\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2019-10-21 16:12:49.176 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Dishes] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2019-10-21 16:12:49.297 +03:00 [Information] Microsoft.Hosting.Lifetime: Application started. Press Ctrl+C to shut down.
2019-10-21 16:12:49.298 +03:00 [Information] Microsoft.Hosting.Lifetime: Hosting environment: Development
2019-10-21 16:12:49.298 +03:00 [Information] Microsoft.Hosting.Lifetime: Content root path: C:\Users\yurik\source\repos\Ferolka\catering\CateringPro
2019-10-21 16:12:49.313 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:12:49.320 +03:00 [Warning] Microsoft.AspNetCore.HttpsPolicy.HttpsRedirectionMiddleware: Failed to determine the https port for redirect.
2019-10-21 16:12:49.376 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:12:49.396 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:12:49.402 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:49.523 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:12:49.636 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:12:49.734 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 98.2086ms.
2019-10-21 16:12:49.739 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 343.04470000000003ms
2019-10-21 16:12:49.740 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:12:49.748 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 435.93940000000003ms 200 text/html; charset=utf-8
2019-10-21 16:12:49.878 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571663569783  
2019-10-21 16:12:49.883 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:12:49.897 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:12:49.912 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 16:12:49.912 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 16:12:49.940 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:49.947 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:12:49.992 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 16:12:50.035 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 16:12:50.150 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 116.18430000000001ms.
2019-10-21 16:12:50.150 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 253.5009ms
2019-10-21 16:12:50.150 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:12:50.151 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 272.5415ms 200 text/html; charset=utf-8
2019-10-21 16:12:50.156 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 16:12:50.156 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 16:12:50.170 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:12:50.170 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:12:50.175 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:12:50.175 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:12:50.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:50.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:50.200 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:12:50.218 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:12:50.220 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 44.0308ms
2019-10-21 16:12:50.220 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:12:50.220 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 64.10770000000001ms 200 image/jpeg
2019-10-21 16:12:50.502 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:12:50.503 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 327.83480000000003ms
2019-10-21 16:12:50.503 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:12:50.503 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 346.7566ms 200 image/jpeg
2019-10-21 16:12:51.655 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/1?_=1571663569784  
2019-10-21 16:12:51.658 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:12:51.662 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:12:51.664 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:51.669 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:12:51.692 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:12:51.695 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:12:51.698 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 16:12:51.743 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 46.412600000000005ms.
2019-10-21 16:12:51.744 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 81.69460000000001ms
2019-10-21 16:12:51.744 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:12:51.744 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 88.9578ms 200 text/html; charset=utf-8
2019-10-21 16:12:51.748 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=450&height=300  
2019-10-21 16:12:51.750 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:12:51.750 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:12:51.750 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:51.754 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:12:51.755 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:12:51.755 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 5.2283ms
2019-10-21 16:12:51.755 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:12:51.755 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.2145ms 200 image/jpeg
2019-10-21 16:12:51.767 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/1?_=1571663569785  
2019-10-21 16:12:51.768 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:12:51.773 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:12:51.776 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:12:51.789 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 16:12:51.802 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 16:12:51.805 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 16:12:51.812 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 7.8654ms.
2019-10-21 16:12:51.812 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 38.312200000000004ms
2019-10-21 16:12:51.812 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:12:51.812 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 44.956ms 200 text/html; charset=utf-8
2019-10-21 16:13:24.361 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:24.361 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:24.362 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:24.362 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:24.362 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:24.362 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:24.368 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:24.368 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:24.368 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:24.369 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.5760000000000005ms 200 text/css
2019-10-21 16:13:24.369 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.429600000000001ms 200 text/css
2019-10-21 16:13:24.369 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.5760000000000005ms 200 text/css
2019-10-21 16:13:24.373 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:24.373 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:24.373 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:24.373 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:24.373 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.449ms 200 text/css
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8527ms 200 text/css
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.0878ms 200 text/css
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.2702ms 200 text/css
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.5738ms 200 text/css
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:24.374 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 12.1426ms 200 text/css
2019-10-21 16:13:24.377 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:24.377 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:24.377 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:24.378 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:24.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7794000000000001ms 200 text/css
2019-10-21 16:13:24.378 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:24.378 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:24.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1154ms 200 text/css
2019-10-21 16:13:24.378 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7942ms 200 text/css
2019-10-21 16:13:24.495 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:13:24.497 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:13:24.498 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.9604ms 404 
2019-10-21 16:13:24.498 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4653ms 404 
2019-10-21 16:13:24.533 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:13:24.533 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4233ms 404 
2019-10-21 16:13:24.556 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:13:24.557 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8114ms 404 
2019-10-21 16:13:45.950 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:13:45.953 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:13:45.954 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:13:45.956 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:45.959 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:13:45.967 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:13:45.972 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 5.181900000000001ms.
2019-10-21 16:13:45.972 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 17.8654ms
2019-10-21 16:13:45.972 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:13:45.972 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 22.375700000000002ms 200 text/html; charset=utf-8
2019-10-21 16:13:45.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:45.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:45.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:45.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:45.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 16:13:45.979 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 16:13:45.980 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:45.980 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2153ms 200 text/css
2019-10-21 16:13:45.980 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9856ms 200 text/css
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8341ms 200 application/javascript
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.9523000000000001ms 200 text/css
2019-10-21 16:13:45.981 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.3699000000000001ms 200 text/css
2019-10-21 16:13:45.984 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:45.986 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 16:13:45.986 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.5152ms 200 application/javascript
2019-10-21 16:13:45.987 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 16:13:45.987 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 16:13:45.988 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:45.990 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 16:13:45.990 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.2796000000000003ms 200 application/javascript
2019-10-21 16:13:45.990 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 16:13:45.990 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.0425ms 200 application/javascript
2019-10-21 16:13:45.990 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:45.990 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.5399000000000003ms 200 text/css
2019-10-21 16:13:45.992 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:45.992 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.7259ms 200 text/css
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6083000000000001ms 200 text/css
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6473ms 200 text/css
2019-10-21 16:13:46.059 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5847ms 200 text/css
2019-10-21 16:13:46.062 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:46.062 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9256ms 200 text/css
2019-10-21 16:13:46.064 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:46.064 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.9574ms 200 text/css
2019-10-21 16:13:46.064 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:46.064 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.463ms 200 text/css
2019-10-21 16:13:46.067 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:46.068 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:46.068 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.8429ms 200 text/css
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.8193ms 200 text/css
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:46.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7696000000000001ms 200 text/css
2019-10-21 16:13:46.070 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:46.070 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2184000000000001ms 200 text/css
2019-10-21 16:13:46.074 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:46.075 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:46.075 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.6196000000000002ms 200 text/css
2019-10-21 16:13:46.077 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:46.077 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:46.078 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5574ms 200 text/css
2019-10-21 16:13:46.095 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 16:13:46.096 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 16:13:46.096 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2808000000000002ms 200 font/woff2
2019-10-21 16:13:46.105 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571663626043  
2019-10-21 16:13:46.109 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:13:46.110 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:13:46.112 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 16:13:46.112 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 16:13:46.113 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:46.114 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:13:46.118 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 16:13:46.132 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 16:13:46.146 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 14.341800000000001ms.
2019-10-21 16:13:46.146 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 36.7397ms
2019-10-21 16:13:46.147 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:13:46.147 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 42.0852ms 200 text/html; charset=utf-8
2019-10-21 16:13:46.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 16:13:46.152 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 16:13:46.152 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:46.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:13:46.153 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:46.153 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:13:46.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:46.153 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:46.156 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:13:46.158 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:13:46.158 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 5.6018ms
2019-10-21 16:13:46.158 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:46.159 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 6.6812000000000005ms 200 image/jpeg
2019-10-21 16:13:46.199 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:13:46.199 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:13:46.199 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5214ms 404 
2019-10-21 16:13:46.200 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.7401ms 404 
2019-10-21 16:13:46.261 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:13:46.262 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5132ms 404 
2019-10-21 16:13:46.275 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:13:46.275 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3992ms 404 
2019-10-21 16:13:46.307 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:13:46.307 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 154.6637ms
2019-10-21 16:13:46.336 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:46.338 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 186.6343ms 200 image/jpeg
2019-10-21 16:13:50.036 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes  
2019-10-21 16:13:50.038 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:13:50.038 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "Index", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index() on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:13:50.039 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:50.041 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price], [t].[DishId], [t].[IngredientId], [t].[Id], [t].[CompanyId], [t].[Name]
FROM [Dishes] AS [d]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t] ON [d].[Id] = [t].[DishId]
ORDER BY [d].[Id], [t].[DishId], [t].[IngredientId], [t].[Id]
2019-10-21 16:13:50.044 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executing ViewResult, running view Index.
2019-10-21 16:13:50.047 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor: Executed ViewResult - view Index executed in 3.012ms.
2019-10-21 16:13:50.047 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.Index (CateringPro) in 9.4098ms
2019-10-21 16:13:50.047 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.Index (CateringPro)'
2019-10-21 16:13:50.057 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 21.395200000000003ms 200 text/html; charset=utf-8
2019-10-21 16:13:50.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:50.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:50.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:50.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:50.058 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:50.060 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:50.060 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.7741000000000002ms 200 text/css
2019-10-21 16:13:50.060 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:50.061 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.3509ms 200 text/css
2019-10-21 16:13:50.061 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:50.061 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.3454ms 200 text/css
2019-10-21 16:13:50.063 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:50.063 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.732600000000001ms 200 text/css
2019-10-21 16:13:50.063 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js  
2019-10-21 16:13:50.063 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:50.064 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/bootstrap.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\bootstrap.min.js'
2019-10-21 16:13:50.064 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.4796ms 200 application/javascript
2019-10-21 16:13:50.063 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 5.5261000000000005ms 200 text/css
2019-10-21 16:13:50.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.min.js  
2019-10-21 16:13:50.069 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:50.070 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:50.070 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.642ms 200 text/css
2019-10-21 16:13:50.072 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.min.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.min.js'
2019-10-21 16:13:50.073 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.9191000000000003ms 200 application/javascript
2019-10-21 16:13:50.087 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/jquery.bootstrap-duallistbox.js  
2019-10-21 16:13:50.087 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/site.js?v=V1sfWhW_fW21HwfXlh1sdiDQUV6Vy8wYBWRIoCVkglk  
2019-10-21 16:13:50.088 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/jquery.bootstrap-duallistbox.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\jquery.bootstrap-duallistbox.js'
2019-10-21 16:13:50.088 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5394ms 200 application/javascript
2019-10-21 16:13:50.090 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/js/site.js'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\js\site.js'
2019-10-21 16:13:50.090 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4679ms 200 application/javascript
2019-10-21 16:13:50.147 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:50.147 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:50.147 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.6877ms 200 text/css
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/site.css  
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/site.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\site.css'
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4208ms 200 text/css
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap-duallistbox.css  
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:50.148 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.4288ms 200 text/css
2019-10-21 16:13:50.149 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap-duallistbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap-duallistbox.css'
2019-10-21 16:13:50.149 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.1058000000000001ms 200 text/css
2019-10-21 16:13:50.167 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/fonts/fontawesome-webfont.woff2?v=4.3.0  
2019-10-21 16:13:50.169 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/fonts/fontawesome-webfont.woff2'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\fonts\fontawesome-webfont.woff2'
2019-10-21 16:13:50.169 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.6685000000000003ms 200 font/woff2
2019-10-21 16:13:50.179 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/ListItems?searchcriteria=&_=1571663630123  
2019-10-21 16:13:50.179 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:13:50.180 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "ListItems", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ListItems(CateringPro.ViewModels.QueryModel) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:13:50.181 +03:00 [Warning] CateringPro.Models.CompanyUser: Dish Controllers  - ListItems User.GetCompanyID() 1 
2019-10-21 16:13:50.181 +03:00 [Warning] CateringPro.Models.CompanyUser: ListItems pageRecords 20 
2019-10-21 16:13:50.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:50.182 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:13:50.184 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_1='?' (DbType = Int32), @__companyId_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [t].[Id], [t].[CategoriesId], [t].[Code], [t].[CompanyId], [t].[Description], [t].[Name], [t].[PictureId], [t].[Price], [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name], [t0].[DishId], [t0].[IngredientId], [t0].[Id], [t0].[CompanyId], [t0].[Name]
FROM (
    SELECT TOP(@__p_1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
    FROM [Dishes] AS [d]
    WHERE ([d].[CompanyId] = @__companyId_0) AND @__companyId_0 IS NOT NULL
) AS [t]
INNER JOIN [Categories] AS [c] ON [t].[CategoriesId] = [c].[Id]
LEFT JOIN (
    SELECT [d0].[DishId], [d0].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
    FROM [DishIngredients] AS [d0]
    INNER JOIN [Ingredients] AS [i] ON [d0].[IngredientId] = [i].[Id]
) AS [t0] ON [t].[Id] = [t0].[DishId]
ORDER BY [t].[Id], [c].[Id], [t0].[DishId], [t0].[IngredientId], [t0].[Id]
2019-10-21 16:13:50.189 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view ListItems.
2019-10-21 16:13:50.203 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 13.847700000000001ms.
2019-10-21 16:13:50.203 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.ListItems (CateringPro) in 23.729200000000002ms
2019-10-21 16:13:50.203 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.ListItems (CateringPro)'
2019-10-21 16:13:50.204 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 24.8151ms 200 text/html; charset=utf-8
2019-10-21 16:13:50.206 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:50.208 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:50.208 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/carousel.css  
2019-10-21 16:13:50.208 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:50.209 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:50.209 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:50.209 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5751000000000001ms 200 text/css
2019-10-21 16:13:50.210 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:50.210 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 3.309ms 200 text/css
2019-10-21 16:13:50.210 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:50.210 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5216ms 200 text/css
2019-10-21 16:13:50.210 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/carousel.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\carousel.css'
2019-10-21 16:13:50.210 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.5286000000000002ms 200 text/css
2019-10-21 16:13:50.224 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:50.224 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css  
2019-10-21 16:13:50.224 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 16.0413ms 200 text/css
2019-10-21 16:13:50.230 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/font-awesome/css/font-awesome.css  
2019-10-21 16:13:50.231 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css  
2019-10-21 16:13:50.231 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture?width=80&height=80  
2019-10-21 16:13:50.232 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=80&height=80  
2019-10-21 16:13:50.232 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/font-awesome/css/font-awesome.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\font-awesome\css\font-awesome.css'
2019-10-21 16:13:50.232 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 2.4681ms 200 text/css
2019-10-21 16:13:50.232 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:50.232 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:13:50.233 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:50.235 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:13:50.235 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/lib/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\lib\awesome-bootstrap-checkbox\awesome-bootstrap-checkbox.css'
2019-10-21 16:13:50.235 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 4.178ms 200 text/css
2019-10-21 16:13:50.237 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:50.237 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:13:50.238 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:50.238 +03:00 [Information] Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware: Sending file. Request path: '/css/bootstrap.min.css'. Physical path: 'C:\Users\yurik\source\repos\Ferolka\catering\CateringPro\wwwroot\css\bootstrap.min.css'
2019-10-21 16:13:50.238 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 14.0167ms 200 text/css
2019-10-21 16:13:50.239 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:13:50.239 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:13:50.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.5252ms 404 
2019-10-21 16:13:50.240 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 7.0377ms
2019-10-21 16:13:50.240 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:50.240 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.770300000000001ms 200 image/jpeg
2019-10-21 16:13:50.243 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/js/bootstrap.min.js.map  
2019-10-21 16:13:50.245 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 1.2541ms 404 
2019-10-21 16:13:50.396 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:13:50.397 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 159.31380000000001ms
2019-10-21 16:13:50.397 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:50.397 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 165.6622ms 200 image/jpeg
2019-10-21 16:13:50.407 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:13:50.408 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3191ms 404 
2019-10-21 16:13:50.413 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/css/bootstrap.min.css.map  
2019-10-21 16:13:50.414 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 0.3239ms 404 
2019-10-21 16:13:51.671 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditModal/1?_=1571663630124  
2019-10-21 16:13:51.673 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:13:51.674 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditModal", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditModal(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:13:51.675 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:51.678 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [d].[Id], [d].[CategoriesId], [d].[Code], [d].[CompanyId], [d].[Description], [d].[Name], [d].[PictureId], [d].[Price]
FROM [Dishes] AS [d]
WHERE ([d].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:13:51.688 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT [d].[DishId], [d].[IngredientId], [i].[Id], [i].[CompanyId], [i].[Name]
FROM [DishIngredients] AS [d]
INNER JOIN [Ingredients] AS [i] ON [d].[IngredientId] = [i].[Id]
WHERE ([d].[DishId] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:13:51.711 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Code], [c].[CompanyId], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2019-10-21 16:13:51.713 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditModal.
2019-10-21 16:13:51.718 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 4.9659ms.
2019-10-21 16:13:51.718 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditModal (CateringPro) in 44.06ms
2019-10-21 16:13:51.718 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditModal (CateringPro)'
2019-10-21 16:13:51.718 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 46.6873ms 200 text/html; charset=utf-8
2019-10-21 16:13:51.722 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Pictures/GetPicture/4?width=450&height=300  
2019-10-21 16:13:51.723 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:51.724 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "GetPicture", controller = "Pictures"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetPicture(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.PicturesController (CateringPro).
2019-10-21 16:13:51.725 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:51.727 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[PictureData]
FROM [Pictures] AS [p]
WHERE ([p].[Id] = @__p_0) AND @__p_0 IS NOT NULL
2019-10-21 16:13:51.729 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor: Executing Microsoft.AspNetCore.Mvc.FileContentResult, sending file with download name '' ...
2019-10-21 16:13:51.729 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.PicturesController.GetPicture (CateringPro) in 4.9547ms
2019-10-21 16:13:51.729 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.PicturesController.GetPicture (CateringPro)'
2019-10-21 16:13:51.729 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.109ms 200 image/jpeg
2019-10-21 16:13:51.746 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request starting HTTP/1.1 GET http://localhost:51321/Dishes/EditIngredients/1?_=1571663630125  
2019-10-21 16:13:51.747 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executing endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:13:51.747 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Route matched with {action = "EditIngredients", controller = "Dishes"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] EditIngredients(System.Nullable`1[System.Int32]) on controller CateringPro.Controllers.DishesController (CateringPro).
2019-10-21 16:13:51.747 +03:00 [Information] Microsoft.EntityFrameworkCore.Infrastructure: Entity Framework Core 3.0.0 initialized 'AppDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer' with options: None
2019-10-21 16:13:51.748 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='Text', CommandTimeout='30']
SELECT CONVERT(VARCHAR(11), [d].[IngredientId])
FROM [DishIngredients] AS [d]
WHERE ([d].[DishId] = @__id_0) AND @__id_0 IS NOT NULL
2019-10-21 16:13:51.751 +03:00 [Information] Microsoft.EntityFrameworkCore.Database.Command: Executing DbCommand [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [i].[Id] AS [Value], [i].[Name] AS [Text]
FROM [Ingredients] AS [i]
ORDER BY [i].[Name]
2019-10-21 16:13:51.753 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executing PartialViewResult, running view EditIngredients.
2019-10-21 16:13:51.754 +03:00 [Information] Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor: Executed PartialViewResult - view (null) executed in 1.21ms.
2019-10-21 16:13:51.754 +03:00 [Information] Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker: Executed action CateringPro.Controllers.DishesController.EditIngredients (CateringPro) in 6.856000000000001ms
2019-10-21 16:13:51.754 +03:00 [Information] Microsoft.AspNetCore.Routing.EndpointMiddleware: Executed endpoint 'CateringPro.Controllers.DishesController.EditIngredients (CateringPro)'
2019-10-21 16:13:51.754 +03:00 [Information] Microsoft.AspNetCore.Hosting.Diagnostics: Request finished in 7.8204ms 200 text/html; charset=utf-8
