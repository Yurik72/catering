@model IEnumerable<Complex>
@inject CateringPro.Core.SharedViewLocalizer Localizer
@{
    var ModelName = "Categories";
    ViewData["Title"] = ModelName;
}


<div class="container">
    <div class="row justify-content-end">
        <div class="col-md-6 right">
            <h2>@Localizer["Complex"]</h2>
        </div>
        <div class="col-md-6 right">
            <div id="custom-search-input">
                <div class="input-group">
                    <input type="text" id="search-val" class="form-control input-lg" placeholder="@Localizer["Complex"]" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" id="search-btn" type="button">
                            <span class="fa fa-search" aria-hidden="true"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12">
            <div id="table-content" class="table-content">

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12  table-footer bg-white text-success">
            <div id="create-btn" class="col-lg-3 col-md-3 create">

                <span class="fa fa-cart-plus fa-2x" aria-hidden="true"></span>
                <span aria-hidden="true">@Localizer["Add"]</span>
            </div>
        </div>
    </div>
</div>
<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

@section Scripts
{
    <script type="text/javascript">
        $(function () {
            setup_listitems({
                href: '@Url.Content("~/Complex")',
                onloadedcb:loaddishes
            });

            function loaddishes(id) {
                if (!id)
                    id = $('#dialogContent').find("#Id").val();
                var url = '@Url.Content("~/Complex/EditDishes/")' + id;

                $.get(url, function (data) {
                    $('#dialogContent').find(".dishes-content").html(data);
                     $('#dialogContent').find(".select-dishes").bootstrapDualListbox({
                              // default text
                              filterTextClear:decodeURI('@Localizer["DLB show all"]'),//'show all',
                              filterPlaceHolder:"Filter",//decodeURI('@Localizer["DLB Filter"]'),//'Filter',
                              moveSelectedLabel:decodeURI('@Localizer["DLB Move Selected"]'),//'Move selected',
                              moveAllLabel:decodeURI('@Localizer["DLB Move All"]'),//'Move all',
                              removeSelectedLabel:decodeURI('@Localizer["DLB Remove selected"]'),//'Remove selected',
                              removeAllLabel:decodeURI('@Localizer["DLB Remove all"]'),//'Remove all',
                              // true/false (forced true on androids, see the comment later)
                              moveOnSelect:true,                     
                              // 'all' / 'moved' / false                                          
                              preserveSelectionOnMove:false,               
                              // 'string', false                                    
                              selectedListLabel:false,                   
                              // 'string', false
                              nonSelectedListLabel:false, 
                              // 'string_of_postfix' / false                                                     
                              helperSelectNamePostfix:'_helper',     
                              // minimal height in pixels
                              selectorMinimalHeight: 100,
                              // whether to show filter inputs
                              showFilterInputs:true,           
                              // string, filter the non selected options                                                
                              nonSelectedFilter:'',               
                              // string, filter the selected options                                             
                              selectedFilter:'',                                          
                              // text when all options are visible / false for no info text                     
                              infoText:decodeURI('@Localizer["DLB Showing all"]'),//'Showing all {0}',              
                              // when not all of the options are visible due to the filter                                        
                              infoTextFiltered:'<span class="badge badge-warning">Filtered</span> {0} from {1}',
                              // when there are no options present in the list
                              infoTextEmpty:decodeURI('@Localizer["DLB Empty list"]'),//'Empty list',    
                              // sort by input order
                              sortByInputOrder:false,
                              // filter by selector's values, boolean
                              filterOnValues:false,          
                              // boolean, allows user to unbind default event behaviour and run their own instead                                                  
                              eventMoveOverride:false,          
                              // boolean, allows user to unbind default event behaviour and run their own instead                                               
                              eventMoveAllOverride:false,     
                              // boolean, allows user to unbind default event behaviour and run their own instead
                              eventRemoveOverride:false,          
                              // boolean, allows user to unbind default event behaviour and run their own instead                                             
                              eventRemoveAllOverride:false,         
                               // sets the button style class for all the buttons
                              btnClass: 'btn-outline-secondary',     
                              // string, sets the text for the "Move" button                                           
                              btnMoveText: '&gt;',       
                              // string, sets the text for the "Remove" button                                                       
                              btnRemoveText: '&lt;',     
                              // string, sets the text for the "Move All" button
                              btnMoveAllText: '&gt;&gt;',    
                              // string, sets the text for the "Remove All" button
                              btnRemoveAllText: '&lt;&lt;' 
                            });
                });
            }
        })
    </script>
}
