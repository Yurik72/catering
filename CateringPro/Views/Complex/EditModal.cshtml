@model CateringPro.Models.Complex
@inject CateringPro.Core.SharedViewLocalizer Localizer

@{
    ViewData["Title"] = "Edit";
}
<style>
    form dt {
        float: left;
        display: block;
        width: 30%;
    }

    dd select {
        width: 50%;
    }

    dd textarea {
        width: 100%;
    }
</style>
<div class="modal-content" id="complex" data-id="@Model.Id">
    <div class="modal-header">
        <h5 class="modal-title">@Localizer["Complex"]</h5>
        <button class="close" data-dismiss="modal" area-hidden="true">
            <span aria-hidden="true">&times;</span>
        </button>

    </div>
    <div class="modal-body">
        <form asp-action="EditModal">
            <dl class="">
                <dd><input type="hidden" asp-for="Id" /></dd>




                <dt>  <label asp-for="Name" class="control-label"></label></dt>
                <dd>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </dd>
                <dt> <label asp-for="Price" class="control-label"></label> </dt>
                <dd> <input asp-for="Price" class="form-control" /></dd>
                @*<dt> <label asp-for="DishesQuantity" class="control-label"></label> </dt>*@
                <dd> <input asp-for="DishesQuantity" type="hidden" id="quantity" name="DishesQuantity" min="1" max="10" class="form-control" onchange="changeQuantity()" /></dd>
                <!--
    <dt><label asp-for="DishComplex" class="control-label"></label> </dt>
    <dd id="dishContainer" class="dishes-container">
        <div class="dishes-content" id="dish">

        </div>
        <div id="dish-footer">
            <div id="create-dishline" class="col  create">
                <span class="fa fa-plus fa-2x" aria-hidden="true"></span>
                <span>@Localizer["Add"]</span>
            </div>
        </div>
    </dd>
        -->
            </dl>
        </form>
        <div class="complex-content container">
            @for (int i = 0; i < Model.DishesQuantity; i++)
            {
                await Html.RenderPartialAsync("ComplexLineDishes", Model.DishComplex.Where(d => d.DishCourse == i ));
            }
            <div id="dish-footer">
                <div id="create-dishline" class="col  create">
                    <span class="fa fa-plus fa-2x" aria-hidden="true"></span>
                    <span>@Localizer["Add"]</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-1">
            </div>
            <div class="col-sm-2">
                <button type="button" button class="btn btn-primary" data-save="modal">@Localizer["Save"]</button>
            </div>
            <div class="col-sm-1">
            </div>
            <div class="col-sm-2">
                <button type="button" button class="btn btn-primary" data-dismiss="modal">@Localizer["Cancel"]</button>
            </div>
            
            <div class="col-sm-1">
                <button onclick="send()" button class="btn btn-primary" >Send</button>
            </div>

        </div>
    </div>
</div>
<div id="modDialogcomplexline" class="modal fade complex-line" style="background-color:green">
    <div id="dialogContentcomplexline" class="modal-dialog"></div>
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-toggle="modal" data-target="#modDialogcomplexline">X</button>
        </div>
        <div class="modal-body">
        </div>

    </div>
    </div>
<script>

    

    function send() {
        console.log("Post ");
        var complexLines = $(".complex-content").find(".complex-line");
        //console.log($(complexLines[1]).find("dish-line"));
        //for(let line in complexLines ) {
        //    console.log(line);
        //}
        var sendObj = {};
        $(complexLines).each(function (i) {
            var dishLine = $(this).find(".dish-line");
            sendObj["DishesIdes" + i] = [];
            $(dishLine).each(function (ind){
                //console.log("course " + i + " dish " + $(this).attr("dish-id"));
                sendObj["DishesIdes" + i].push($(this).attr("dish-id"));
            });
            
        });
        sendObj.Id = $("#Id").val();
        sendObj.Name = $("#Name").val();
        sendObj.Price = $("#Price").val();
        sendObj.DishQuantity = $("#quantity").val();
        console.log(sendObj);
        $.ajax({
            type: "POST",
            data: sendObj,
            url: "/Complex/EditModal",
            success: function (data) {
                 alert(data);
            }
        });



    }
   // $(document).on("click", "#create-dishline",
    $("#create-dishline").unbind().click(
    function (e) {
            console.log("create new line");
            e.preventDefault();
            var dlg = $("#complex");
            var quan = parseInt($("#quantity").val());
            $("#quantity").val(quan + 1);

                      var id = dlg.attr("data-id");
            var course = dlg.find(".complex-content").find(".complex-line").length;

                     // var url = '@Url.Content("~/Complex/CreateNewCourse")' + `?dishId=${id}&course=${course}`;
                      var url = '@Url.Content("~/Complex/CreateNewCourse")' + `?complexId=${id}&course=${course}`;
                  console.log(url);
            $.get(url, function (data) {
                //document.getElementById("dishContainer").appendChild(data);
                //console.log(data);
                dlg.find(".container").find("#dish-footer").before(data);
                $('select').selectpicker({
                    liveSearch: true,
                    showSubtext: true
                });
                });
        });

    $(document).on("click", ".delete-line",
        function (e) {
            console.log("delete line");
            e.preventDefault();
            var dlg = $(this).parents("#complex");
            var docline = $(this).parents(".complex-line");
            docline.remove();
            var quan = parseInt( $("#quantity").val());
            $("#quantity").val(quan - 1);
            var maxidx = dlg.find(".complex-line").length;
            console.log(maxidx);
            dlg.find(".complex-line").each(function (lidx, lel) {
                $(lel).find('input[name*="["]').each(function (idx, el) {
                    var name = $(el).attr('name');
                    console.log(name);
                    var newname = name.replace(/\[\d+\]/g, `[${lidx}]`);
                    $(el).attr('name', newname);
                    console.log(newname);
                });
            })

        });
    $(document).on("click", ".delete-item",
        function (e) {
            console.log("delete item");
            e.preventDefault();
            var dlg = $(this).parents("#complex");
            var docline = $(this).parents(".dish-line");
            docline.remove();
            
            var maxidx = dlg.find(".dish-line").length;
            console.log(maxidx);
            dlg.find(".dish-line").each(function (lidx, lel) {
                $(lel).find('input[name*="["]').each(function (idx, el) {
                    var name = $(el).attr('name');
                    console.log(name);
                    var newname = name.replace(/\[\d+\]/g, `[${lidx}]`);
                    $(el).attr('name', newname);
                    console.log(newname);
                });
            })

        });
   







</script>


    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }

