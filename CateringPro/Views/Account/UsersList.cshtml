@model IEnumerable<CompanyUser>
@inject CateringPro.Core.SharedViewLocalizer Localizer
@using CateringPro.Core


@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    var groups = ViewData["UserGroupId"];
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }

}

@if (true)
{
    @foreach (var item in Model)
    {
        <div class="col-12 p-0  mt-2">
            <div class="col-12 p-0 d-flex box-shadow-container brd-bot-line mb-3 mb-lg-0 mb-md-0"
                 style="min-height: 52px; color: #232323">
                <div class="col-12 p-0  d-flex flex-lg-row flex-md-row flex-column align-items-center mt-2 mt-lg-0 mt-md-0">
                    <div class="col-md-3 col-lg-3 col-12 d-flex justify-content-between mt-1"
                         style="font-size: 16px">
                        <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                              style="font-size: 14px; font-weight: bold">Користувач</span><span class="col-lg-12 col-md-12 col-6 p-0">@(item.UserTypeEn==UserTypeEnum.Child ? item.ChildNameSurname : item.NameSurname)</span>
                    </div>
                    <div class="col-md-3 col-lg-3 col-12 d-flex justify-content-between mt-1"
                         style="font-size: 16px">
                        <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                              style="font-size: 14px; font-weight: bold">Email</span><span class="col-lg-12 col-md-12 col-6 p-0">@item.Email</span>
                    </div>
                    <div class="col-md-2 col-lg-2 col-12 d-flex justify-content-between mt-1"
                         style="font-size: 16px">
                        <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                              style="font-size: 14px; font-weight: bold"></span><span class="col-lg-12 col-md-12 col-6 p-0">@item.UserSubGroup?.Name</span>
                    </div>
                    <div class="col-md-2 col-lg-2 col-12 d-flex justify-content-between mt-1"
                         style="font-size: 16px">
                        <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                              style="font-size: 14px; font-weight: bold"></span><span class="col-lg-12 col-md-12 col-6 p-0">@item.UserGroup?.Name</span>
                    </div>
                    <div class="col-12 col-lg-2 col-md-2 d-flex mb-2  pr-0 justify-content-lg-between justify-content-md-between justify-content-end">
                        <div class="btn">
                            <a href="@Url.Action("EditUserModal","Account",
                                  new { userId = item.Id })" class="cmd-edit dialog-edit-icon"><img src="../img/pen-icon.svg" alt="Change item" /></a>
                        </div>
                       
                        <a asp-action="Delete" asp-route-userid="@item.Id" class="btn cmd-delete dialog-edit-icon"><img src="~/img/delete-icon.svg" alt="Delete item"></a>

                    </div>
                </div>
            </div>
        </div>
    }
     @Html.DisplayFor(model => querymodel, "PageNavigation", null)
    @*@Html.DisplayFor(model => querymodel, "PageNavigation", null)*@
}

else
{
    <table class="table">
        <thead>
            <tr class="bg-white text-success">
                <th>

                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.UserName, querymodel)
                </th>
                <th>
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Email, querymodel)

                </th>
                <th>
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.UserGroup.Name, querymodel, (object)ViewBag.UserGroupId)

                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="bg-white text-secondary">
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserGroup.Name)
                    </td>
                    <td>


                        <a asp-action="Delete" asp-route-id="@item.Id" class="cmd-delete dialog-edit-icon"> <span class="fa fa-trash" aria-hidden="true"></span></a>
                        @Html.ActionLink("", "EditUserModal",
                                     new { userId = item.Id }, new { @class = "cmd-edit dialog-edit-icon fa fa-pencil-square-o" })
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="bg-white text-success rounded border">
                <td colspan="3">
                    @await this.InvokeComponentAsync(Component, "TablePager", model => model.UserName, querymodel)
                </td>
            </tr>
        </tfoot>
    </table>
}
