@model IEnumerable<CompanyUser>

@using  CateringPro.Core
@inject CateringPro.Core.SharedViewLocalizer Localizer




@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }

}


@if (false)
{
        <div class="container-xl container container-md container-sm container-lg">
                <div class="row align-items-center pb-3  ml-xl-0 ml-md-0 ml-sm-0 p-0 ml-0" style="margin-top: 48px">
                    <div class="col-7 col-xl-9 col-md-6 col-sm-6 align-content-center mr-md-auto pl-0">
                        <p class="h2 h2-mob"
                           style="font-weight: 600">
                            @Localizer["MenuUsers"]
                        </p>
                    </div>
                </div>

                <div class="row pb-3 ml-xl-0 ml-md-0 ml-sm-0 p-lg-0 p-md-0 align-items-center  justify-content-end m-0 flex-md-column flex-lg-row flex-column container p-0">
                    @*@Html.DisplaySortField(model => model.ChildNameSurname).AddSortField(model => model.Email).AddSortField(model => model.UserGroup).Display(querymodel)*@
                    <div class="col-lg-4 col-12 p-0 ">
                        <div class="col-12 p-0 justify-content-center w-100" style="display: flex">
                            <form class="form-inline col-12 p-0" style=" display: flex;">
                                <input id="search-val" class="form-control  w-100" type="search" placeholder="Пошук..." aria-label="Search"
                                       style="font-size: 16px; color:#797979; height: 48px; background: url('../img/search-icon.svg') no-repeat; background-position: 95%">
                            </form>
                        </div>
                    </div>
                    <div class="col-lg-4 col-12 p-0 d-none d-md-block">
                        <div class="col-12 p-0 justify-content-center" style="height: 48px">
                            <button type="button" id="create-btn"
                                    class=" btn btn-xl btn-outline-danger float-lg-right justify-content-center float-md-none font-weight-bold btn-block col-lg-6"
                                    onmousemove="this.style.background='#36C233'; this.style.color='#ffffff'"
                                    onmouseout="this.style.background='#ffffff'; this.style.color='#36C233'"
                                    style="background: #ffffff; border-color: #36C233; outline: none; height: 48px; color: #36C233; display: flex; align-items: center; justify-content: space-evenly; margin: 28px 0 23px; font-size: 14px;">
                                &#65291; @Localizer["Create"]
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row ml-0 mr-0 justify-content-start w-100 align-content-center d-lg-flex d-none d-md-flex d-sm-none mt-3"
                     style="height: 40px; font-weight: 500; font-size: 18px; color: #232323; background: #F7F7F7;">

                    @Html.DisplayListHeaderForEx(model => model.ChildNameSurname, new { colnumbers = 3 })
                    @Html.DisplayListHeaderForEx(model => model.Email, new { colnumbers = 4 })
                    @Html.DisplayListHeaderForEx(model => model.UserGroup.Name, new { colnumbers = 3 })

                    @*<div class="col-3" style="cursor: pointer"><span class="sort-span">Користувач</span></div>
                        <div class="col-4" style="cursor: pointer"><span class="sort-span">Email</span></div>
                        <div class="col-3" style="cursor: pointer"><span class="sort-span">Назва групи</span></div>*@
                    <div class="col-2"></div>


                </div>
                <div id="table-content" data-sortfield="@querymodel.SortField" data-sortorder="@querymodel.SortOrder" data-filter="@querymodel.SearchCriteria" class="row mx-0 justify-content-start w-100 align-content-center">

                </div>
            </div>
            <div class="col-lg-4 col-12 p-0 d-lg-none d-md-none d-block position-sticky sticky-class align-content-center "
                 style="display: flex; bottom: -2px; height: 70px; background: #ffffff; box-shadow: 0px -11px 22px -15px rgba(0, 0, 0, 0.25);">
                <div class="container h-100 ">
                    <div class="col-12 p-0 justify-content-center h-100 align-items-center d-flex">
                        <button type="button"
                                class=" btn btn-xl btn-outline-danger float-lg-right justify-content-center float-md-none font-weight-bold btn-block col-lg-6"
                                onmousemove="this.style.background='#36C233'; this.style.color='#ffffff'"
                                onmouseout="this.style.background='#ffffff'; this.style.color='#36C233'"
                                style="background: #ffffff; border-color: #36C233; outline: none; height: 48px; color: #36C233; display: flex; align-items: center; justify-content: space-evenly; font-size: 14px;">
                            &#65291; СТВОРИТИ
                        </button>
                    </div>
                </div>
            </div>
            <div class="container-xl container container-md container-sm container-lg">

                <div class="row" style="margin-top: 48px">
                    <div class="col-sm">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#" aria-label="Previous"
                                       style="border: none; color: #232323; width: 40px; height: 40px; background: #F1F2F4; border-radius: 0; text-align: center">
                                        <span aria-hidden="true"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#"
                                       style="border: none; color: #232323; font-family: Open-Sans; font-size: 16px; line-height: 22px; width: 40px; height: 40px; background: #F1F2F4; text-align: center">1</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#"
                                       style="border: none; color: #232323; font-family: Open-Sans; font-size: 16px; line-height: 22px; width: 40px; height: 40px; background: #F1F2F4; text-align: center">2</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0 active-custom"
                                       href="#"
                                       style="border: none; color: #232323; font-family: Open-Sans; font-size: 16px; line-height: 22px; width: 40px; height: 40px;  text-align: center">
                                        3<span class="sr-only">(current)</span>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#" aria-label="Next"
                                       style="border: none; color: #232323; width: 40px; height: 40px; background: #F1F2F4; border-radius: 0; text-align: center">
                                        <span aria-hidden="true">></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="modDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" id="dialogContent" style="max-width: 850px">

                </div>
            </div>


@*@section Scripts
{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">

        $(function () {
            setup_listitems({
                href: '@Url.Content("~/Account")',
                method: "UsersList",
                createmethod: "CreateUserModal",
                onloadedcb: onload
            });

            var dialog_addbalance = $('#modDialog-addbalance');
            dialog_addbalance.find('#add-balance-confirm').click(function (e) {
                addBalance(dialog_addbalance);
            })
            function addBalance(dlg) {
                    const formData = new FormData();
                    formData.append('Amount', dlg.find('#add-balance-amount').val());
                    formData.append('Comments', dlg.find('#add-balance-comment').val());
                    formData.append('__RequestVerificationToken', $('[name="__RequestVerificationToken"]').val());

                    formData.append('Id', $('#user-fin-id').val());
                    formData.append('CompanyId', $('#user-fin-companyid').val());
                    formData.append('IncomeType', '2');
                    //formData.append('TransactionDate', (new Date).toJSON().slice(0, 10).split("-").reverse().join("."));


                fetch('@Url.Content("~/Account/AddBalanceTo")', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json, application/xml, text/plain, text/html, *.*',


                    },
                    body: formData
                })
                    .then(response => {
                        console.log(response);
                        loadfin();
                    })
                    .catch(error => dialog_error(error));

                }
            function loadfin() {
                var userId = $('.modal-body').attr('data-id');
                 var urlfin = '@Url.Content("~/Account/UserFinanceOfUser?userId=")' + userId;
                $.get(urlfin, function (data) {
                    $("#nav-content-fin-of-user").html(data);
                    setupfinhandlers($("#nav-content-fin-of-user"));
                });

            }
            function setupfinhandlers(cont) {
                cont.find('#addbalance').click(function (e) {
                    e.preventDefault();
                    dialog_addbalance.modal('show');
                    $(document).on('hidden.bs.modal', '.modal', function () {
                        $('.modal:visible').length && $(document.body).addClass('modal-open');
                    });
                });
            }

            function onload() {
                var userId = $('.modal-body').attr('data-id');
                var url = '@Url.Content("~/Account/RolesForUser?userId=")' + userId;
                $.get(url, function (data) {
                    $("#user-roles-content").html(data);
                    setuproleshandler($("#user-roles-content"));
                });
                var urlcomp = '@Url.Content("~/Account/EditCompaniesForUser?userId=")' + userId;
                $.get(urlcomp, function (data) {
                    $("#user-companies-content").html(data);
                    setupcompanyhandler($("#user-companies-content"))
                });
                loadfin();


                function setuproleshandler(cont) {
                    cont.find(".role-item").click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('active'))
                            $(this).removeClass('active').removeClass("fa-check-square-o").addClass("fa-square-o");
                        else
                            $(this).addClass('active').removeClass("fa-square-o").addClass("fa-check-square-o");

                        var roles = cont.find(".role-item.active").map(function () {
                            return $(this).text();
                        })
                            .get()
                            .join(", ");
                        cont.find("#roles").val(roles);
                    });
                };

                function setupcompanyhandler(cont) {
                    cont.find(".company-item").click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('active'))
                            $(this).removeClass('active').removeClass("fa-check-square-o").addClass("fa-square-o");
                        else
                            $(this).addClass('active').removeClass("fa-square-o").addClass("fa-check-square-o");

                        var roles = cont.find(".company-item.active").map(function () {
                            return $(this).attr("data-id");
                        })
                            .get()
                            .join(", ");
                        cont.find("#companies").val(roles);
                    });
                };
            }
        })
    </script>
    <script>
        $('#sources').each(function () {
            let classes = $(this).attr("class"),
                id = $(this).attr("id"),
                name = $(this).attr("name");
            let template = '<div class="' + classes + '">';
            template += '<span class="custom-select-trigger">' + $(this).attr("placeholder") + '</span>';
            template += '<div class="custom-options">';
            $(this).find("option").each(function () {
                template += '<span class="custom-option ' + $(this).attr("class") + '" data-value="' + $(this).attr("value") + '">' + $(this).html() + '</span>';
            });
            template += '</div></div>';

            $(this).wrap('<div class="custom-select-wrapper"></div>');
            $(this).hide();
            $(this).after(template);
        });
        $(".custom-option:first-of-type").hover(function () {
            $(this).parents(".custom-options").addClass("option-hover");
        }, function () {
            $(this).parents(".custom-options").removeClass("option-hover");
        });
        $(".custom-select-trigger").on("click", function () {
            $('html').one('click', function () {
                $(".custom-select").removeClass("opened");
            });
            $(this).parents(".custom-select").toggleClass("opened");
            event.stopPropagation();
        });
        $(".custom-option").on("click", function () {
            $(this).parents(".custom-select-wrapper").find("select").val($(this).data("value"));
            $(this).parents(".custom-options").find(".custom-option").removeClass("selection");
            $(this).addClass("selection");
            $(this).parents(".custom-select").removeClass("opened");
            $(this).parents(".custom-select").find(".custom-select-trigger").text($(this).text());
        });

        $('.delete-parent').click(function () {
            $(this).closest('.parent-delete').remove();
        });


    </script>

     Optional JavaScript 
     jQuery first, then Popper.js, then Bootstrap JS 
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
            integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
            integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
            crossorigin="anonymous"></script>
    <script src="../js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI"
            crossorigin="anonymous"></script>
}*@




}

else
{
<div class="container">
    <div class="row justify-content-end">
        <div class="col-md-6 right">
            <h1>@Localizer["MenuUsers"]</h1>
        </div>
        <div class="col-md-6 right">
            <div id="custom-search-input">
                <div class="input-group">
                    <input type="text" id="search-val" class="form-control input-lg" placeholder="@Localizer["MenuUsers"]" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" id="search-btn" type="button">
                            <span class="fa fa-search" aria-hidden="true"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12">
            <div id="table-content" class="table-content">

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12  table-footer bg-white text-success">
            <div id="create-btn" class="col-lg-3 col-md-3 create">
                <span class="fa fa-plus fa-2x" aria-hidden="true"></span>

            </div>
        </div>
    </div>
</div>
<div id="modDialog" class="modal fade wide-modal">
    <div id="dialogContent" class="modal-dialog"></div>
</div>
}

<div id="modDialog-addbalance" class="modal fade wide-modal" tabindex="-1" role="dialog">
    <div id="dialogContent-addbalance" class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h5 class="modal-title"><i class="fa fa-exclamation-circle fa-3" style="color:red" aria-hidden="true"></i>@Localizer["AddBalance"]</h5>
                <button type="button" class="close" data-dismiss="modal" data-target="modDialog-addbalance" aria-label="Close">
                    <span aria-hidden="true">X</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="row p-0 flex-lg-row flex-md-row flex-column">
                        <div class="form-group d-flex flex-lg-row flex-md-row flex-column col-lg-6 col-md-6 col-12 input-row-black justify-content-end align-content-center">
                            <label for="add-balance-amount"
                                   class="profile-form-title col-12 col-lg-3 col-md-3 p-0 d-flex align-items-center mb-0"></label>
                            <input id="add-balance-amount"
                                   type="text" class="form-control col-12 col-lg-6 col-md-6 pl-3"
                                   placeholder="@Localizer["Amount"]" Amount" style="height: 34px">
                        </div>
                    </div>
                    <div class="row p-0 flex-lg-row flex-md-row flex-column">
                        <div class="form-group d-flex flex-lg-row flex-md-row flex-column col-lg-6 col-md-6 col-12 input-row-black justify-content-end align-content-center">
                            <label for="add-balance-comment"
                                   class="profile-form-title col-12 col-lg-3 col-md-3 p-0 d-flex align-items-center mb-0"></label>
                            <input id="add-balance-comment"
                                   type="text" class="form-control col-12 col-lg-6 col-md-6 pl-3"
                                   placeholder="@Localizer["Comment"]" style="height: 34px">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="container">
                    <div class="row p-0 flex-lg-row flex-md-row flex-column">

                        <div class="col-6 my-2 text-center">
                            <button id="add-balance-confirm" type="button" button class="btn btn-primary m-2 col-sm-4 col-xl-4 col-12"
                                    style="background: #36C233; border: 1px solid #36C233; height: 48px" data-dismiss="modal" data-target="modDialog-addbalance">
                                @Localizer["Add"]
                            </button>
                        </div>
                        <div class="col-6 my-2 text-center">
                            <button id="add-balance-reject" type="button" button class="btn btn-primary m-2 col-sm-4 col-xl-4 col-12"
                                    style="background: #36C233; border: 1px solid #36C233; height: 48px" data-dismiss="modal" data-target="modDialog-addbalance">
                                @Localizer["Reject"]
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts
{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script type="text/javascript">

        $(function () {
            setup_listitems({
                href: '@Url.Content("~/Account")',
                method: "UsersList",
                createmethod: "CreateUserModal",
                onloadedcb: onload
            });

            var dialog_addbalance = $('#modDialog-addbalance');
            dialog_addbalance.find('#add-balance-confirm').click(function (e) {
                addBalance(dialog_addbalance);
            })
            function addBalance(dlg) {
                    const formData = new FormData();
                    formData.append('Amount', dlg.find('#add-balance-amount').val());
                    formData.append('Comments', dlg.find('#add-balance-comment').val());
                    formData.append('__RequestVerificationToken', $('[name="__RequestVerificationToken"]').val());

                    formData.append('Id', $('#user-fin-id').val());
                    formData.append('CompanyId', $('#user-fin-companyid').val());
                    formData.append('IncomeType', '2');
                    //formData.append('TransactionDate', (new Date).toJSON().slice(0, 10).split("-").reverse().join("."));


                fetch('@Url.Content("~/Account/AddBalanceTo")', {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json, application/xml, text/plain, text/html, *.*',


                    },
                    body: formData
                })
                    .then(response => {
                        console.log(response);
                        loadfin();
                    })
                    .catch(error => dialog_error(error));

                }
            function loadfin() {
                var userId = $('.modal-body').attr('data-id');
                 var urlfin = '@Url.Content("~/Account/UserFinanceOfUser?userId=")' + userId;
                $.get(urlfin, function (data) {
                    $("#nav-content-fin-of-user").html(data);
                    setupfinhandlers($("#nav-content-fin-of-user"));
                });

            }
            function setupfinhandlers(cont) {
                cont.find('#addbalance').click(function (e) {
                    e.preventDefault();
                    dialog_addbalance.modal('show');
                    $(document).on('hidden.bs.modal', '.modal', function () {
                        $('.modal:visible').length && $(document.body).addClass('modal-open');
                    });
                });
            }

            function onload() {
                var userId = $('.modal-body').attr('data-id');
                var url = '@Url.Content("~/Account/RolesForUser?userId=")' + userId;
                $.get(url, function (data) {
                    $("#user-roles-content").html(data);
                    setuproleshandler($("#user-roles-content"));
                });
                var urlcomp = '@Url.Content("~/Account/EditCompaniesForUser?userId=")' + userId;
                $.get(urlcomp, function (data) {
                    $("#user-companies-content").html(data);
                    setupcompanyhandler($("#user-companies-content"))
                });
                loadfin();


                function setuproleshandler(cont) {
                    cont.find(".role-item").click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('active'))
                            $(this).removeClass('active').removeClass("fa-check-square-o").addClass("fa-square-o");
                        else
                            $(this).addClass('active').removeClass("fa-square-o").addClass("fa-check-square-o");

                        var roles = cont.find(".role-item.active").map(function () {
                            return $(this).text();
                        })
                            .get()
                            .join(", ");
                        cont.find("#roles").val(roles);
                    });
                };

                function setupcompanyhandler(cont) {
                    cont.find(".company-item").click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('active'))
                            $(this).removeClass('active').removeClass("fa-check-square-o").addClass("fa-square-o");
                        else
                            $(this).addClass('active').removeClass("fa-square-o").addClass("fa-check-square-o");

                        var roles = cont.find(".company-item.active").map(function () {
                            return $(this).attr("data-id");
                        })
                            .get()
                            .join(", ");
                        cont.find("#companies").val(roles);
                    });
                };
            }
        })
    </script>
}

