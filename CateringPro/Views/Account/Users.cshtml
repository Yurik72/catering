@model IEnumerable<CompanyUser>

@using  CateringPro.Core
@inject CateringPro.Core.SharedViewLocalizer Localizer
@*<h1 class="bg-info text-white">@Localizer["MenuUsers"]</h1>*@




@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }

}

@if (false)
{

        <div class="container-xl container container-md container-sm container-lg">
            <div class="row align-items-center pb-3  ml-xl-0 ml-md-0 ml-sm-0 p-0 ml-0" style="margin-top: 48px">
                <div class="col-7 col-xl-9 col-md-6 col-sm-6 align-content-center mr-md-auto pl-0">
                    <p class="h2" style="font-weight: 600">
                        @Localizer["MenuUsers"]
                    </p>
                </div>
            </div>
            <div class="row pb-3 ml-xl-0 ml-md-0 ml-sm-0 p-lg-0 p-md-0 align-items-center m-0 flex-md-column flex-lg-row flex-column container p-0">

                @Html.DisplaySortField(model => model.UserName).AddSortField(model => model.Email).AddSortField(model => model.UserGroup.Name).Display(querymodel)

                @*<div class="col-lg-4 col-12 p-0 ">
                        <div class="col-12 p-0 justify-content-lg-start justify-content-center"
                                style="display: flex; flex-wrap: nowrap">
                            <p class="h6 align-self-center mb-0" style="padding-bottom: 2px">Сортирувати:</p>

                            <select name="sources" id="sources" class="custom-select sources" placeholder="по ціні"
                                    style="border: none">
                                <option class="drpdwn-btn selection" value="price"
                                        style="border: none; box-shadow: 0 4px 22px rgba(0, 0, 0, 0.15);">по ціні
                                </option>
                                <option class="drpdwn-btn" value="popular">по популярності</option>
                            </select>
                        </div>
                    </div>*@
                <div class="col-lg-4 col-12 p-0 ">
                    <div class="col-12 p-0 justify-content-center w-100" style="display: flex">
                        <form class="form-inline col-12 p-0" style=" display: flex;">
                            <input id="search-val" class="form-control  w-100" type="search" placeholder="Пошук..." aria-label="Search"
                                    style="font-size: 16px; color:#797979; height: 48px; background: url('~/img/search-icon.svg') no-repeat; background-position: 95%">
                        </form>
                    </div>
                </div>
                <div class="col-lg-4 col-12 p-0 d-none d-md-block">
                    <div class="col-12 p-0 justify-content-center" style="height: 48px">
                        <button id="create-btn" type="button"
                                class=" btn btn-xl btn-outline-danger float-lg-right justify-content-center float-md-none font-weight-bold btn-block col-lg-6"
                                onmousemove="this.style.background='#36C233'; this.style.color='#ffffff'"
                                onmouseout="this.style.background='#ffffff'; this.style.color='#36C233'"
                                style="background: #ffffff; border-color: #36C233; outline: none; height: 48px; color: #36C233; display: flex; align-items: center; justify-content: space-evenly; margin: 28px 0 23px; font-size: 14px;">
                            &#65291; @*СТВОРИТИ*@ @Localizer["Create"]
                        </button>
                    </div>
                </div>
            </div>
            <div class="row ml-0 mr-0 justify-content-start w-100 align-content-center d-lg-flex d-none d-md-flex d-sm-none "
                    style="height: 40px; font-weight: 500; font-size: 18px; color: #232323; background: #F7F7F7;">
                <div class="col-1">
                </div>
                @Html.DisplayListHeaderForEx(model => model.UserName)
                @Html.DisplayListHeaderForEx(model => model.Email)
                @Html.DisplayListHeaderForEx(model => model.UserGroup.Name)
                @*<div class="col-2" style="cursor: pointer"><span class="sort-span">Комплекс</span></div>
                    <div class="col-2" style="cursor: pointer"><span class="sort-span">Страва</span></div>
                    <div class="col-4" style="cursor: pointer"><span class="sort-span">Опис</span></div>
                    <div class="col-2" style="cursor: pointer"><span class="sort-span">Вартість</span></div>*@
                <div class="col-2"></div>
            </div>
            <div id="table-content" class="row ml-0 mr-0 mt-0 justify-content-center w-100">
            </div>
            @*<div class="row" style="margin-top: 92px">
                    <div class="col-sm">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#" aria-label="Previous"
                                        style="border: none; color: #232323; width: 40px; height: 40px; background: #F1F2F4; border-radius: 0; text-align: center">
                                        <span aria-hidden="true"></span>
                                        <span class="sr-only">Previous</span>
                                    </a>
                                </li>
                                <li class="page-item"><a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#"
                                                            style="border: none; color: #232323; font-family: Open-Sans; font-size: 16px; line-height: 22px; width: 40px; height: 40px; background: #F1F2F4; text-align: center">1</a>
                                </li>
                                <li class="page-item"><a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#"
                                                            style="border: none; color: #232323; font-family: Open-Sans; font-size: 16px; line-height: 22px; width: 40px; height: 40px; background: #F1F2F4; text-align: center">2</a>
                                </li>
                                <li class="page-item"><a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0 active-custom"
                                                            href="#"
                                                            style="border: none; color: #232323; font-family: Open-Sans; font-size: 16px; line-height: 22px; width: 40px; height: 40px;  text-align: center">3<span
                                        class="sr-only">(current)</span></a></li>
                                <li class="page-item">
                                    <a class="page-link m-lg-1 m-sm-2 m-md-3 m-2 mt-0 mb-0" href="#" aria-label="Next"
                                        style="border: none; color: #232323; width: 40px; height: 40px; background: #F1F2F4; border-radius: 0; text-align: center">
                                        <span aria-hidden="true">></span>
                                        <span class="sr-only">Next</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>*@

        </div>
        <div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                    aria-hidden="true">
                <div class="modal-dialog" id="dialogContent" style="max-width: 850px">
                </div>
        </div>

        <script>
            $('#sources').each(function () {
                let classes = $(this).attr("class"),
                    id = $(this).attr("id"),
                    name = $(this).attr("name");
                let template = '<div class="' + classes + '">';
                template += '<span class="custom-select-trigger">' + $(this).attr("placeholder") + '</span>';
                template += '<div class="custom-options">';
                $(this).find("option").each(function () {
                    template += '<span class="custom-option ' + $(this).attr("class") + '" data-value="' + $(this).attr("value") + '">' + $(this).html() + '</span>';
                });
                template += '</div></div>';

                $(this).wrap('<div class="custom-select-wrapper"></div>');
                $(this).hide();
                $(this).after(template);
            });
            $(".custom-option:first-of-type").hover(function () {
                $(this).parents(".custom-options").addClass("option-hover");
            }, function () {
                $(this).parents(".custom-options").removeClass("option-hover");
            });
            $(".custom-select-trigger").on("click", function () {
                $('html').one('click', function () {
                    $(".custom-select").removeClass("opened");
                });
                $(this).parents(".custom-select").toggleClass("opened");
                event.stopPropagation();
            });
            $(".custom-option").on("click", function () {
                $(this).parents(".custom-select-wrapper").find("select").val($(this).data("value"));
                $(this).parents(".custom-options").find(".custom-option").removeClass("selection");
                $(this).addClass("selection");
                $(this).parents(".custom-select").removeClass("opened");
                $(this).parents(".custom-select").find(".custom-select-trigger").text($(this).text());
            });

            $('.delete-parent').click(function () {
                $(this).closest('.parent-delete').remove();
            });


        </script>
}

else
{
    <div class="container">
        <div class="row justify-content-end">
            <div class="col-md-6 right">
                @*<h2>@Localizer["MenuUsers"]</h2>*@
                <h1>@Localizer["MenuUsers"]</h1>
            </div>
            <div class="col-md-6 right">
                <div id="custom-search-input">
                    <div class="input-group">
                        <input type="text" id="search-val" class="form-control input-lg" placeholder="@Localizer["MenuUsers"]" />
                        <span class="input-group-btn">
                            <button class="btn btn-info btn-lg" id="search-btn" type="button">
                                <span class="fa fa-search" aria-hidden="true"></span>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-12 col-lg-12">
                <div id="table-content" class="table-content">

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-12 col-lg-12  table-footer bg-white text-success">
                <div id="create-btn" class="col-lg-3 col-md-3 create">
                    <span class="fa fa-plus fa-2x" aria-hidden="true"></span>

                </div>
            </div>
        </div>
    </div>
    <div id="modDialog" class="modal fade wide-modal">
        <div id="dialogContent" class="modal-dialog"></div>
    </div>
}



@section Scripts
{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


<script type="text/javascript">

        $(function () {
            setup_listitems({
                href: '@Url.Content("~/Account")',
                method: "UsersList",
                createmethod: "CreateUserModal",
                onloadedcb: onload
            });




            function onload() {
                var userId = $('.modal-body').attr('data-id');
                var url = '@Url.Content("~/Account/RolesForUser?userId=")' + userId;
                $.get(url, function (data) {
                    $("#user-roles-content").html(data);
                    setuproleshandler($("#user-roles-content"));
                });
                var urlcomp = '@Url.Content("~/Account/EditCompaniesForUser?userId=")' + userId;
                $.get(urlcomp, function (data) {
                    $("#user-companies-content").html(data);
                    setupcompanyhandler($("#user-companies-content"))
                });
                var urlfin = '@Url.Content("~/Account/UserFinanceOfUser?userId=")' + userId;
                $.get(urlfin, function (data) {
                    $("#nav-content-fin-of-user").html(data);
                });
                var urlmoney = '@Url.Content("~/Account/AddMoney?userId=")' + userId;
                $.get(urlmoney, function (data) {
                    $("#nav-content-fin-money").html(data);
                });
                function setuproleshandler(cont) {
                    cont.find(".role-item").click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('active'))
                            $(this).removeClass('active').removeClass("fa-check-square-o").addClass("fa-square-o");
                        else
                            $(this).addClass('active').removeClass("fa-square-o").addClass("fa-check-square-o");

                        var roles = cont.find(".role-item.active").map(function () {
                            return $(this).text();
                        })
                            .get()
                            .join(", ");
                        cont.find("#roles").val(roles);
                    });
                };

                function setupcompanyhandler(cont) {
                    cont.find(".company-item").click(function (e) {
                        e.preventDefault();
                        if ($(this).hasClass('active'))
                            $(this).removeClass('active').removeClass("fa-check-square-o").addClass("fa-square-o");
                        else
                            $(this).addClass('active').removeClass("fa-square-o").addClass("fa-check-square-o");

                        var roles = cont.find(".company-item.active").map(function () {
                            return $(this).attr("data-id");
                        })
                            .get()
                            .join(", ");
                        cont.find("#companies").val(roles);
                    });
                };
            }

            function setuproleshandler(cont) {
                cont.find(".role-item").click(function (e) {
                    e.preventDefault();
                    if ($(this).hasClass('active'))
                        $(this).removeClass('active');
                    else
                        $(this).addClass('active');
                    var roles = cont.find(".role-item.active").map(function () {
                        return $(this).text();
                    })
                        .get()
                        .join(", ");
                    cont.find("#roles").val(roles);
                });
            }
        })
</script>
}

