@model IEnumerable<CompanyUser>
@inject CateringPro.Core.SharedViewLocalizer Localizer
<h1 class="bg-info text-white">@Localizer["MenuUsers"]</h1>


<div class="container">
    <div class="row justify-content-end">
        <div class="col-md-6 right">
            <h2>@Localizer["Users"]</h2>
        </div>
        <div class="col-md-6 right">
            <div id="custom-search-input">
                <div class="input-group">
                    <input type="text" id="search-val" class="form-control input-lg" placeholder="@Localizer["Users"]" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" id="search-btn" type="button">
                            <span class="fa fa-search" aria-hidden="true"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12">
            <div id="table-content" class="table-content">

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12  table-footer bg-white text-success">
            <div id="create-btn" class="col-lg-3 col-md-3 create">
                <span class="fa fa-plus fa-2x" aria-hidden="true"></span>

            </div>
        </div>
    </div>
</div>
<div id="modDialog" class="modal fade wide-modal">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

@section Scripts
{

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    

<script type="text/javascript">

        $(function () {
            setup_listitems({
                href: '@Url.Content("~/Account")',
                method: "UsersList",
                createmethod: "CreateUserModal",
                onloadedcb: onload
            });

            function onload() {
                var userId = $('.modal-body').attr('data-id');
                var url = '@Url.Content("~/Account/RolesForUser?userId=")' + userId;
                $.get(url, function (data) {
                    $("#user-roles-content").html(data);
                    setuproleshandler($("#user-roles-content"))
                });
            }
            function setuproleshandler(cont) {
                cont.find(".role-item").click(function (e) {
                    e.preventDefault();
                    if ($(this).hasClass('active'))
                        $(this).removeClass('active');
                    else
                        $(this).addClass('active');

                    var roles=cont.find(".role-item.active").map(function () {
                        return $(this).text();
                    })
                        .get()
                        .join(", ");
                    cont.find("#roles").val(roles);
                });
            }
        })
</script>
}

