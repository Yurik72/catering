@model IEnumerable<CateringPro.Models.Categories>

@using CateringPro.Core


@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }
    Func<string, string> get_span_class = (field) =>
    {

        if (querymodel.SortField == field)
            return querymodel.SortOrder  == "asc" ? "fa fa-sort-asc" : "fa fa-sort-desc";
        return "fa fa-unsorted";
    };
    Func<string, string> get_sort_dir= (field) =>
    {

        if (querymodel.SortField == field )
            return querymodel.SortOrder== "asc" ? "desc" : "asc";
        return "asc";
    };
}
<table class="table">
    <thead>
        <tr class="bg-secondary text-white rounded border">
            <th>

                @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Name, querymodel)
            </th>
            <th>
                @await this.InvokeComponentAsync(Component,"TableColumn",model => model.Description,querymodel)

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="bg-white text-dark">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>


                    <a asp-action="Delete" asp-route-id="@item.Id"> <span class="fa fa-trash" aria-hidden="true"></span></a>
                    @Html.ActionLink("", "EditModal",
                                 new { id = item.Id }, new { @class = "catitem fa fa-pencil-square-o" })
                </td>
            </tr>
        }
    </tbody>
</table>