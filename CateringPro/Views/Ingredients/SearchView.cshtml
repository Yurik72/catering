@model IEnumerable<CateringPro.Models.Ingredients>

@using CateringPro.Core
@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }
    int i = 0;
    if (ViewData["courseindex"] != null)
        i = (int)(ViewData["courseindex"]);
   

}
    <div class="table-fix-head">
        <table class="table search-items">
            <thead>
                <tr class="bg-white text-secondary">
                    <th width="40%">
                       @* @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Name, querymodel)*@
                        Назва
                    </th>
                    <th width="40%">
                        Категорія
                       @* @await this.InvokeComponentAsync(Component, "TableColumn", model => model.IngredientCategory.Name, querymodel)*@
                    </th>

                    
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-id=@item.Id data-name="@item.Name" data-measure="@item.MeasureUnit" style="cursor:pointer">
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IngredientCategory.Name)
                        </td>

                    </tr>
                }
            </tbody>
            <tfoot>
                <tr class="bg-white text-success rounded border">
                    <td colspan="5">
                        @await this.InvokeComponentAsync(Component, "TablePager", model => model.Name, querymodel)
                    </td>
                </tr>
            </tfoot>
        </table>
</div>
        <script>

        </script>
