@model IEnumerable<CateringPro.Models.Ingredients>

@using CateringPro.Core
@inject CateringPro.Core.SharedViewLocalizer Localizer

@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }

}
@if (true)
{
    <div class="row mx-0 justify-content-start w-100 align-content-center">
        <div class="col-12 p-0  mt-2">
            @foreach (var item in Model)
            {
                <div class="col-12 p-0 d-flex box-shadow-container brd-bot-line mb-3 mb-lg-0 mb-md-0 parent-delete"
                     style="min-height: 52px; color: #232323">
                    <div class="col-12 p-0  d-flex flex-lg-row flex-md-row flex-column align-items-center mt-2 mt-lg-0 mt-md-0">
                        <div class="col-md-3 col-lg-3 col-12 d-flex justify-content-between mt-1"
                             style="font-size: 16px">
                            <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                                  style="font-size: 14px; font-weight: bold">@Localizer["Ingredient Category"]</span><span class="col -lg-12 col-md-12 col-6 p-0">@Html.DisplayFor(modelItem => item.IngredientCategory.Name)</span>
                            </div>
                            <div class="col-md-3 col-lg-3 col-12 d-flex justify-content-between mt-1"
                                 style="font-size: 16px">
                                <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                                      style="font-size: 14px; font-weight: bold">@Localizer["Ingredient Name"]</span><span class="col-lg-12 col-md-12 col-6 p-0">@item.Name</span>
                                </div>
                                <div class="col-md-2 col-lg-2 col-12 d-flex justify-content-between mt-1"
                                     style="font-size: 16px">
                                    <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                                          style="font-size: 14px; font-weight: bold">@Localizer["Ingredients_MeasureUnit"]</span><span class="col-lg-12 col-md-12 col-6 p-0">@item.MeasureUnit</span>
                                    </div>
                                    <div class="col-md-2 col-lg-2 col-12 d-flex justify-content-between mt-1"
                                         style="font-size: 16px">
                                        <span class="col-6 p-0 d-md-none d-lg-none d-inline"
                                              style="font-size: 14px; font-weight: bold">>@Localizer["LastPurchasePrice"]</span><span class="col-lg-12 col-md-12 col-6 p-0" style="font-family: Open-Sans, sans-serif">@item.LastPurchasePrice</span>
                                        </div>

                                        <div class="col-12 col-lg-2 col-md-2 d-flex mb-2  pr-0 justify-content-lg-between justify-content-md-between justify-content-end">
                                            <a class="btn cmd-edit dialog-edit-icon" href="@Url.Action("EditModal","Ingredients",
                                  new { id = item.Id }, null)">
                                                <img src="~/img/pen-icon.svg" alt="Change item">
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.Id" class="cmd-delete dialog-edit-icon btn delete-parent" style="background: none; border: none">
                                                <img src="~/img/delete-icon.svg" alt="Delete item">
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
            @Html.DisplayFor(model => querymodel, "PageNavigation", null)
        </div>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr class="bg-white text-success">
                <th width="20%">
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.IngredientCategory.Name, querymodel, (object)ViewBag.CategoriesId)
                </th>
                <th width="20%">

                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Name, querymodel)
                </th>
                <th width="20%">

                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.MeasureUnit, querymodel)
                </th>
                <th width="20%">

                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.LastPurchasePrice, querymodel)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="bg-white text-secondary">
                    <td>
                        @Html.DisplayFor(modelItem => item.IngredientCategory.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MeasureUnit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastPurchasePrice)
                    </td>
                    <td>


                        <a asp-action="Delete" asp-route-id="@item.Id" class="cmd-delete dialog-edit-icon"> <span class="fa fa-trash" aria-hidden="true"></span></a>
                        @Html.ActionLink("", "EditModal",
                                  new { id = item.Id }, new { @class = "cmd-edit dialog-edit-icon fa fa-pencil-square-o" })
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="bg-white text-success rounded border">
                <td colspan="3">
                    @await this.InvokeComponentAsync(Component, "TablePager", model => model.Name, querymodel)
                </td>
            </tr>
        </tfoot>
    </table>
}
