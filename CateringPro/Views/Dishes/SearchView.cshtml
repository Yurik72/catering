@model IEnumerable<CateringPro.Models.Dish>

@using CateringPro.Core
@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }


}
    <div class="table-fix-head">
        <table class="table search-items">
            <thead>
                <tr class="bg-white text-secondary">
                    <th width="20%">

                    </th>
                    <th width="40%">
                        @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Category.Name, querymodel, (object)ViewBag.CategoriesId)
                    </th>
                    <th width="40%">
                        @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Name, querymodel)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @if (item.PictureId.HasValue)
                            {
                                <img src="@Url.Action("GetPicture","Pictures",new { id=item.PictureId,width=40,height=40})" style="width:40px;height:40px;" />
                            }
                            else
                            {
                                <img src="~/images/nophoto.jpg" style="width:40px;height:40px;" />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>

                        <td>
                            <a class="dialog-edit-icon add-item" data-id=@item.Id><span class="fa fa-plus" data-id=@item.Id></span></a>
                        </td>
                    </tr>
                }
            </tbody>
            @*<tfoot>
                <tr class="bg-white text-success rounded border">
                    <td colspan="5">
                        @await this.InvokeComponentAsync(Component, "TablePager", model => model.Description, querymodel)
                    </td>
                </tr>
            </tfoot>*@
        </table>
</div>
        <script>

        </script>
