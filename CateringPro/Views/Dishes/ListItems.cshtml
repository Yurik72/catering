@model IEnumerable<CateringPro.Models.Dish>
@inject Microsoft.Extensions.Options.IOptions<UIOption> pageOptions
@inject CateringPro.Core.SharedViewLocalizer Localizer
@using CateringPro.Core



@{
    QueryModel querymodel = ViewData["QueryModel"] as QueryModel;
    if (querymodel == null)
    {
        querymodel = new QueryModel();
    }

}
@if (true)
{
    @foreach (var item in Model)
    {
        <div class="col-12 p-lg-0 p-md-0 p-0 mt-3 shadow-cust">

            <div class="card  flex-md-row flex-lg-row flex-column mb-0 mb-lg-3 mb-md-3"
                 style=" border: none">
                <div class="col-lg-5 p-lg-0 p-md-0 d-flex flex-row col-12 col-md-5 mt-3 mt-lg-0 mt-md-0">
                    <div class="col-md-2 col-lg-2 col-sm-5 col-5 p-0 d-flex align-content-center">
                        <img src="@Url.Action("GetPicture", "Pictures", new { id = item.PictureId, width = 80, height = 80 })"
                             class="col-12 p-0 align-self-center"
                             style="" alt="...">
                    </div>
                    <div class="col-md-10 col-lg-10 col-sm-7 col-7 p-0 flex-md-row flex-lg-row flex-column d-flex align-items-center">
                        <div class="col-md-6 col-lg-6  align-items-center d-flex" style="height: 22px">
                            <span class="col-sm-4 col-6 col-md-12 col-lg-12 span-gray-bg p-sm-0 pl-sm-1 pr-sm-1 pl-0 pr-0 pr-lg-3 pl-lg-3 pr-md-3 pl-md-3  text-center text-md-left text-lg-left"
                                  style="font-size: 16px; height: 22px; ">@item.Category.Name</span>

                            </div>
                            <div class="col-md-6 col-lg-6 col-12   pl-sm-0 pl-0 pl-md-2 pl-lg-2 align-items-lg-center align-items-md-center align-items-sm-start d-flex pr-0"
                                 style="height: 38px">
                                <span class="col-12 align-content-center d-flex bold-w mt-2 mt-md-0 mt-lg-0 pr-0"
                                      style=" height: 38px">@item.Name</span>
                                </div>
                            </div>

                        </div>
                        <div class="col-lg-7 p-0 align-items-center d-flex flex-lg-row flex-md-row flex-column mb-3 mb-lg-0 mb-md-0">
                            <div class="col-md-7 col-lg-7 col-12 p-0 mt-2 mt-lg-0 mt-md-0">
                                <span class="col-12 align-content-center d-flex change-w">
                                    @item.Description
                                </span>
                            </div>
                            <div class="col-md-5 col-lg-5 col-12 p-0 align-items-center d-flex">
                                <div class="col-md-6 col-lg-6 col-8  pl-md-2 pl-lg-2 position-relative"
                                     style="height: 30px">
                                    <span class="col-4 col-md-12 col-lg-12 p-0 align-content-center d-flex money-w"
                                          style="font-family: Open-Sans">@item.Price @pageOptions.Value.CurrencySymbol</span>
                                    </div>
                                    <div class="col-md-6 col-lg-6 col-4 p-0 justify-content-between d-flex">
                                        <div class="btn " data-toggle="modal" data-target="#change-item-modal">
                                            <a class="dishitem dialog-edit-icon" href="@Url.Action("EditModal","Dishes",
                                  new { id = item.Id }, null)">

                                                <img src="~/img/pen-icon.svg" alt="Change item">
                                            </a>
                                        </div>
                                        <a href="#" class="btn"><img src="~/img/delete-icon.svg" alt="Delete item"></a>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                }
}
else
{
    <table class="table listitems">
        <thead>
            <tr class="bg-white text-secondary">
                <th width="20%">

                </th>
                <th width="10%">
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Category.Name, querymodel, (object)ViewBag.CategoriesId)
                </th>
                <th width="20%">
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Name, querymodel)
                </th>
                <th width="10%">
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Price, querymodel)
                </th>
                <th width="20%">
                    @await this.InvokeComponentAsync(Component, "TableColumn", model => model.Description, querymodel)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (item.PictureId.HasValue)
                        {
                            <img src="@Url.Action("GetPicture", "Pictures", new { id = item.PictureId, width = 80, height = 80 })" style="width:80px;height:80px;" />
                        }
                        else
                        {
                            <img src="~/images/nophoto.jpg" style="width:80px;height:80px;" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td class="small">
                        @Html.DisplayFor(modelItem => item.Description)
                        <p />
                        @string.Join(",", item.DishIngredients.Select(di => di.Ingredient.Name))
                    </td>
                    <td>



                        <a asp-action="Delete" asp-route-id="@item.Id" class="cmd-delete dialog-edit-icon"> <span class="fa fa-trash" aria-hidden="true"></span></a>
                        @Html.ActionLink("", "EditModal",
                                  new { id = item.Id }, new { @class = "dishitem dialog-edit-icon fa fa-pencil-square-o" })
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr class="bg-white text-success rounded border">
                <td colspan="5">
                    @await this.InvokeComponentAsync(Component, "TablePager", model => model.Description, querymodel)
                </td>
            </tr>
        </tfoot>
    </table>
}