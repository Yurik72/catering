@model IEnumerable<CateringPro.Models.Dish>


@inject CateringPro.Core.SharedViewLocalizer Localizer

@{
    var ModelName = Localizer["Dishes"];

    ViewData["Title"] = "Dishes";
}



<div class="container">
    <div class="row justify-content-end">
        <div class="col-md-6 right">
            <h2>@ModelName</h2>
        </div>
        <div class="col-md-6 right">
            <div id="custom-search-input">
                <div class="input-group">
                    <input type="text" id="search-val" class="form-control input-lg" placeholder="@ModelName" />
                    <span class="input-group-btn">
                        <button class="btn btn-info btn-lg" id="search-btn" type="button">
                            <span class="fa fa-search" aria-hidden="true"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12">
            <div id="table-content" class="table-content">

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12 col-md-12 col-lg-12  table-footer bg-white text-success">
            <div id="create-btn" class="col-lg-3 col-md-3 create">
                <span>@Localizer["Create"]</span>
                <span class="fa fa-plus" aria-hidden="true"></span>

            </div>
        </div>
    </div>
</div>

<div id="modDialog" class="modal dishes-modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>
@{
    await Html.RenderPartialAsync("ModalSearch", "Ingredient");
}


@section scripts
{
    <script src="http://malsup.github.com/jquery.form.js"></script>
    <script type="text/javascript">

        $(function () {

            var reload = function (href) {
                 if (!href)
                    href = '/Dishes/ListItems?';
                else
                    href += "&";
                $('#table-content').load(href + 'searchcriteria=' + $('#search-val').val());

            }

            $.ajaxSetup({ cache: false });
            //$('#table-content').load('@Url.Action("ListItems","Dishes", new { searchcriteria = "" })');
            reload();
            $('#search-btn').click(function (e) {
                reload();
            });
            $('#custom-search-input').keydown((event) => {
                if (event.which == 13) {
                    event.preventDefault();
                    reload();
                }
            });
            $('#create-btn').click(function (e) {
                e.preventDefault();
                var url = '@Url.Content("~/Dishes/CreateModal")';
                $.get(url, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
            $(document).on("click", "a.ahead", function (e) {
                e.preventDefault();
                reload(this.href);
            });

            $(document).on("change", "select.col-select-filter", function (e) {
                e.preventDefault();
                var href = $(this).next().attr('href');

                if (href.includes("?")) {
                    href += "&relationfilter=" + $(this).val();
                }
                else {
                     href += "?relationfilter=" + $(this).val();
                }

                reload(href);
            });
            function setupChangesChecker(dlg) {
                $(dlg).attr("_changed", false);
                $(dlg).find("input,textarea").change(function () {
                    $(dlg).attr("_changed", true);
                });
                $(dlg).on('hide.bs.modal', function (e) {
                    if ($(dlg).attr("_changed") == "true") {
                        if (!confirm("There are unsaved changes, please confirm. your input will be lost"))
                            e.preventDefault();
                        $(dlg).attr("_changed", false);
                    }
                });

            }
            $(document).on( "click", "a.dishitem", function(e) {
               e.preventDefault();

                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    //console.log(data);
                    $('#modDialog').attr("data-backdrop", false);
                    $('#modDialog').css("background-color", "rgba(117, 117, 117, 0.5)");
                    $('#modDialog').modal('show');
                    setupChangesChecker($('#modDialog'));

                    var id = $('#dialogContent').find("#Id").val();
                    loadingredients(id);
                    loadingredientsproprotion(id);

                   // $('#dialogContent').find("#nav-tab").tab();
                });
            });

            $(document).on("click", "a.cmd-delete", function (e) {
                e.preventDefault();
                $.get(this.href, function (data) {

                    $('#dialogContent').html(data);

                  //  if (self.options.onloadedcb)
                  //      self.options.onloadedcb();
                });
            });
            function loadingredientsproprotion(id) {
                var url = '@Url.Content("~/Dishes/EditIngredientsProportion/")' + id;

                $.get(url, function (data) {
                    $('#dialogContent').find(".ingredients-content-proportion").html(data);
                    setup_search_ingredients();
                });
            }
            $(document).on("click", "a.delete-ingredients-dishes-line", function (e) {
                e.preventDefault();
                var content = $(this).parents(".ingredients-content-proportion");
                $(this).parents(".ingredient-dishes-line").remove();
                content.find(".ingredient-dishes-line").each(function (lidx, lel) {
                    $(lel).find('input[name*="["]').each(function (idx, el) {
                        var name = $(el).attr('name');
                        //console.log(name);
                        var newname = name.replace(/\[\d+\]/g, `[${lidx}]`);
                        $(el).attr('name', newname);
                        //console.log(newname);
                    });
                });
                $('#modDialog').attr("_changed", true);
            });
            function setup_search_ingredients() {
                setup_search({
                    href: '@Url.Content("~/Ingredients/SearchView")',
                    itemselector: 'a.add-ingredients-dishes-line',
                    classname: 'ingredient',
                    onitemselectedcb: function (src, html_item, item) {
                        var index = $('#dialogContent').find(".ingredients-content-proportion").find(".ingredient-dishes-line").length;
                        var url_newline = `@Url.Content("~/Dishes/NewIngredientDishesLine")?Index=${index}&IngredientId=${item.id}&IngredientName=${item.name}`;
                        $.get(url_newline, function (data) {
                            $('#dialogContent').find(".ingredients-content-proportion").after(data);
                        });
                        $('#modDialog').attr("_changed", true);
                    }
                });
            }
            function loadingredients(id) {
                var url = '@Url.Content("~/Dishes/EditIngredients/")' + id;
              
            }
             function readURL(input) {
                  if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function(e) {
                      $('#imgfilepicture').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                  }
                }
             $(document).on("change","#filepicture",function() {
                  readURL(this);
              });
              $(document).on('click', '[data-save="modal"]', function (event) {
                    event.preventDefault();

                    var form = $(this).parents('.modal-body').find('form');
                    var actionUrl = form.attr('action');
                    //var dataToSend = form.serialize();
                    // var formData = new FormData(form[0]);
                   var formdata = false;
                    if (window.FormData){
                        formdata = new FormData(form[0]);
                    }

                  var formAction = form.attr('action');


                    $.ajax({
                        url         : formAction,
                        data        : formdata ? formdata : form.serialize(),
                        cache       : false,
                        contentType : false,
                        processData : false,
                        type        : 'POST',
                        success     : function(data, textStatus, jqXHR){
                            var isValid = false;

                          if (data && data.res && data.res== "OK")
                                    isValid = true;

                            if (isValid) {
                                      $('#modDialog').attr("_changed", false);
                                      $('#modDialog').modal('hide');
                                      $('#dialogContent').empty();
                                      reload();
                                  }
                                  else {
                                      var newBody = $('.modal-body', data);
                                      $(document).find('.modal-body').replaceWith(newBody);
                                  }
                            }
                    });


                });
        })
    </script>
}
