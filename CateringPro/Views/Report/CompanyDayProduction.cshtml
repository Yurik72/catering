@model CateringPro.Models.DayProductioDayViewModel
@inject CateringPro.Core.SharedViewLocalizer Localizer
@{
    Layout = null;
    List<DayIngredientsDetails> ingLs = new List<DayIngredientsDetails>();
    string code = "";
    DateTime dateFrom = (DateTime)ViewData["datefrom"];
    DateTime dateTo = (DateTime)ViewData["dateTo"]; ;
}



<html>
<head>
    <link href="~/css/invoice.css" type="text/css" rel="stylesheet" />
</head>
<body>
    <div class="invoice-box">
        <table cellpadding="0" cellspacing="0">
            <tr class="top">
                <td colspan="4">
                    <table>
                        <tr>
                            <td class="title">
                                <img src="@Url.Action("GetPicture","Pictures",new { id=@Model.Company.PictureId,width=200,height=100})" style="width:100%; max-width:300px;" />
                            </td>
                            <td>

                                <h1>@Localizer["CompanyDayProduction"]</h1>
                                <br /> @Localizer["DateReport"]: @DateTime.Now.ToShortDateString()
                                <br />@Localizer["Period"]: @dateFrom.ToShortDateString() - @dateTo.ToShortDateString()
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="information ">
                <td colspan="2 ">
                    <table>
                        <tr>
                            <td>
                            </td>
                            <td></td>
                            <td></td>
                            <td>
                        </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="heading ">
                <td style="width: 10%; text-align: left;">
                    @Localizer["Category Code"]
                </td>
                <td style="width: 30%; text-align: left;">
                    @Localizer["Complex Name"]
                </td>
                <td style="width: 20%; text-align: right;">
                    @Localizer["Quantity"]
                </td>
                <td style="width: 20%; text-align: right;">
                    @Localizer["Dish ReadyWeight"] /   @Localizer["Brutto"]
                </td>
                <td style="width: 20%; text-align: right;">
                    @Localizer["Netto"]
                </td>
            </tr>

            @foreach (var day in Model.Days)
            {
                <tr class="item daydate">
                    <td colspan="5">
                        @day.DayDate.ToShortDateString()
                    </td>

                </tr>

                @foreach (var item in day.Items)
                {
                    if (code != item.CategoryName)
                    {
                        <tr class="item daydate">
                            <td colspan="5">
                               @item.CategoryName
                            </td>

                        </tr>
                        code = item.CategoryName;
                    }
        <tr class=" heading">
            <td style="width: 10%; text-align: left;">
                @Html.DisplayFor(model => item.DishCode)
            </td>
            <td style="width: 30%; text-align: left;">
                @Html.DisplayFor(model => item.DishName)
            </td>
            <td style="width: 20%; text-align: right;">
                @Html.DisplayFor(model => item.Quantity)
            </td>
            <td style="width: 20%; text-align: right;">
                @Html.DisplayFor(model => item.ReadyWeight) @Localizer["DishReadyWeightMeasureUnit"]
            </td>
            <td style="width: 20%; text-align: right;">
              
            </td>
        </tr>

        @foreach (var ing in item.Ingridients)
        {
        <tr>
            <td style="width: 10%; text-align: left;"></td>

            <td style="width: 30%; text-align: left;"> 
                @Html.DisplayFor(model => ing.IngredientName)
            </td>
            @{ 
                var res = ing.Quantity * item.Quantity;
                var resnetto = ing.QuantityNetto * item.Quantity;
                if (ingLs.Exists(i => i.IngredientId == ing.IngredientId))
                {
                    var index = ingLs.FindIndex(c => c.IngredientId == ing.IngredientId);
                    ingLs[index].Quantity += res;
                    ingLs[index].QuantityNetto += resnetto;
                }
                else
                {
                    ingLs.Add(new DayIngredientsDetails(ing.IngredientId, ing.IngredientName, res, resnetto, ing.MeasureUnit));
                }
            }
            <td style="width: 20%;"></td>
            <td style="width: 20%; text-align: right">
                @Html.DisplayFor(model => res) @Html.DisplayFor(model => ing.MeasureUnit)

            </td>
            <td style="width: 20%; text-align: right">
                @Html.DisplayFor(model => resnetto) @Html.DisplayFor(model => ing.MeasureUnit)
            </td>
            <td></td>

        </tr>
                    }

                }
            }

            <tr class="total ">
                <td></td>
                <td></td>

                <td>
                </td>
            </tr>
        </table>
        <br />
        <h1>@Localizer["Ingredient"]</h1>
        <table>
            <tr class="heading ">
                <td style="width: 40%; text-align: left;">
                    @Localizer["Ingredient Name"]
                </td>
                <td style="width: 30%; text-align: right">
                    @Localizer["Quantity"]
                </td>
                <td style="width: 30%; text-align: right">
                    @Localizer["Netto"]
                </td>
            </tr>
            @foreach (var ing in ingLs)
            {
        <tr>
            <td style="width: 40%; text-align: left;"> @ing.IngredientName</td>
            <td style="width: 30%; text-align: right"> @ing.Quantity @ing.MeasureUnit</td>
            <td style="width: 30%; text-align: right"> @ing.QuantityNetto @ing.MeasureUnit</td>
        </tr>
            }
        </table>
    </div>
</body>
</html>