@model CateringPro.Models.ProductionForecastViewModel
@inject CateringPro.Core.SharedViewLocalizer Localizer
@{
    Layout = null;
    List<ProductionForecastItemViewModel> peridRep = new List<ProductionForecastItemViewModel>();
    DateTime dateFrom = (DateTime)ViewData["datefrom"];
    DateTime dateTo = (DateTime)ViewData["dateTo"];
}



<html>
<head>
    <link href="~/css/invoice.css" type="text/css" rel="stylesheet" />
</head>
<body>
    <div class="production-forecast-box">
        <table cellpadding="0" cellspacing="0">
            <tr class="top">
                <td colspan="4">
                    <table>
                        <tr>
                            <td style="width:20%;" class="title">
                                <img src="@Url.Action("GetPicture","Pictures",new { id=@Model.Company.PictureId,width=200,height=100})" style="width:100%; max-width:300px;" />
                            </td>
                            <td style="width:80%;">

                                <h1>@Localizer["CompanyDayProductionForecast"]</h1>
                                <br /> @Localizer["DateReport"]: @DateTime.Now.ToShortDateString()
                                <br />@Localizer["Period"]: @dateFrom.ToShortDateString() - @dateTo.ToShortDateString()
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="information ">
                <td colspan="2 ">
                    <table>
                        <tr>
                            <td>
                            </td>
                            <td></td>
                            <td></td>
                            <td>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr class="heading ">
                <td style="width:30%;text-align: left;">
                    @Localizer["Name"]
                </td>
                <td style="width:20%;text-align: right;">
                    @Localizer["ValueBef"]
                </td>
                <td style="width:20%;text-align: right;">
                    @Localizer["Need"]
                </td>
                <td style="width:20%;text-align: right;">
                    @Localizer["ValueAft"]
                </td>

                <td style="width:10%;text-align: right;">
                    @Localizer["Ingredients_MeasureUnit"]
                </td>
            </tr>

            @foreach (var day in Model.Days)
            {
                @*<tr class="item daydate">
                <td colspan="5">
                    @day.Daydate.ToShortDateString()
                </td>

            </tr>*@
                @foreach (var item in day.Items)
                {
                    if (peridRep.Exists(i => i.IngredientId == item.IngredientId))
                    {
                        var index = peridRep.FindIndex(c => c.IngredientId == item.IngredientId);
                        peridRep[index].ProductionQuantity += item.ProductionQuantity;
                        peridRep[index].AfterDayStockValue = item.AfterDayStockValue;
                    }
                    else
                    {
                        peridRep.Add(new ProductionForecastItemViewModel()
                        {
                            IngredientId = item.IngredientId,
                            Name = item.Name,
                            BeginDay = item.BeginDay,
                            ProductionQuantity = item.ProductionQuantity,
                            AfterDayStockValue = item.AfterDayStockValue,
                            IngredientCategoriesName = item.IngredientCategoriesName,
                            MeasureUnit = item.MeasureUnit
                        });
                    }
                    @*<tr class="item">
                    <td>
                        @Html.DisplayFor(model => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.BeginDay)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.ProductionQuantity)
                    </td>
                    <td class="@(item.AfterDayStockValue<0?"warning":"")">
                        @Html.DisplayFor(model => item.AfterDayStockValue)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.MeasureUnit)
                    </td>
                </tr>*@
                }
            }
            @* period item start*@
            @if (@Model.Days.Count() > 0)
            {
                @if (@Model.Days.FirstOrDefault().Daydate != @Model.Days.LastOrDefault().Daydate)
                {
                    <tr class="item daydate"><td colspan="5">@Model.Days.FirstOrDefault().Daydate.ToShortDateString() - @Model.Days.LastOrDefault().Daydate.ToShortDateString()</td></tr>
                }
                else
                {
                    <tr class="item daydate"><td colspan="5">@Model.Days.FirstOrDefault().Daydate.ToShortDateString()</td></tr>
                }
            }
            @{
                peridRep.GroupBy(it => it.IngredientId).SelectMany(c => c).ToList();
                int ingId = -1;
            }
            @foreach (var item in peridRep)
            {
                @if (ingId != item.IngredientCategoriesId)
                {
                    <tr><td class="dish">@Html.DisplayFor(model => item.IngredientCategoriesName)</td></tr>
                    ingId = item.IngredientCategoriesId;
                }
                <tr class="item">
                    <td style="width:30%;text-align: left;">
                        @Html.DisplayFor(model => item.Name)
                    </td>
                    <td style="width:20%;text-align: right;">
                        @Html.DisplayFor(model => item.BeginDay)
                    </td>
                    <td style="width:20%;text-align: right;">
                        @Html.DisplayFor(model => item.ProductionQuantity)
                    </td>
                    <td class="@(item.AfterDayStockValue < 0 ? "warning" : "")" style="width:20%;text-align: right;">
                        @Html.DisplayFor(model => item.AfterDayStockValue)
                    </td>
                    <td style="width:0%;text-align: right;">
                        @Html.DisplayFor(model => item.MeasureUnit)
                    </td>
                </tr>
            }
            @* period item end*@



            <tr class="total ">
                <td></td>
                <td></td>

                <td>
                </td>
            </tr>
        </table>
    </div>
</body>
</html>