@{
    ViewData["Title"] = "Окно выдачи заказов";
    Layout = null;
    int numDishes = 5;
}


<!doctype html>
<html lang="en">

<head>
    <link rel="stylesheet" href="~/css/service.css">
    <link rel="stylesheet" href="~/css/bootstrap.min.css" />
</head>
<body>
    <header class="main-header">

        <h1>Окно выдачи заказов</h1>
        <h1 id="currentdate"></h1>
    </header>

<div class="container order-service">
        <div class="row">
            <div class="col-12 container-state">
                <span id="isonline" class="service-status online">Online</span>
                <span id="isoffline" class="service-status offline">Offline</span>
                <span id="error" class="service-status error" style="visibility:hidden"></span>
            </div>
        </div>
        <div class="row dishes-num">
            <div class="col-2 container-order-dish-select">
                <span data-num="-1" class="order-dish-select welcome ">Welcome</span>
            </div>
            @for (int i = 1; i <= numDishes; i++)
            {
                <div class="col-2 container-order-dish-select">
                    <span data-num="@i" class="order-dish-select dish">@i Блюдо</span>
                </div>
            }
        </div>
        <div class="row delivery-command">
            <div class="col-3">
                <button id="btnstart" class="service-action btn btn-success">Почати</button>
            </div>
            <div class="col-3">
                <button id="btnstop" class="service-action btn btn-danger">Припинити</button>
            </div>
        </div>
        <div id="userinfo" class="row" style="display: none;">
            <div class="col-4">
                <label for="userid">userid</label>
                <input id="userid" />
            </div>
            <div class="col-4">
                <button id="btnsend" class="service-action btn btn-primary">Send</button>
            </div>
        </div>
        <div id="delivery-dishes-row" class="row" style="display: none;">
            <div id="delivery-dishes-content" class="col-12 delivery-dishes-content">

            </div>
        </div>
        <div id="delivery-queue-row" class="row" style="display: none;">
            <div  class="col-12">
                <div id="delivery-queue-content" class="container  delivery-queue-content">

                </div>
            </div>
        </div>
</div>

    <script src="./js/jquery.min.js"></script>
@*
    <script src="./js/service.js"></script>
*@
    <script>
        $(function () {
            var isStarted = false;
            var isQueueMode = true;
            var actionUrl = "/Service/Status";
            var ServiceRequest = { DayDate: '01.01.2010' };
            var el_online = $("#isonline");
            var el_offline = $("#isoffline");
            var el_error = $("#error");
            el_online.hide();
            el_online.hide();
            el_offline.hide();

            var curr_date = new Date();

            $('#currentdate').text(curr_date.getDate() + "." + (curr_date.getMonth() + 1) + "." + curr_date.getFullYear());

            $.post(actionUrl, ServiceRequest).done(function (data, statusText, xhr) {
                el_offline.hide();
                el_online.show();
            })
            .fail(function (xhr, code, error) {
                el_offline.show();
                el_online.hide();
            });
            function IsWelcomeMode() {
                return $(".order-dish-select.welcome").hasClass('active');
            }
            $(".order-dish-select").click(function (e) {
                e.preventDefault();
                if (isStarted)
                    return;
                var dishnum = parseInt($(this).attr('data-num'));
                if (dishnum > 0 && IsWelcomeMode())
                    return;

                if ($(this).hasClass('active')) {
                    $(this).removeClass('active');
                }
                else {
                    $(this).addClass('active')
                    if (dishnum < 0)
                        $(".order-dish-select.dish").removeClass('active');
                }

            });
            refreshState();
            function getdishesnum() {
                return $('.dishes-num').find('.order-dish-select.active').map(function (index, element) {
                    return parseInt($(element).attr('data-num'));
                }).get();
            }
            function refreshDeliveryContentState() {
                if (isQueueMode) {
                    $('#delivery-dishes-row').hide();
                    $('#delivery-queue-row').show();
                } else {
                    $('#delivery-dishes-row').show();
                    $('#delivery-queue-row').hide();
                }
            }
            function refreshState() {
                $("#btnstart").prop('disabled', isStarted);
                $("#btnstop").prop('disabled', !isStarted);
                $("#btnsend").prop('disabled', !isStarted);
                if (isStarted) {


                }
                else {

                }
            }
            function getnewQueue() {

            }
            $('#btnstart').click(function (e) {
                e.preventDefault();
                isStarted = true;
                refreshState();
                refreshDeliveryContentState();
                if (isQueueMode) {
                   
                    requestfordeliveryQueue(fillQueue);
                }
            });
            $('#btnstop').click(function (e) {
                e.preventDefault();
                isStarted = false;
                refreshState();
            });
            $('#btnsend').click(function (e) {
                e.preventDefault();
                requestfordelivery(filldeliverydishes);

            });
            function getQueueCount() {
                return $('#delivery-queue-content').find("user-queue").length;
            }
            function fillQueue(data) {
                var queunum = getQueueCount()+1;
               // $('#delivery-queue-content').empty(); // to do
                if (!data || data.overalResult != "success") {
                    
                }
                data.queues.forEach(el => {
                    var inner_div = el.dishes.map(function (element, index) {
                        return `<span class="queue-dish" data-queueid="${el.queueId}" data-id=${element.id}>${element.name}</span> `;
                    });
                    var div = $(`<div class="row user-queue" data-number="${queunum}">
                                    <div class="col-4 queue-user">
                                        <span class="queue-username" >${el.userName}</span>
                                    </div>
                                    <div class="col-4 queue-dishes">
                                        ${inner_div}
                                     </div>
                                </div>`);
                    $('#delivery-queue-content').append(div);
                    $('#delivery-queue-content').find(".user-queue").removeClass("queue-first");
                    $('#delivery-queue-content').find(".user-queue").first().addClass("queue-first");
                });
            }
            function filldeliverydishes(data) {
                $('#delivery-dishes-content').empty();
                if (!data || data.overalResult != "success") {
                    
                    var div = `<div class="row"><div class="col-8 container-errordelivery"><span class="errordelivery">Помилка:${data.errorMessage}</span></div></div>`;
                    $('#delivery-dishes-content').append(div);
                }
                else if( !Array.isArray(data.dishes) || data.dishes.length == 0 ) {
                    var div = `<div class="row"><div class="col-8 container-wrongdelivery"><span class="wrongdelivery">Кошик пустий</span></div></div>`;
                    $('#delivery-dishes-content').append(div);
                }
                else {
                    var dishesid = data.dishes.map(function (index, element) { return element.id;});
                    data.dishes.forEach(el => {
                        var div = $(`<div class="row"><div class="col-8 container-deliverydish"><span class="deliverydish" data-id="${el.id}">${el.name}</span></div></div>`);
                        $('#delivery-dishes-content').append(div);
                    });
                    var divconfirm = $(`<div class="row"><div class="col-8 class="button-deliverydish"><button id="delivery-confirm">Пiдвердити</button></div></div>`);
                    $('#delivery-dishes-content').append(divconfirm);
                    divconfirm.find("#delivery-confirm").click(function (e) {
                        e.preventDefault();
                        requestforconfirmation(confirmdeliverydishes,dishesid);
                       
                    });
                }
            }
            function confirmdeliverydishes(data) {
               
                if (!data || data.overalresult != "success") {
                    var div = `<div class="row"><div class="col-8 container-errordelivery"><span class="errordelivery">Помилка${data.errormessage}</span></div></div>`;
                    $('#delivery-dishes-content').append(div);
                } else {
                    $('#delivery-dishes-content').empty();
                }
            }
            function requestforconfirmation(cb,dishesids) {
                var actionUrl = "/Service/RequestForDelivery";
                var dishesnum = getdishesnum();
                var ServiceRequest = { DayDate: curr_date.toDateString(), UserId: $('#userid').val(), Type: "confirmdelivery", DishesIds: dishesids };
                $.post(actionUrl, ServiceRequest).done(function (data, statusText, xhr) {
                    cb(data);
                })
                    .fail(function (xhr, code, error) {
                        el_error.val(error);
                        el_error.show();
                    });
            }
            function requestfordeliveryQueue(cb) {
                var actionUrl = "/Service/RequestForDelivery";
                var dishesnum = getdishesnum();
                var requesttype = 'askforqueue';

                var ServiceRequest = { DayDate: curr_date.toDateString(),  Type: requesttype, DishesNum: dishesnum };
                $.post(actionUrl, ServiceRequest).done(function (data, statusText, xhr) {
                    cb(data);
                })
                    .fail(function (xhr, code, error) {
                        el_error.val(error);
                        el_error.show();
                    });
            }
            function requestfordelivery(cb) {
                var actionUrl = "/Service/RequestForDelivery";
                var dishesnum = getdishesnum();
                var requesttype = 'askfordelivery';
                if (IsWelcomeMode())
                    requesttype = 'askforregister';
                var ServiceRequest = { DayDate: curr_date.toDateString(), UserId: $('#userid').val(), Type: requesttype, DishesNum: dishesnum };
                $.post(actionUrl, ServiceRequest).done(function (data, statusText, xhr) {
                    cb(data);
                })
                .fail(function (xhr, code, error) {
                    el_error.val(error);
                    el_error.show();
                });
            }
        });
    </script>
</body>
</html>