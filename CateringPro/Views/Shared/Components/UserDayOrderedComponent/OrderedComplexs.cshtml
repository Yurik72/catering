@model IEnumerable<CateringPro.Models.UserDayComplexViewModel>

@using CateringPro.Core
@inject Microsoft.Extensions.Options.IOptions<UIOption> pageOptions
@inject CateringPro.Core.SharedViewLocalizer Localizer
@{
    ViewData["Title"] = "EditDay";
    bool allowEdit = (bool)ViewData["AllowEdit"];
}
@{
    DateTime daydate = DateTime.Now;
    
}
@* bootstrap0 grid system *@
    <div class="dayComplexBag border border-success rounded">
        @if (Model.Count() > 0)
    {
        <div class="row total-order-row">
            <div class="col ">
                <span class="fa fa-shopping-cart fa-2x "></span>
            </div>
            <div class="col ">
                @if (Model.First().Confirmed)
                {
                    <span class="confirmed fa fa-check fa-2x text-success"></span>
                }
            </div>
            <div class="col ">
                <span class="total">@Localizer["Order Total"]</span>
            </div>
            <div class="col ">
                <span class="totalcomplex-quantity"> @Model.Sum(it => it.Quantity) </span>
            </div>

            <div class="col ">
                <span class="totalcomplex-amount">@Model.Sum(it => it.Quantity * it.Price) </span>
                <span>@pageOptions.Value.CurrencySymbol</span>


            </div>

        </div>
        @foreach (var item in Model)
        {
        <div class="userDayComplexBag">
            @if (item.Quantity > 0)
                {

            <div class="row dayComplexBag">
                <div class="col col-md-2">

                    @Html.HiddenFor(modelItem => item.ComplexId, new { datafield = "ComplexID" })

                    @Html.DisplayFor(modelItem => item.ComplexName)
                </div>
                <div class="col col-md-2">

                    @Html.DisplayFor(modelItem => item.ComplexCategoryName)
                </div>

                <div class="col-3">
                    @string.Format("{0:0.00}{1}", item.Price, pageOptions.Value.CurrencySymbol)

                </div>
                <div class="col col-1 ">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </div>
                <div class="col col-2 show-details">

                    <span class="fa fa-info fa-2x" aria-hidden="true"></span>

                </div>
                <div class="col col-2 delete-line">
                   @* <span class=" cmd-delete dialog-edit-icon fa fa-trash fa-2x delete-complex" complexId="@item.ComplexId" date="@item.Date" aria-hidden="true"></span>*@
                    <span class="fa fa-trash fa-2x delete-complex" complexId="@item.ComplexId" date="@item.Date" aria-hidden="true"></span>
                   
                </div>

            </div>
            <div class="bagDayComplexItem table-responsive">
                <table class="table table-hover shopping-cart-wrap">
                    <thead class="text-muted">
                        <tr>
                            <th scope="col">@Localizer["DishPictureTab"]</th>
                            <th scope="col">@Localizer["Dish Name"]</th>
                            <th scope="col">@Localizer["Dish ReadyWeight"]</th>
                            <th scope="col">@Localizer["Dish Description"]</th>
                            <th scope="col">@Localizer["DishQuantity"]</th>
                        </tr>
                    </thead>
                    <tbody>


                        @foreach (var dish in item.ComplexDishes)
                                {
                        <tr>

                            @*<div class="row ">*@
                            @*<div class="col">
                            @(dish.DishCourse+1)
                            </div>*@

                            <td>
                                @(dish.DishCourse+1)
                                <img src="@Url.Action("GetPicture", "Pictures", new { id = dish.PictureId, width = 50, height = 50 })" style="width:50px;height:50px;" />


                            </td>
                            <td>
                                @*<input data-val="true" name="UserDayDish[@com].DishId" type="hidden" value="@dish.DishId">
                                <input data-val="true" name="UserDayDish[@com].ComplexId" type="hidden" value="@item.ComplexId">
                                <input data-val="true" name="UserDayDish[@com].Date" type="hidden" value="@item.Date">
                                <input data-val="true" name="UserDayDish[@com].IsComplex" type="hidden" value="True">*@
                                @*@Html.HiddenFor(modelItem => dish.DishId, new { datafield = "DishID" })*@

                                @Html.DisplayFor(modelItem => dish.DishName)

                            </td>

                            <td>
                                @String.Format("{0:f0}", dish.DishReadyWeight) @Localizer["DishReadyWeightMeasureUnit"]

                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => dish.DishDescription)
                                <p />
                                @Html.DisplayFor(modelItem => dish.DishIngredients)
                            </td>
                            @*<div class="col col-lg-4 col-md-4 col-4 small">


                            </div>*@

                            <td>


                                @Html.DisplayFor(modelItem => dish.DishQuantity, new { htmlAttributes = new { datafield = "Quantity" } })


                            </td>




                        </tr>
                                }

                    </tbody>
                </table>
            </div>

                }
        </div>
        }

    @*<button type="button" button class="btn btn-primary" data-action="payuserdaycomplex">@Localizer["MyOrdersPayment"]</button>*@
    }
    </div>
