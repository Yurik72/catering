@model IEnumerable<CateringPro.Models.UserDayComplexViewModel>

@using CateringPro.Core
@inject Microsoft.Extensions.Options.IOptions<UIOption> pageOptions
@inject CateringPro.Core.SharedViewLocalizer Localizer
@{
    ViewData["Title"] = "EditDay";
     bool allowEdit = (bool)ViewData["AllowEdit"];
}
@{
    DateTime daydate = DateTime.Now;

}
@* bootstrap0 grid system *@

    <div class="userdaycomplex">
        @if (Model.Count() > 0)
        {
            @foreach (var item in Model)
            {


                <div class="container daydish-complex-content border rounded" data-form="userdaycomplex">
                    <div class="row">
                        <div class="col col-lg-12 col-md-12 complex-menu-header">
                            <span>@Localizer["Complex Dishes"]</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="container daycomplex-item">
                            <div class="row row-daycomplex" data-form="userdaycomplexitem">
                                <div class="col col-lg-5 col-md-5 col-sm-5">

                                    @Html.HiddenFor(modelItem => item.ComplexId, new { datafield = "ComplexID" })
                                    @Html.HiddenFor(modelItem => item.Price, new { datafield = "Price" })
                                    @Html.HiddenFor(modelItem => item.Date, new { datafield = "Date" })

                                    @Html.DisplayFor(modelItem => item.ComplexName)
                                </div>
                                <div class="col col-lg-3 col-md-3 col-sm-3">
                                    @string.Format("{0:0.00}{1}", item.Price, pageOptions.Value.CurrencySymbol)

                                </div>
                                <div class="col col-lg-4 col-md-4 col-sm-4">
                                    @Html.EditorFor(modelItem => item.Quantity, new { htmlAttributes = new { datafield = "Quantity", @class = "numberspinner" } })
                                </div>
                            </div>
                            @foreach (var dish in item.ComplexDishes)
                            {
                        <div class="row row-daycomplex-item">

                            <div class="col col-md-2">
                                <img src="@Url.Action("GetPicture", "Pictures", new { id = dish.PictureId, width = 50, height = 50 })" style="width:50px;height:50px;" />


                            </div>
                            <div class="col col-lg-2 col-md-2 col-2">

                                @Html.HiddenFor(modelItem => dish.DishId, new { datafield = "DishID" })

                                @Html.DisplayFor(modelItem => dish.DishName)
                            </div>

                            <div class="col col-lg-2 col-md-2 col-2 small">
                                @String.Format("{0:f3}", dish.DishReadyWeight)@Localizer["DishReadyWeightMeasureUnit"]
                               
                            </div>
                            <div class="col col-lg-4 col-md-4 col-4 small">
                                @Html.DisplayFor(modelItem => dish.DishDescription)
                                <p />
                                @Html.DisplayFor(modelItem => dish.DishIngredients)
                            </div>

                            <div class="col col-lg-2 col-md-2 col-2 small">


                            </div>


                        </div>
                            }
                        </div>
                    </div>
                </div>
            }

            <div class="container  border rounded daycomplex-footer">
                <div class="row total-order-row">
                    <div class="col col-lg-1 col-md-1 col-1">
                    </div>

                    <div class="col col-lg-6 col-md-6 col-6">
                        <span class="total">@Localizer["Order Total"]</span>
                    </div>
                    <div class="col col-lg-2 col-md-2 col-2">
                        <span class="totalcomplex-quantity"> @Model.Sum(it => it.Quantity) </span>
                    </div>

                    <div class="col col-lg-3 col-md-3 col-3">
                        <span class="totalcomplex-amount">@Model.Sum(it => it.Quantity * it.Price) </span>
                        <span>@pageOptions.Value.CurrencySymbol</span>


                    </div>

                </div>
                <div class="row daycomplex-footer-cmd">
                    <div class="col col-lg-1 col-md-1 col-1 col-sm-1">
                    </div>
                    <div class="col col-lg-4 col-md-4 col-4 col-sm-4">
                        @if (allowEdit)
                        {
                            <button type="button" button class="btn btn-primary" data-action="saveuserdaycomplex">@Localizer["MyOrdersSave"]</button>
                        }
                    </div>
                    <div class="col col-lg-1 col-md-1 col-1 col-sm-1">
                    </div>
                    <div class="col col-lg-4 col-md-4 col-4 col-sm-4">
                        <button type="button" button class="btn btn-primary" data-action="payuserdaycomplex">@Localizer["MyOrdersPayment"]</button>
                    </div>
                </div>
            </div>

        }
        else
        {
            <h2 class="text-center">@Localizer["NoDishesAtThisDay"]</h2>
        }
    </div>
